{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from\"react-redux\";import Toolbar from'../components/TopologyToolbar';import Header from\"../components/Header\";import Sidebar from\"../components/Sidebar\";import TopologyDiagram from'../components/TopologyDiagram';import IconModule from'../IconModule';import RestApiModule from'../RestApiModule';var WDM=/*#__PURE__*/function(_React$Component){_inherits(WDM,_React$Component);function WDM(props){var _this;_classCallCheck(this,WDM);_this=_possibleConstructorReturn(this,_getPrototypeOf(WDM).call(this,props));_this._isMounted=false;_this.state={graph:null,labels:null};_this.unformatedData=null;_this.restApi=new RestApiModule();return _this;}_createClass(WDM,[{key:\"componentDidMount\",value:function componentDidMount(){this._isMounted=true;this.getWdmTopologyData();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;}},{key:\"getWdmTopologyData\",value:function getWdmTopologyData(){var _this2=this;this.restApi.callApi('wdm',{token:this.props.token}).then(function(response){if(_this2._isMounted)_this2.prepareData(response.WDMTopologyViewData);}).catch(function(error){console.log(error);});}},{key:\"prepareData\",value:function prepareData(json){var nodes=[],edges=[],labels=[];var Icons=new IconModule();var Site=Icons.getIconForNode('AGGREGATE_SITE');var graph=null;function pushItem(label){labels.push(label);nodes.push({id:label,label:label,shape:'image',font:{color:'black',size:13},image:Site});}if(json){json.map(function(item){var indexA=nodes.findIndex(function(data){return data.label===item.A_SIDE_SITE;});var indexZ=nodes.findIndex(function(data){return data.label===item.Z_SIDE_SITE;});if(indexA<0){pushItem(item.A_SIDE_SITE);}if(indexZ<0){pushItem(item.Z_SIDE_SITE);}var title=\"<strong>Name: </strong>\".concat(item.NAME,\"<br /><strong>Status: </strong>\").concat(item.STATUS,\"<br />\");title+=\"<strong>A Side Equip: </strong>\".concat(item.A_SIDE_SITE,\"<br />\");title+=\"<strong>Z Side Equip: </strong>\".concat(item.Z_SIDE_SITE);edges.push({from:item.A_SIDE_SITE,to:item.Z_SIDE_SITE,title:title});});graph={nodes:nodes,edges:edges};this.unformatedData=graph;this.setState({graph:graph});this.setState({labels:labels.sort()});}}},{key:\"handleSelectNode\",value:function handleSelectNode(selectedNodeId){var _this3=this;var newGraph;return _regeneratorRuntime.async(function handleSelectNode$(_context){while(1){switch(_context.prev=_context.next){case 0:newGraph=JSON.parse(JSON.stringify(this.unformatedData));if(newGraph){newGraph.nodes.map(function(node){if(node.label===selectedNodeId){node.font={color:'red',size:_this3.props.fontSize};}});this.setState({graph:newGraph});}case 2:case\"end\":return _context.stop();}}},null,this);}},{key:\"render\",value:function render(){var _this$props=this.props,language=_this$props.language,maximize=_this$props.maximize,contentCSS=_this$props.contentCSS;var graph=this.state.graph;if(language!==null&&graph!==null){return React.createElement(React.Fragment,null,React.createElement(Header,null),React.createElement(\"div\",{className:\"row h-100\"},React.createElement(Sidebar,{maximize:maximize}),React.createElement(\"div\",{className:contentCSS},React.createElement(Toolbar,{wrapper:'card mt-3',labels:this.state.labels,handleSelectNode:this.handleSelectNode.bind(this),diagramAreaId:'WdmTopology',snapshotFileName:'WdmTopology.png'}),React.createElement(\"div\",{id:'WdmTopology',className:'card mt-3 fixedCard'},React.createElement(\"label\",{className:'topologyViewHeader'},language.wdmTopology),React.createElement(\"hr\",null),React.createElement(\"div\",{className:\"card-body\"},React.createElement(TopologyDiagram,{graph:this.state.graph}))))));}else{return React.createElement(React.Fragment,null);}}}]);return WDM;}(React.Component);function mapStateToProps(state){return{token:state.token,language:state.language,maximize:state.maximize,contentCSS:state.contentCSS,fontSize:state.topologySelectedNodeFontSize};}export default connect(mapStateToProps)(WDM);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/views/Wdm.jsx"],"names":["React","connect","Toolbar","Header","Sidebar","TopologyDiagram","IconModule","RestApiModule","WDM","props","_isMounted","state","graph","labels","unformatedData","restApi","getWdmTopologyData","callApi","token","then","response","prepareData","WDMTopologyViewData","catch","error","console","log","json","nodes","edges","Icons","Site","getIconForNode","pushItem","label","push","id","shape","font","color","size","image","map","item","indexA","findIndex","data","A_SIDE_SITE","indexZ","Z_SIDE_SITE","title","NAME","STATUS","from","to","setState","sort","selectedNodeId","newGraph","JSON","parse","stringify","node","fontSize","language","maximize","contentCSS","handleSelectNode","bind","wdmTopology","Component","mapStateToProps","topologySelectedNodeFontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Toolbar from '../components/TopologyToolbar'\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport TopologyDiagram from '../components/TopologyDiagram'\r\n\r\nimport IconModule from '../IconModule';\r\nimport RestApiModule from '../RestApiModule'\r\n\r\nclass WDM extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            graph: null,\r\n            labels: null\r\n        }\r\n\r\n        this.unformatedData = null\r\n\r\n        this.restApi = new RestApiModule();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.getWdmTopologyData();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    getWdmTopologyData() {\r\n\r\n        this.restApi.callApi('wdm', {\r\n            token: this.props.token\r\n\r\n        }).then((response) => {\r\n            if (this._isMounted)\r\n                this.prepareData(response.WDMTopologyViewData);\r\n\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    prepareData(json) {\r\n\r\n        const nodes = [], edges = [], labels = [];\r\n        const Icons = new IconModule();\r\n        const Site = Icons.getIconForNode('AGGREGATE_SITE');\r\n\r\n        let graph = null;\r\n\r\n        function pushItem(label) {\r\n\r\n            labels.push(label);\r\n\r\n            nodes.push({\r\n                id: label,\r\n                label,\r\n                shape: 'image',\r\n                font: {color: 'black', size: 13},\r\n                image: Site\r\n            })\r\n        }\r\n\r\n        if (json) {\r\n\r\n            json.map((item) => {\r\n                const indexA = nodes.findIndex(data => data.label === item.A_SIDE_SITE);\r\n                const indexZ = nodes.findIndex(data => data.label === item.Z_SIDE_SITE);\r\n\r\n                if (indexA < 0) {\r\n                    pushItem(item.A_SIDE_SITE)\r\n                }\r\n\r\n                if (indexZ < 0) {\r\n                    pushItem(item.Z_SIDE_SITE)\r\n                }\r\n\r\n                let title = `<strong>Name: </strong>${item.NAME}<br /><strong>Status: </strong>${item.STATUS}<br />`;\r\n                title += `<strong>A Side Equip: </strong>${item.A_SIDE_SITE}<br />`;\r\n                title += `<strong>Z Side Equip: </strong>${item.Z_SIDE_SITE}`;\r\n\r\n                edges.push({\r\n                    from: item.A_SIDE_SITE,\r\n                    to: item.Z_SIDE_SITE,\r\n                    title: title\r\n                });\r\n\r\n            });\r\n\r\n            graph = {\r\n                nodes,\r\n                edges\r\n            };\r\n\r\n            this.unformatedData = graph;\r\n            this.setState({graph});\r\n            this.setState({labels: labels.sort()});\r\n        }\r\n    }\r\n\r\n    async handleSelectNode(selectedNodeId) {\r\n\r\n        let newGraph = JSON.parse(JSON.stringify(this.unformatedData));\r\n        if (newGraph) {\r\n            newGraph.nodes.map((node) => {\r\n                if (node.label === selectedNodeId) {\r\n                    node.font = {color: 'red', size: this.props.fontSize}\r\n                }\r\n            });\r\n            this.setState({graph: newGraph});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {language, maximize, contentCSS} = this.props;\r\n        const {graph} = this.state;\r\n\r\n        if (language !== null && graph !== null) {\r\n\r\n            return (\r\n                <>\r\n                    <Header/>\r\n                    <div className=\"row h-100\">\r\n                        <Sidebar maximize={maximize}/>\r\n                        <div className={contentCSS}>\r\n                            <Toolbar wrapper={'card mt-3'}\r\n                                     labels={this.state.labels}\r\n                                     handleSelectNode={this.handleSelectNode.bind(this)}\r\n                                     diagramAreaId={'WdmTopology'}\r\n                                     snapshotFileName={'WdmTopology.png'}\r\n                            />\r\n                            <div id={'WdmTopology'}  className={'card mt-3 fixedCard'}>\r\n                                <label className={'topologyViewHeader'} >{language.wdmTopology}</label>\r\n                                <hr />\r\n                                <div className=\"card-body\">\r\n                                    <TopologyDiagram\r\n                                        graph={this.state.graph}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        token: state.token,\r\n        language: state.language,\r\n        maximize: state.maximize,\r\n        contentCSS: state.contentCSS,\r\n        fontSize: state.topologySelectedNodeFontSize\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WDM);"]},"metadata":{},"sourceType":"module"}