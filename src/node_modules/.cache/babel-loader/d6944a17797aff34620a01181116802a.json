{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\src\\\\components\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport RouteModule from '../RouteModule';\nimport Forbidden from '../views/403';\nimport NotFound from '../views/404';\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const {\n    authUser,\n    location\n  } = rest;\n  const routes = new RouteModule();\n  const requestedPath = location.pathname;\n  let route = routes.getRoute(requestedPath);\n\n  if (route.status === 200 && authUser !== null && !authUser.role.permittedPages.includes(requestedPath)) {\n    route.status = 403;\n    route.route.component = Forbidden;\n    route.route.exact = false;\n  } else if (route.status === 404) {\n    route.route.component = NotFound;\n  }\n\n  rest = { ...rest,\n    ...route.route\n  };\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    React.createElement(Route, Object.assign({}, rest, {\n      render: props => localStorage.getItem('e2eToken') ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }))\n  );\n};","map":{"version":3,"sources":["C:/Users/soperasyon27/Desktop/FE/src18mart/src/src/components/PrivateRoute.jsx"],"names":["React","Route","Redirect","RouteModule","Forbidden","NotFound","PrivateRoute","component","Component","rest","authUser","location","routes","requestedPath","pathname","route","getRoute","status","role","permittedPages","includes","exact","props","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAE7D,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBF,IAA7B;AAEA,QAAMG,MAAM,GAAG,IAAIT,WAAJ,EAAf;AACA,QAAMU,aAAa,GAAGF,QAAQ,CAACG,QAA/B;AAEA,MAAIC,KAAK,GAAGH,MAAM,CAACI,QAAP,CAAgBH,aAAhB,CAAZ;;AAEA,MAAIE,KAAK,CAACE,MAAN,KAAiB,GAAjB,IACAP,QAAQ,KAAK,IADb,IAEA,CAACA,QAAQ,CAACQ,IAAT,CAAcC,cAAd,CAA6BC,QAA7B,CAAsCP,aAAtC,CAFL,EAE2D;AAEvDE,IAAAA,KAAK,CAACE,MAAN,GAAe,GAAf;AACAF,IAAAA,KAAK,CAACA,KAAN,CAAYR,SAAZ,GAAwBH,SAAxB;AACAW,IAAAA,KAAK,CAACA,KAAN,CAAYM,KAAZ,GAAoB,KAApB;AAEH,GARD,MAQO,IAAIN,KAAK,CAACE,MAAN,KAAiB,GAArB,EAA0B;AAC7BF,IAAAA,KAAK,CAACA,KAAN,CAAYR,SAAZ,GAAwBF,QAAxB;AACH;;AAEDI,EAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAAU,OAAGM,KAAK,CAACA;AAAnB,GAAP;AAEA;AAAA;AAEI;AACA;AACA,wBAAC,KAAD,oBAAWN,IAAX;AAAiB,MAAA,MAAM,EAAEa,KAAK,IAC1BC,YAAY,CAACC,OAAb,CAAqB,UAArB,iBACM,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADN,gBAEM,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAUH,CAjCM","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport RouteModule from '../RouteModule';\r\nimport Forbidden from '../views/403';\r\nimport NotFound from '../views/404'\r\n\r\n\r\nexport const PrivateRoute = ({component: Component, ...rest}) => {\r\n\r\n    const {authUser, location} = rest;\r\n\r\n    const routes = new RouteModule();\r\n    const requestedPath = location.pathname;\r\n\r\n    let route = routes.getRoute(requestedPath);\r\n\r\n    if (route.status === 200 &&\r\n        authUser !== null &&\r\n        !authUser.role.permittedPages.includes(requestedPath)) {\r\n\r\n        route.status = 403;\r\n        route.route.component = Forbidden;\r\n        route.route.exact = false;\r\n\r\n    } else if (route.status === 404) {\r\n        route.route.component = NotFound;\r\n    }\r\n\r\n    rest = {...rest, ...route.route};\r\n\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            localStorage.getItem('e2eToken')\r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/login\" />\r\n        )} />\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}