{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from\"react-redux\";import{setLang as _setLang}from\"../redux/actions\";// Language files\nimport en from'../languages/en';import fr from'../languages/fr';var LanguageButton=/*#__PURE__*/function(_React$Component){_inherits(LanguageButton,_React$Component);var _super=_createSuper(LanguageButton);function LanguageButton(){_classCallCheck(this,LanguageButton);return _super.apply(this,arguments);}_createClass(LanguageButton,[{key:\"changeLanguage\",value:function changeLanguage(){if(this.props.lang==='en'){this.props.setLang(fr,'fr');}else{this.props.setLang(en,'en');}}},{key:\"render\",value:function render(){var _this$props=this.props,language=_this$props.language,lang=_this$props.lang,editOn=_this$props.editOn,buttonClass=_this$props.buttonClass;if(language){return/*#__PURE__*/React.createElement(\"button\",{className:buttonClass,disabled:editOn,\"data-place\":'bottom',\"data-tip\":language.languageButtonText,onClick:this.changeLanguage.bind(this)},/*#__PURE__*/React.createElement(\"i\",{className:'icon icon-language mr-2'}),/*#__PURE__*/React.createElement(\"span\",{className:\"mr-1\"},language[lang]));}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}}}]);return LanguageButton;}(React.Component);function mapStateToProps(state){return{language:state.language,lang:state.lang,editOn:state.editOn};}function mapDispatchToProps(dispatch){return{setLang:function setLang(langFile,lang){return dispatch(_setLang(langFile,lang));}};}export default connect(mapStateToProps,mapDispatchToProps)(LanguageButton);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/components/LanguageButton.jsx"],"names":["React","connect","setLang","en","fr","LanguageButton","props","lang","language","editOn","buttonClass","languageButtonText","changeLanguage","bind","Component","mapStateToProps","state","mapDispatchToProps","dispatch","langFile"],"mappings":"woBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,OAAO,GAAPA,CAAAA,QAAR,KAAsB,kBAAtB,CAEA;AACA,MAAOC,CAAAA,EAAP,KAAe,iBAAf,CACA,MAAOC,CAAAA,EAAP,KAAe,iBAAf,C,GAEMC,CAAAA,c,kTAEe,CAEb,GAAI,KAAKC,KAAL,CAAWC,IAAX,GAAoB,IAAxB,CAA8B,CAC1B,KAAKD,KAAL,CAAWJ,OAAX,CAAmBE,EAAnB,CAAuB,IAAvB,EACH,CAFD,IAEO,CACH,KAAKE,KAAL,CAAWJ,OAAX,CAAmBC,EAAnB,CAAuB,IAAvB,EACH,CACJ,C,uCAEQ,iBACyC,KAAKG,KAD9C,CACEE,QADF,aACEA,QADF,CACYD,IADZ,aACYA,IADZ,CACkBE,MADlB,aACkBA,MADlB,CAC0BC,WAD1B,aAC0BA,WAD1B,CAGL,GAAIF,QAAJ,CAAc,CACV,mBACI,8BAAQ,SAAS,CAAEE,WAAnB,CACQ,QAAQ,CAAED,MADlB,CAEQ,aAAY,QAFpB,CAGQ,WAAUD,QAAQ,CAACG,kBAH3B,CAIQ,OAAO,CAAE,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAJjB,eAKI,yBAAG,SAAS,CAAE,yBAAd,EALJ,cAMI,4BAAM,SAAS,CAAC,MAAhB,EAAwBL,QAAQ,CAACD,IAAD,CAAhC,CANJ,CADJ,CAUH,CAXD,IAWO,CACH,mBACI,wCADJ,CAGH,CAEJ,C,4BA/BwBP,KAAK,CAACc,S,EAiCnC,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHR,QAAQ,CAAEQ,KAAK,CAACR,QADb,CAEHD,IAAI,CAAES,KAAK,CAACT,IAFT,CAGHE,MAAM,CAAEO,KAAK,CAACP,MAHX,CAAP,CAKH,CAED,QAASQ,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHhB,OAAO,CAAE,iBAACiB,QAAD,CAAWZ,IAAX,QAAoBW,CAAAA,QAAQ,CAAChB,QAAO,CAACiB,QAAD,CAAWZ,IAAX,CAAR,CAA5B,EADN,CAAP,CAGH,CAED,cAAeN,CAAAA,OAAO,CAACc,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CZ,cAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {setLang} from \"../redux/actions\";\r\n\r\n// Language files\r\nimport en from '../languages/en';\r\nimport fr from '../languages/fr';\r\n\r\nclass LanguageButton extends React.Component {\r\n\r\n    changeLanguage() {\r\n\r\n        if (this.props.lang === 'en') {\r\n            this.props.setLang(fr, 'fr');\r\n        } else {\r\n            this.props.setLang(en, 'en');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {language, lang, editOn, buttonClass} = this.props;\r\n\r\n        if (language) {\r\n            return(\r\n                <button className={buttonClass}\r\n                        disabled={editOn}\r\n                        data-place={'bottom'}\r\n                        data-tip={language.languageButtonText}\r\n                        onClick={this.changeLanguage.bind(this)}>\r\n                    <i className={'icon icon-language mr-2'}/>\r\n                    <span className='mr-1'>{language[lang]}</span>\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        language: state.language,\r\n        lang: state.lang,\r\n        editOn: state.editOn\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setLang: (langFile, lang) => dispatch(setLang(langFile, lang))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageButton);"]},"metadata":{},"sourceType":"module"}