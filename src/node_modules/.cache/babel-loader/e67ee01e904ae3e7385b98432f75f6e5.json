{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from\"react-redux\";import{Input}from'reactstrap';import{setSelectedRegion as _setSelectedRegion}from\"../redux/actions\";var SelectRegion=/*#__PURE__*/function(_React$Component){_inherits(SelectRegion,_React$Component);var _super=_createSuper(SelectRegion);function SelectRegion(){_classCallCheck(this,SelectRegion);return _super.apply(this,arguments);}_createClass(SelectRegion,[{key:\"handleSelectedRegion\",value:function(){var _handleSelectedRegion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ev){var val;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:val=ev.target.value;val=+val===0?this.props.regions[0]:val;_context.next=4;return this.props.setSelectedRegion(val);case 4:this.props.handleRegionChange(true);// this should return true to parent for reset activePage value;\ncase 5:case\"end\":return _context.stop();}}},_callee,this);}));function handleSelectedRegion(_x){return _handleSelectedRegion.apply(this,arguments);}return handleSelectedRegion;}()},{key:\"render\",value:function render(){var _this$props=this.props,language=_this$props.language,regions=_this$props.regions,editOn=_this$props.editOn;if(language&&regions){return/*#__PURE__*/React.createElement(Input,{type:'select',className:'custom-select',disabled:editOn,onChange:this.handleSelectedRegion.bind(this)},/*#__PURE__*/React.createElement(\"option\",{value:\"0\"},language.loadByRegion),regions.map(function(value){return/*#__PURE__*/React.createElement(\"option\",{key:value,value:value},value);}));}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}}}]);return SelectRegion;}(React.Component);function mapStateToProps(state){return{language:state.language,token:state.token,regions:state.regions,editOn:state.editOn};}function mapDispatchToProps(dispatch){return{setSelectedRegion:function setSelectedRegion(region){dispatch(_setSelectedRegion(region));}};}export default connect(mapStateToProps,mapDispatchToProps)(SelectRegion);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/SelectRegion.jsx"],"names":["React","connect","Input","setSelectedRegion","SelectRegion","ev","val","target","value","props","regions","handleRegionChange","language","editOn","handleSelectedRegion","bind","loadByRegion","map","Component","mapStateToProps","state","token","mapDispatchToProps","dispatch","region"],"mappings":"usCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,KAAoB,YAApB,CACA,OAAQC,iBAAiB,GAAjBA,CAAAA,kBAAR,KAAgC,kBAAhC,C,GAEMC,CAAAA,Y,mYAEyBC,E,0HACnBC,G,CAAMD,EAAE,CAACE,MAAH,CAAUC,K,CAEpBF,GAAG,CAAG,CAACA,GAAD,GAAS,CAAT,CAAa,KAAKG,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CAAb,CAAqCJ,GAA3C,C,sBAEM,MAAKG,KAAL,CAAWN,iBAAX,CAA6BG,GAA7B,C,QACN,KAAKG,KAAL,CAAWE,kBAAX,CAA8B,IAA9B,EAAoC;0NAG/B,iBAC+B,KAAKF,KADpC,CACEG,QADF,aACEA,QADF,CACYF,OADZ,aACYA,OADZ,CACqBG,MADrB,aACqBA,MADrB,CAGL,GAAID,QAAQ,EAAIF,OAAhB,CAAyB,CACrB,mBACI,oBAAC,KAAD,EAAO,IAAI,CAAE,QAAb,CAAuB,SAAS,CAAE,eAAlC,CACO,QAAQ,CAAEG,MADjB,CAEI,QAAQ,CAAE,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAFd,eAII,8BAAQ,KAAK,CAAC,GAAd,EAAmBH,QAAQ,CAACI,YAA5B,CAJJ,CAKKN,OAAO,CAACO,GAAR,CAAY,SAACT,KAAD,CAAW,CACpB,mBAAQ,8BAAQ,GAAG,CAAEA,KAAb,CAAoB,KAAK,CAAEA,KAA3B,EAAmCA,KAAnC,CAAR,CACH,CAFA,CALL,CADJ,CAYH,CAbD,IAaO,CACH,mBACI,wCADJ,CAGH,CACJ,C,0BAhCsBR,KAAK,CAACkB,S,EAmCjC,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHR,QAAQ,CAAEQ,KAAK,CAACR,QADb,CAEHS,KAAK,CAAED,KAAK,CAACC,KAFV,CAGHX,OAAO,CAAEU,KAAK,CAACV,OAHZ,CAIHG,MAAM,CAAEO,KAAK,CAACP,MAJX,CAAP,CAMH,CACD,QAASS,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHpB,iBAAiB,CAAE,2BAACqB,MAAD,CAAY,CAACD,QAAQ,CAACpB,kBAAiB,CAACqB,MAAD,CAAlB,CAAR,CAAoC,CADjE,CAAP,CAGH,CAED,cAAevB,CAAAA,OAAO,CAACkB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6ClB,YAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Input} from 'reactstrap';\r\nimport {setSelectedRegion} from \"../redux/actions\";\r\n\r\nclass SelectRegion extends React.Component {\r\n\r\n    async handleSelectedRegion(ev) {\r\n        let val = ev.target.value;\r\n\r\n        val = +val === 0 ? this.props.regions[0] : val;\r\n\r\n        await this.props.setSelectedRegion(val);\r\n        this.props.handleRegionChange(true) // this should return true to parent for reset activePage value;\r\n    }\r\n\r\n    render() {\r\n        const {language, regions, editOn} = this.props;\r\n\r\n        if (language && regions) {\r\n            return (\r\n                <Input type={'select'} className={'custom-select'}\r\n                       disabled={editOn}\r\n                    onChange={this.handleSelectedRegion.bind(this)}\r\n                >\r\n                    <option value=\"0\">{language.loadByRegion}</option>\r\n                    {regions.map((value) => {\r\n                        return (<option key={value} value={value}>{value}</option>)\r\n                    })\r\n                    }\r\n                </Input>\r\n            )\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        language: state.language,\r\n        token: state.token,\r\n        regions: state.regions,\r\n        editOn: state.editOn\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setSelectedRegion: (region) => {dispatch(setSelectedRegion(region))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectRegion);"]},"metadata":{},"sourceType":"module"}