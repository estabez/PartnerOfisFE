{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';import RouteModule from'../RouteModule';import Forbidden from'../views/403';import NotFound from'../views/404';export var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var _rest=rest,authUser=_rest.authUser,location=_rest.location;var routes=new RouteModule();var requestedPath=location.pathname;var route=routes.getRoute(requestedPath);if(route.status===200&&authUser!==null&&!authUser.role.permittedPages.includes(requestedPath)){route.status=403;route.route.component=Forbidden;route.route.exact=false;}else if(route.status===404){route.route.component=NotFound;}rest=_objectSpread({},rest,{},route.route);return(// Show the component only when the user is logged in\n// Otherwise, redirect the user to /signin page\nReact.createElement(Route,Object.assign({},rest,{render:function render(props){return localStorage.getItem('e2eToken')?React.createElement(Component,props):React.createElement(Redirect,{to:\"/login\"});}})));};","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/PrivateRoute.jsx"],"names":["React","Route","Redirect","RouteModule","Forbidden","NotFound","PrivateRoute","Component","component","rest","authUser","location","routes","requestedPath","pathname","route","getRoute","status","role","permittedPages","includes","exact","props","localStorage","getItem"],"mappings":"qWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CAGA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAqC,IAAxBC,CAAAA,SAAwB,MAAnCC,SAAmC,CAAVC,IAAU,wDAEhCA,IAFgC,CAEtDC,QAFsD,OAEtDA,QAFsD,CAE5CC,QAF4C,OAE5CA,QAF4C,CAI7D,GAAMC,CAAAA,MAAM,CAAG,GAAIT,CAAAA,WAAJ,EAAf,CACA,GAAMU,CAAAA,aAAa,CAAGF,QAAQ,CAACG,QAA/B,CAEA,GAAIC,CAAAA,KAAK,CAAGH,MAAM,CAACI,QAAP,CAAgBH,aAAhB,CAAZ,CAEA,GAAIE,KAAK,CAACE,MAAN,GAAiB,GAAjB,EACAP,QAAQ,GAAK,IADb,EAEA,CAACA,QAAQ,CAACQ,IAAT,CAAcC,cAAd,CAA6BC,QAA7B,CAAsCP,aAAtC,CAFL,CAE2D,CAEvDE,KAAK,CAACE,MAAN,CAAe,GAAf,CACAF,KAAK,CAACA,KAAN,CAAYP,SAAZ,CAAwBJ,SAAxB,CACAW,KAAK,CAACA,KAAN,CAAYM,KAAZ,CAAoB,KAApB,CAEH,CARD,IAQO,IAAIN,KAAK,CAACE,MAAN,GAAiB,GAArB,CAA0B,CAC7BF,KAAK,CAACA,KAAN,CAAYP,SAAZ,CAAwBH,QAAxB,CACH,CAEDI,IAAI,kBAAOA,IAAP,IAAgBM,KAAK,CAACA,KAAtB,CAAJ,CAEA,MAEI;AACA;AACA,oBAAC,KAAD,kBAAWN,IAAX,EAAiB,MAAM,CAAE,gBAAAa,KAAK,QAC1BC,CAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EACM,oBAAC,SAAD,CAAeF,KAAf,CADN,CAEM,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAHoB,EAA9B,GAJJ,EAUH,CAjCM","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport RouteModule from '../RouteModule';\r\nimport Forbidden from '../views/403';\r\nimport NotFound from '../views/404'\r\n\r\n\r\nexport const PrivateRoute = ({component: Component, ...rest}) => {\r\n\r\n    const {authUser, location} = rest;\r\n\r\n    const routes = new RouteModule();\r\n    const requestedPath = location.pathname;\r\n\r\n    let route = routes.getRoute(requestedPath);\r\n\r\n    if (route.status === 200 &&\r\n        authUser !== null &&\r\n        !authUser.role.permittedPages.includes(requestedPath)) {\r\n\r\n        route.status = 403;\r\n        route.route.component = Forbidden;\r\n        route.route.exact = false;\r\n\r\n    } else if (route.status === 404) {\r\n        route.route.component = NotFound;\r\n    }\r\n\r\n    rest = {...rest, ...route.route};\r\n\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            localStorage.getItem('e2eToken')\r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/login\" />\r\n        )} />\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}