{"ast":null,"code":"/*\r\n* Alert module\r\n* Use for notify user, show error messages\r\n*\r\n*/\nimport Swal from 'sweetalert2';\nimport store from './redux/store';\nimport { setToken, setAuthUser } from './redux/actions';\n\nclass AlertModule {\n  showMessage(type, title, message, loginFailedError) {\n    Swal.fire({\n      title: title,\n      html: message,\n      icon: type,\n      allowOutsideClick: false,\n      showCancelButton: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'OK'\n    }).then(result => {\n      if (result.value) {\n        if (loginFailedError) {\n          store.dispatch(setAuthUser(null));\n          store.dispatch(setToken(null));\n          document.location = process.env.NODE_ENV !== 'development' ? `${process.env.PUBLIC_URL}` : '/';\n        } else {\n          Swal.close();\n        }\n      }\n    });\n    document.body.classList.remove('swal2-height-auto');\n  }\n\n  getConfirmation(type, title, message) {\n    document.body.classList.remove('swal2-height-auto');\n    return new Promise((res, rej) => {\n      Swal.fire({\n        title: title,\n        html: message,\n        icon: type,\n        allowOutsideClick: false,\n        showCancelButton: true,\n        allowEscapeKey: false,\n        allowEnterKey: false,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'OK'\n      }).then(result => {\n        res(result.value);\n      });\n    });\n  }\n\n}\n\nexport default AlertModule;","map":{"version":3,"sources":["C:/Users/soperasyon27/Desktop/FE/src18mart/src/src/AlertModule.js"],"names":["Swal","store","setToken","setAuthUser","AlertModule","showMessage","type","title","message","loginFailedError","fire","html","icon","allowOutsideClick","showCancelButton","allowEscapeKey","allowEnterKey","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","dispatch","document","location","process","env","NODE_ENV","PUBLIC_URL","close","body","classList","remove","getConfirmation","Promise","res","rej"],"mappings":"AAAA;;;;;AAMA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,iBAApC;;AAEA,MAAMC,WAAN,CAAkB;AAEdC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,gBAAvB,EAAyC;AAEhDT,IAAAA,IAAI,CAACU,IAAL,CAAU;AACNH,MAAAA,KAAK,EAAEA,KADD;AAENI,MAAAA,IAAI,EAAEH,OAFA;AAGNI,MAAAA,IAAI,EAAEN,IAHA;AAINO,MAAAA,iBAAiB,EAAE,KAJb;AAKNC,MAAAA,gBAAgB,EAAE,KALZ;AAMNC,MAAAA,cAAc,EAAE,KANV;AAONC,MAAAA,aAAa,EAAE,KAPT;AAQNC,MAAAA,kBAAkB,EAAE,SARd;AASNC,MAAAA,iBAAiB,EAAE,MATb;AAUNC,MAAAA,iBAAiB,EAAE;AAVb,KAAV,EAWGC,IAXH,CAWSC,MAAD,IAAY;AAChB,UAAIA,MAAM,CAACC,KAAX,EAAkB;AACd,YAAIb,gBAAJ,EAAsB;AAElBR,UAAAA,KAAK,CAACsB,QAAN,CAAepB,WAAW,CAAC,IAAD,CAA1B;AACAF,UAAAA,KAAK,CAACsB,QAAN,CAAerB,QAAQ,CAAC,IAAD,CAAvB;AACAsB,UAAAA,QAAQ,CAACC,QAAT,GAAoBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAA0C,GAAEF,OAAO,CAACC,GAAR,CAAYE,UAAW,EAAnE,GAAuE,GAA3F;AACH,SALD,MAKO;AACH7B,UAAAA,IAAI,CAAC8B,KAAL;AACH;AACJ;AACJ,KAtBD;AAwBAN,IAAAA,QAAQ,CAACO,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,mBAA/B;AACH;;AAEDC,EAAAA,eAAe,CAAC5B,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuB;AAElCgB,IAAAA,QAAQ,CAACO,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,mBAA/B;AAEA,WAAO,IAAIE,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAE7BrC,MAAAA,IAAI,CAACU,IAAL,CAAU;AACNH,QAAAA,KAAK,EAAEA,KADD;AAENI,QAAAA,IAAI,EAAEH,OAFA;AAGNI,QAAAA,IAAI,EAAEN,IAHA;AAINO,QAAAA,iBAAiB,EAAE,KAJb;AAKNC,QAAAA,gBAAgB,EAAE,IALZ;AAMNC,QAAAA,cAAc,EAAE,KANV;AAONC,QAAAA,aAAa,EAAE,KAPT;AAQNC,QAAAA,kBAAkB,EAAE,SARd;AASNC,QAAAA,iBAAiB,EAAE,MATb;AAUNC,QAAAA,iBAAiB,EAAE;AAVb,OAAV,EAWGC,IAXH,CAWSC,MAAD,IAAY;AAEhBe,QAAAA,GAAG,CAACf,MAAM,CAACC,KAAR,CAAH;AACH,OAdD;AAeH,KAjBM,CAAP;AAqBH;;AAxDa;;AA2DlB,eAAelB,WAAf","sourcesContent":["/*\r\n* Alert module\r\n* Use for notify user, show error messages\r\n*\r\n*/\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport store from './redux/store'\r\nimport {setToken, setAuthUser} from './redux/actions'\r\n\r\nclass AlertModule {\r\n\r\n    showMessage(type, title, message, loginFailedError) {\r\n\r\n        Swal.fire({\r\n            title: title,\r\n            html: message,\r\n            icon: type,\r\n            allowOutsideClick: false,\r\n            showCancelButton: false,\r\n            allowEscapeKey: false,\r\n            allowEnterKey: false,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'OK'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                if (loginFailedError) {\r\n\r\n                    store.dispatch(setAuthUser(null));\r\n                    store.dispatch(setToken(null));\r\n                    document.location = process.env.NODE_ENV !== 'development' ? `${process.env.PUBLIC_URL}` : '/';\r\n                } else {\r\n                    Swal.close();\r\n                }\r\n            }\r\n        })\r\n\r\n        document.body.classList.remove('swal2-height-auto');\r\n    }\r\n\r\n    getConfirmation(type, title, message) {\r\n\r\n        document.body.classList.remove('swal2-height-auto');\r\n\r\n        return new Promise((res, rej) => {\r\n\r\n            Swal.fire({\r\n                title: title,\r\n                html: message,\r\n                icon: type,\r\n                allowOutsideClick: false,\r\n                showCancelButton: true,\r\n                allowEscapeKey: false,\r\n                allowEnterKey: false,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'OK'\r\n            }).then((result) => {\r\n\r\n                res(result.value)\r\n            })\r\n        })\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default AlertModule;"]},"metadata":{},"sourceType":"module"}