{"ast":null,"code":"// CONSTS\nexport var SET_LANG='SET_LANG';export var SET_AUTH_USER='SET_AUTH_USER';export var SET_MAXIMIZE='SET_MAXIMIZE';export var SET_TOKEN='SET_TOKEN';export var SET_COMPANY='SET_COMPANY';export var SET_REGIONS='SET_REGIONS';export var SET_REGION='SET_REGION';export var SET_RADIO_SITES='SET_RADIO_SITES';export var SET_RADIO_SITE='SET_RADIO_SITE';// MODAL CONSTS\nexport var MODAL_TOGGLE='MODAL_TOGGLE';export var MODAL_TITLE='MODAL_TITLE';// MODAL IMPORT CONSTS\nexport var MODAL_IMPORT_TOGGLE='MODAL_IMPORT_TOGGLE';// SPINNER CONSTS\nexport var SPINNER_TOGGLE='SPINNER_TOGGLE';// MODAL Export CONSTS\nexport var MODAL_EXPORT_TOGGLE='MODAL_EXPORT_TOGGLE';//EXCEL TO JSON CONSTS\nexport var HANDLE_FILE='HANDLE_FILE';// TOPOLOGY CONSTS\nexport var SET_TOPOLOGY_FIRST_LEVEL='SET_TOPOLOGY_FIRST_LEVEL';export var SET_TOPOLOGY_SECOND_LEVEL='SET_TOPOLOGY_SECOND_LEVEL';export var SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS='SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS';// EDIT ON HANDSONTABLE\nexport var EDIT_ON_TOGGLE=\"EDIT_ON_TOGGLE\";//SET IMPORT POLLING\nexport var IMPORT_POLLING='IMPORT_POLLING';// SHOW REVISION DATA\nexport var SHOW_REVISION=\"SHOW_REVISION\";// Language settings\nexport var setLang=function setLang(langFile,lang){return{type:SET_LANG,payload:{langFile:langFile,lang:lang}};};// Save the authenticated user data into redux\nexport var setAuthUser=function setAuthUser(user){return{type:SET_AUTH_USER,user:user};};// Save provided web token from server\nexport var setToken=function setToken(token){return{type:SET_TOKEN,token:token};};export var setCompany=function setCompany(company){return{type:SET_COMPANY,company:company};};// set user regions into redux\nexport var setRegions=function setRegions(regions){return{type:SET_REGIONS,regions:regions};};// set selected region from selection component\nexport var setSelectedRegion=function setSelectedRegion(region){return{type:SET_REGION,region:region};};// set region's radio sites into redux\nexport var setRadioSites=function setRadioSites(radioSites){return{type:SET_RADIO_SITES,radioSites:radioSites};};// set selected radio site from selection component\nexport var setSelectedRadioSite=function setSelectedRadioSite(radioSite){return{type:SET_RADIO_SITE,radioSite:radioSite};};// Maximizing setting for content and toolbar\nexport var setMaximize=function setMaximize(){return{type:SET_MAXIMIZE};};// Show second level topology diagram in modal window for ran\n// modalToggle first state is false, modal will show if this value change to true.\nexport var modalToggle=function modalToggle(){return{type:MODAL_TOGGLE};};// Set the modal window title\nexport var modalTitle=function modalTitle(title){return{type:MODAL_TITLE,title:title};};//Modal IMport toggle\nexport var modalImportToggle=function modalImportToggle(){return{type:MODAL_IMPORT_TOGGLE};};//Modal Export toggle\nexport var modalExportToggle=function modalExportToggle(){return{type:MODAL_EXPORT_TOGGLE};};//Spinner toggle\nexport var spinnerToggle=function spinnerToggle(){return{type:SPINNER_TOGGLE};};//Excel to JSON handler\nexport var handleFile=function handleFile(){return{type:HANDLE_FILE};};// Topology diagram default state graph data\nexport var setTopologyFirstLevel=function setTopologyFirstLevel(data){return{type:SET_TOPOLOGY_FIRST_LEVEL,payload:{data:data}};};// Topology diagram second state graph data. This is only need for ran topology\nexport var setTopologySecondLevel=function setTopologySecondLevel(data){return{type:SET_TOPOLOGY_SECOND_LEVEL,payload:{data:data}};};// Topology diagram second level dropdown labels, this is only need for ran topology second level\nexport var setTopologySecondLevelDropdownLabels=function setTopologySecondLevelDropdownLabels(data){return{type:SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS,payload:{data:data}};};// Edit mode flag on handsontable\nexport var editOnToggle=function editOnToggle(){return{type:EDIT_ON_TOGGLE};};// Set import polling redux\nexport var setImportPolling=function setImportPolling(data){return{type:IMPORT_POLLING,data:data};};// Set show revision flag\nexport var setShowRevision=function setShowRevision(){return{type:SHOW_REVISION};};","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/redux/actions/index.js"],"names":["SET_LANG","SET_AUTH_USER","SET_MAXIMIZE","SET_TOKEN","SET_COMPANY","SET_REGIONS","SET_REGION","SET_RADIO_SITES","SET_RADIO_SITE","MODAL_TOGGLE","MODAL_TITLE","MODAL_IMPORT_TOGGLE","SPINNER_TOGGLE","MODAL_EXPORT_TOGGLE","HANDLE_FILE","SET_TOPOLOGY_FIRST_LEVEL","SET_TOPOLOGY_SECOND_LEVEL","SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS","EDIT_ON_TOGGLE","IMPORT_POLLING","SHOW_REVISION","setLang","langFile","lang","type","payload","setAuthUser","user","setToken","token","setCompany","company","setRegions","regions","setSelectedRegion","region","setRadioSites","radioSites","setSelectedRadioSite","radioSite","setMaximize","modalToggle","modalTitle","title","modalImportToggle","modalExportToggle","spinnerToggle","handleFile","setTopologyFirstLevel","data","setTopologySecondLevel","setTopologySecondLevelDropdownLabels","editOnToggle","setImportPolling","setShowRevision"],"mappings":"AAAA;AACA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,UAAjB,CACP,MAAO,IAAMC,CAAAA,aAAa,CAAG,eAAtB,CACP,MAAO,IAAMC,CAAAA,YAAY,CAAG,cAArB,CACP,MAAO,IAAMC,CAAAA,SAAS,CAAG,WAAlB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,YAAnB,CACP,MAAO,IAAMC,CAAAA,eAAe,CAAG,iBAAxB,CACP,MAAO,IAAMC,CAAAA,cAAc,CAAG,gBAAvB,CAEP;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,cAArB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CAEP;AACA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAEP;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,gBAAvB,CAEP;AACA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAEP;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CAEP;AACA,MAAO,IAAMC,CAAAA,wBAAwB,CAAG,0BAAjC,CACP,MAAO,IAAMC,CAAAA,yBAAyB,CAAG,2BAAlC,CACP,MAAO,IAAMC,CAAAA,yCAAyC,CAAG,2CAAlD,CAEP;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,gBAAvB,CAEP;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,gBAAvB,CAEP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,eAAtB,CAEP;AACA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAWC,IAAX,QAAqB,CACxCC,IAAI,CAAExB,QADkC,CAExCyB,OAAO,CAAE,CACLH,QAAQ,CAARA,QADK,CAELC,IAAI,CAAJA,IAFK,CAF+B,CAArB,EAAhB,CAQP;AACA,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,QAAW,CAClCH,IAAI,CAAEvB,aAD4B,CAElC0B,IAAI,CAAJA,IAFkC,CAAX,EAApB,CAKP;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,QAAY,CAChCL,IAAI,CAAErB,SAD0B,CAEhC0B,KAAK,CAALA,KAFgC,CAAZ,EAAjB,CAKP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAAc,CACpCP,IAAI,CAAEpB,WAD8B,CAEpC2B,OAAO,CAAPA,OAFoC,CAAd,EAAnB,CAKP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAAc,CACpCT,IAAI,CAAEnB,WAD8B,CAEpC4B,OAAO,CAAPA,OAFoC,CAAd,EAAnB,CAKP;AACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,QAAa,CAC1CX,IAAI,CAAElB,UADoC,CAE1C6B,MAAM,CAANA,MAF0C,CAAb,EAA1B,CAKP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,UAAD,QAAiB,CAC1Cb,IAAI,CAAEjB,eADoC,CAE1C8B,UAAU,CAAVA,UAF0C,CAAjB,EAAtB,CAKP;AACA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,SAAD,QAAgB,CAChDf,IAAI,CAAEhB,cAD0C,CAEhD+B,SAAS,CAATA,SAFgD,CAAhB,EAA7B,CAKP;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAO,CAC9BhB,IAAI,CAAEtB,YADwB,CAAP,EAApB,CAIP;AACA;AACA,MAAO,IAAMuC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAO,CAC9BjB,IAAI,CAAEf,YADwB,CAAP,EAApB,CAIP;AACA,MAAO,IAAMiC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,QAAY,CAClCnB,IAAI,CAAEd,WAD4B,CAElCiC,KAAK,CAALA,KAFkC,CAAZ,EAAnB,CAKP;AACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAO,CACpCpB,IAAI,CAAEb,mBAD8B,CAAP,EAA1B,CAIP;AACA,MAAO,IAAMkC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAO,CACpCrB,IAAI,CAAEX,mBAD8B,CAAP,EAA1B,CAIP;AACA,MAAO,IAAMiC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAO,CAChCtB,IAAI,CAACZ,cAD2B,CAAP,EAAtB,CAKP;AACA,MAAO,IAAMmC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAO,CAC7BvB,IAAI,CAAEV,WADuB,CAAP,EAAnB,CAIP;AACA,MAAO,IAAMkC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,IAAD,QAAW,CAC5CzB,IAAI,CAAET,wBADsC,CAE5CU,OAAO,CAAE,CACLwB,IAAI,CAAJA,IADK,CAFmC,CAAX,EAA9B,CAOP;AACA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACD,IAAD,QAAW,CAC7CzB,IAAI,CAAER,yBADuC,CAE7CS,OAAO,CAAE,CACLwB,IAAI,CAAJA,IADK,CAFoC,CAAX,EAA/B,CAOP;AACA,MAAO,IAAME,CAAAA,oCAAoC,CAAG,QAAvCA,CAAAA,oCAAuC,CAACF,IAAD,QAAW,CAC3DzB,IAAI,CAAEP,yCADqD,CAE3DQ,OAAO,CAAE,CACLwB,IAAI,CAAJA,IADK,CAFkD,CAAX,EAA7C,CAOP;AACA,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAO,CAC/B5B,IAAI,CAAEN,cADyB,CAAP,EAArB,CAIP;AACA,MAAO,IAAMmC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,IAAD,QAAW,CACvCzB,IAAI,CAAEL,cADiC,CAEvC8B,IAAI,CAAJA,IAFuC,CAAX,EAAzB,CAKP;AACA,MAAO,IAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAO,CAClC9B,IAAI,CAAEJ,aAD4B,CAAP,EAAxB","sourcesContent":["// CONSTS\r\nexport const SET_LANG = 'SET_LANG';\r\nexport const SET_AUTH_USER = 'SET_AUTH_USER';\r\nexport const SET_MAXIMIZE = 'SET_MAXIMIZE';\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\nexport const SET_COMPANY = 'SET_COMPANY';\r\nexport const SET_REGIONS = 'SET_REGIONS';\r\nexport const SET_REGION = 'SET_REGION';\r\nexport const SET_RADIO_SITES = 'SET_RADIO_SITES';\r\nexport const SET_RADIO_SITE = 'SET_RADIO_SITE';\r\n\r\n// MODAL CONSTS\r\nexport const MODAL_TOGGLE = 'MODAL_TOGGLE';\r\nexport const MODAL_TITLE = 'MODAL_TITLE';\r\n\r\n// MODAL IMPORT CONSTS\r\nexport const MODAL_IMPORT_TOGGLE = 'MODAL_IMPORT_TOGGLE';\r\n\r\n// SPINNER CONSTS\r\nexport const SPINNER_TOGGLE = 'SPINNER_TOGGLE';\r\n\r\n// MODAL Export CONSTS\r\nexport const MODAL_EXPORT_TOGGLE = 'MODAL_EXPORT_TOGGLE';\r\n\r\n//EXCEL TO JSON CONSTS\r\nexport const HANDLE_FILE = 'HANDLE_FILE';\r\n\r\n// TOPOLOGY CONSTS\r\nexport const SET_TOPOLOGY_FIRST_LEVEL = 'SET_TOPOLOGY_FIRST_LEVEL';\r\nexport const SET_TOPOLOGY_SECOND_LEVEL = 'SET_TOPOLOGY_SECOND_LEVEL';\r\nexport const SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS = 'SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS';\r\n\r\n// EDIT ON HANDSONTABLE\r\nexport const EDIT_ON_TOGGLE = \"EDIT_ON_TOGGLE\";\r\n\r\n//SET IMPORT POLLING\r\nexport const IMPORT_POLLING = 'IMPORT_POLLING';\r\n\r\n// SHOW REVISION DATA\r\nexport const SHOW_REVISION = \"SHOW_REVISION\";\r\n\r\n// Language settings\r\nexport const setLang = (langFile, lang) => ({\r\n    type: SET_LANG,\r\n    payload: {\r\n        langFile,\r\n        lang\r\n    }\r\n});\r\n\r\n// Save the authenticated user data into redux\r\nexport const setAuthUser = (user) => ({\r\n    type: SET_AUTH_USER,\r\n    user\r\n});\r\n\r\n// Save provided web token from server\r\nexport const setToken = (token) => ({\r\n    type: SET_TOKEN,\r\n    token\r\n});\r\n\r\nexport const setCompany = (company) => ({\r\n    type: SET_COMPANY,\r\n    company\r\n});\r\n\r\n// set user regions into redux\r\nexport const setRegions = (regions) => ({\r\n    type: SET_REGIONS,\r\n    regions\r\n});\r\n\r\n// set selected region from selection component\r\nexport const setSelectedRegion = (region) => ({\r\n    type: SET_REGION,\r\n    region\r\n});\r\n\r\n// set region's radio sites into redux\r\nexport const setRadioSites = (radioSites) => ({\r\n    type: SET_RADIO_SITES,\r\n    radioSites\r\n});\r\n\r\n// set selected radio site from selection component\r\nexport const setSelectedRadioSite = (radioSite) => ({\r\n    type: SET_RADIO_SITE,\r\n    radioSite\r\n});\r\n\r\n// Maximizing setting for content and toolbar\r\nexport const setMaximize = () => ({\r\n    type: SET_MAXIMIZE\r\n});\r\n\r\n// Show second level topology diagram in modal window for ran\r\n// modalToggle first state is false, modal will show if this value change to true.\r\nexport const modalToggle = () => ({\r\n    type: MODAL_TOGGLE\r\n});\r\n\r\n// Set the modal window title\r\nexport const modalTitle = (title) => ({\r\n    type: MODAL_TITLE,\r\n    title\r\n});\r\n\r\n//Modal IMport toggle\r\nexport const modalImportToggle = () => ({\r\n    type: MODAL_IMPORT_TOGGLE\r\n});\r\n\r\n//Modal Export toggle\r\nexport const modalExportToggle = () => ({\r\n    type: MODAL_EXPORT_TOGGLE\r\n});\r\n\r\n//Spinner toggle\r\nexport const spinnerToggle = () => ({\r\n    type:SPINNER_TOGGLE\r\n});\r\n\r\n\r\n//Excel to JSON handler\r\nexport const handleFile = () => ({\r\n    type: HANDLE_FILE\r\n});\r\n\r\n// Topology diagram default state graph data\r\nexport const setTopologyFirstLevel = (data) => ({\r\n    type: SET_TOPOLOGY_FIRST_LEVEL,\r\n    payload: {\r\n        data\r\n    }\r\n});\r\n\r\n// Topology diagram second state graph data. This is only need for ran topology\r\nexport const setTopologySecondLevel = (data) => ({\r\n    type: SET_TOPOLOGY_SECOND_LEVEL,\r\n    payload: {\r\n        data\r\n    }\r\n});\r\n\r\n// Topology diagram second level dropdown labels, this is only need for ran topology second level\r\nexport const setTopologySecondLevelDropdownLabels = (data) => ({\r\n    type: SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS,\r\n    payload: {\r\n        data\r\n    }\r\n});\r\n\r\n// Edit mode flag on handsontable\r\nexport const editOnToggle = () => ({\r\n    type: EDIT_ON_TOGGLE\r\n});\r\n\r\n// Set import polling redux\r\nexport const setImportPolling = (data) => ({\r\n    type: IMPORT_POLLING,\r\n    data\r\n})\r\n\r\n// Set show revision flag\r\nexport const setShowRevision = () => ({\r\n    type: SHOW_REVISION\r\n})\r\n"]},"metadata":{},"sourceType":"module"}