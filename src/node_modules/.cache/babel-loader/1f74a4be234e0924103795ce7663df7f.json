{"ast":null,"code":"import { SET_LANG, SET_AUTH_USER, SET_MAXIMIZE, SET_REGIONS, SET_REGION, SET_RADIO_SITES, SET_RADIO_SITE, SET_TOKEN, MODAL_TOGGLE, MODAL_TITLE, MODAL_IMPORT_TOGGLE, SET_TOPOLOGY_FIRST_LEVEL, SET_TOPOLOGY_SECOND_LEVEL, EDIT_ON_TOGGLE, SPINNER_TOGGLE, MODAL_EXPORT_TOGGLE, SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS } from '../actions';\nconst initialState = {\n  language: null,\n  lang: 'en',\n  // default language\n  maximize: false,\n  contentCSS: 'col-11 content',\n  // default content area css\n  token: null,\n  modalToggle: false,\n  editOn: false,\n  spinnerToggle: false,\n  tooltipPlacement: \"top\",\n  topologyFirstLevel: null,\n  topologySecondLevel: null,\n  topologySecondLevelDropdownLabels: null,\n  topologySelectedNodeFontSize: 18 // selectedNode font size default is 13\n\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LANG:\n      {\n        const {\n          langFile,\n          lang\n        } = action.payload;\n        return { ...state,\n          ...{\n            language: langFile,\n            lang: lang\n          }\n        };\n      }\n\n    case SET_AUTH_USER:\n      {\n        if (action.user !== null) {\n          localStorage.setItem('user', action.user.name);\n        } else {\n          localStorage.removeItem('user');\n        }\n\n        return { ...state,\n          ...{\n            user: action.user\n          }\n        };\n      }\n\n    case SET_TOKEN:\n      {\n        if (action.token !== null) {\n          localStorage.setItem('e2eToken', action.token);\n        } else {\n          localStorage.removeItem('e2eToken');\n        }\n\n        return { ...state,\n          ...{\n            token: action.token\n          }\n        };\n      }\n\n    case SET_REGIONS:\n      {\n        return { ...state,\n          ...{\n            regions: action.regions\n          }\n        };\n      }\n\n    case SET_REGION:\n      {\n        return { ...state,\n          ...{\n            region: action.region\n          }\n        };\n      }\n\n    case SET_RADIO_SITES:\n      {\n        return { ...state,\n          ...{\n            radioSites: action.radioSites\n          }\n        };\n      }\n\n    case SET_RADIO_SITE:\n      {\n        return { ...state,\n          ...{\n            radioSite: action.radioSite\n          }\n        };\n      }\n\n    case SET_MAXIMIZE:\n      {\n        const newValue = !state.maximize;\n        const contentCSS = newValue ? 'col-12 maximized' : initialState.contentCSS;\n        const tooltipPlacement = newValue ? 'bottom' : 'top';\n        return { ...state,\n          ...{\n            maximize: newValue,\n            contentCSS,\n            tooltipPlacement\n          }\n        };\n      }\n\n    case MODAL_TOGGLE:\n      {\n        return { ...state,\n          ...{\n            modalToggle: !state.modalToggle\n          }\n        };\n      }\n\n    case MODAL_TITLE:\n      {\n        return { ...state,\n          ...{\n            modalTitle: action.title\n          }\n        };\n      }\n\n    case MODAL_IMPORT_TOGGLE:\n      {\n        return { ...state,\n          ...{\n            modalImportToggle: !state.modalImportToggle\n          }\n        };\n      }\n\n    case MODAL_EXPORT_TOGGLE:\n      {\n        return { ...state,\n          ...{\n            modalExportToggle: !state.modalExportToggle\n          }\n        };\n      }\n\n    case SPINNER_TOGGLE:\n      {\n        return { ...state,\n          ...{\n            spinnerToggle: !state.spinnerToggle\n          }\n        };\n      }\n\n    case SET_TOPOLOGY_FIRST_LEVEL:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          ...{\n            topologyFirstLevel: data\n          }\n        };\n      }\n\n    case SET_TOPOLOGY_SECOND_LEVEL:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          ...{\n            topologySecondLevel: data\n          }\n        };\n      }\n\n    case SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          ...{\n            topologySecondLevelDropdownLabels: data\n          }\n        };\n      }\n\n    case EDIT_ON_TOGGLE:\n      {\n        return { ...state,\n          ...{\n            editOn: !state.editOn\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/redux/reducer/index.js"],"names":["SET_LANG","SET_AUTH_USER","SET_MAXIMIZE","SET_REGIONS","SET_REGION","SET_RADIO_SITES","SET_RADIO_SITE","SET_TOKEN","MODAL_TOGGLE","MODAL_TITLE","MODAL_IMPORT_TOGGLE","SET_TOPOLOGY_FIRST_LEVEL","SET_TOPOLOGY_SECOND_LEVEL","EDIT_ON_TOGGLE","SPINNER_TOGGLE","MODAL_EXPORT_TOGGLE","SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS","initialState","language","lang","maximize","contentCSS","token","modalToggle","editOn","spinnerToggle","tooltipPlacement","topologyFirstLevel","topologySecondLevel","topologySecondLevelDropdownLabels","topologySelectedNodeFontSize","reducers","state","action","type","langFile","payload","user","localStorage","setItem","name","removeItem","regions","region","radioSites","radioSite","newValue","modalTitle","title","modalImportToggle","modalExportToggle","data"],"mappings":"AAAA,SACIA,QADJ,EAEIC,aAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAIiBC,UAJjB,EAI6BC,eAJ7B,EAI8CC,cAJ9C,EAKIC,SALJ,EAKeC,YALf,EAK6BC,WAL7B,EAK0CC,mBAL1C,EAMIC,wBANJ,EAM8BC,yBAN9B,EAOIC,cAPJ,EAOoBC,cAPpB,EAOoCC,mBAPpC,EAQIC,yCARJ,QAUS,YAVT;AAYA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAEL;AACZC,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,UAAU,EAAE,gBAJK;AAIa;AAC9BC,EAAAA,KAAK,EAAE,IALU;AAMjBC,EAAAA,WAAW,EAAE,KANI;AAOjBC,EAAAA,MAAM,EAAE,KAPS;AAQjBC,EAAAA,aAAa,EAAE,KARE;AASjBC,EAAAA,gBAAgB,EAAE,KATD;AAUjBC,EAAAA,kBAAkB,EAAE,IAVH;AAWjBC,EAAAA,mBAAmB,EAAE,IAXJ;AAYjBC,EAAAA,iCAAiC,EAAE,IAZlB;AAajBC,EAAAA,4BAA4B,EAAE,EAbb,CAagB;;AAbhB,CAArB;;AAgBA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGf,YAAT,EAAuBgB,MAAvB,KAAmC;AAEhD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKlC,QAAL;AAAe;AACX,cAAM;AAACmC,UAAAA,QAAD;AAAWhB,UAAAA;AAAX,YAAmBc,MAAM,CAACG,OAAhC;AACA,eAAO,EAAC,GAAGJ,KAAJ;AAAW,aAAG;AAACd,YAAAA,QAAQ,EAAEiB,QAAX;AAAqBhB,YAAAA,IAAI,EAAEA;AAA3B;AAAd,SAAP;AACH;;AACD,SAAKlB,aAAL;AAAoB;AAChB,YAAIgC,MAAM,CAACI,IAAP,KAAgB,IAApB,EAA0B;AACtBC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BN,MAAM,CAACI,IAAP,CAAYG,IAAzC;AACH,SAFD,MAEO;AACHF,UAAAA,YAAY,CAACG,UAAb,CAAwB,MAAxB;AACH;;AACD,eAAO,EAAC,GAAGT,KAAJ;AAAW,aAAG;AAACK,YAAAA,IAAI,EAAEJ,MAAM,CAACI;AAAd;AAAd,SAAP;AACH;;AACD,SAAK9B,SAAL;AAAgB;AACZ,YAAI0B,MAAM,CAACX,KAAP,KAAiB,IAArB,EAA2B;AACvBgB,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCN,MAAM,CAACX,KAAxC;AACH,SAFD,MAEO;AACHgB,UAAAA,YAAY,CAACG,UAAb,CAAwB,UAAxB;AACH;;AACD,eAAO,EAAC,GAAGT,KAAJ;AAAW,aAAG;AAACV,YAAAA,KAAK,EAAEW,MAAM,CAACX;AAAf;AAAd,SAAP;AACH;;AACD,SAAKnB,WAAL;AAAkB;AACd,eAAO,EAAC,GAAG6B,KAAJ;AAAW,aAAG;AAACU,YAAAA,OAAO,EAAET,MAAM,CAACS;AAAjB;AAAd,SAAP;AACH;;AACD,SAAKtC,UAAL;AAAiB;AACb,eAAO,EAAC,GAAG4B,KAAJ;AAAW,aAAG;AAACW,YAAAA,MAAM,EAAEV,MAAM,CAACU;AAAhB;AAAd,SAAP;AACH;;AACD,SAAKtC,eAAL;AAAsB;AAClB,eAAO,EAAC,GAAG2B,KAAJ;AAAW,aAAG;AAACY,YAAAA,UAAU,EAAEX,MAAM,CAACW;AAApB;AAAd,SAAP;AACH;;AACD,SAAKtC,cAAL;AAAqB;AACjB,eAAO,EAAC,GAAG0B,KAAJ;AAAW,aAAG;AAACa,YAAAA,SAAS,EAAEZ,MAAM,CAACY;AAAnB;AAAd,SAAP;AACH;;AACD,SAAK3C,YAAL;AAAmB;AACf,cAAM4C,QAAQ,GAAG,CAACd,KAAK,CAACZ,QAAxB;AACA,cAAMC,UAAU,GAAGyB,QAAQ,GAAG,kBAAH,GAAwB7B,YAAY,CAACI,UAAhE;AACA,cAAMK,gBAAgB,GAAGoB,QAAQ,GAAG,QAAH,GAAc,KAA/C;AACA,eAAO,EAAC,GAAGd,KAAJ;AAAW,aAAG;AAACZ,YAAAA,QAAQ,EAAE0B,QAAX;AAAqBzB,YAAAA,UAArB;AAAiCK,YAAAA;AAAjC;AAAd,SAAP;AACH;;AACD,SAAKlB,YAAL;AAAmB;AACf,eAAO,EAAC,GAAGwB,KAAJ;AAAW,aAAG;AAACT,YAAAA,WAAW,EAAE,CAACS,KAAK,CAACT;AAArB;AAAd,SAAP;AACH;;AACD,SAAKd,WAAL;AAAkB;AACd,eAAO,EAAC,GAAGuB,KAAJ;AAAW,aAAG;AAACe,YAAAA,UAAU,EAAEd,MAAM,CAACe;AAApB;AAAd,SAAP;AACH;;AACD,SAAKtC,mBAAL;AAA0B;AACtB,eAAO,EAAC,GAAGsB,KAAJ;AAAW,aAAG;AAACiB,YAAAA,iBAAiB,EAAE,CAACjB,KAAK,CAACiB;AAA3B;AAAd,SAAP;AACH;;AACD,SAAKlC,mBAAL;AAA0B;AACtB,eAAO,EAAC,GAAGiB,KAAJ;AAAW,aAAG;AAACkB,YAAAA,iBAAiB,EAAE,CAAClB,KAAK,CAACkB;AAA3B;AAAd,SAAP;AACH;;AACD,SAAKpC,cAAL;AAAqB;AACjB,eAAO,EAAC,GAAGkB,KAAJ;AAAW,aAAG;AAACP,YAAAA,aAAa,EAAE,CAACO,KAAK,CAACP;AAAvB;AAAd,SAAP;AACH;;AACD,SAAKd,wBAAL;AAA+B;AAC3B,cAAM;AAACwC,UAAAA;AAAD,YAASlB,MAAM,CAACG,OAAtB;AACA,eAAO,EAAC,GAAGJ,KAAJ;AAAW,aAAG;AAACL,YAAAA,kBAAkB,EAAEwB;AAArB;AAAd,SAAP;AACH;;AACD,SAAKvC,yBAAL;AAAgC;AAC5B,cAAM;AAACuC,UAAAA;AAAD,YAASlB,MAAM,CAACG,OAAtB;AACA,eAAO,EAAC,GAAGJ,KAAJ;AAAW,aAAG;AAACJ,YAAAA,mBAAmB,EAAEuB;AAAtB;AAAd,SAAP;AACH;;AACD,SAAKnC,yCAAL;AAAgD;AAC5C,cAAM;AAACmC,UAAAA;AAAD,YAASlB,MAAM,CAACG,OAAtB;AACA,eAAO,EAAC,GAAGJ,KAAJ;AAAW,aAAG;AAACH,YAAAA,iCAAiC,EAAEsB;AAApC;AAAd,SAAP;AACH;;AACD,SAAKtC,cAAL;AAAqB;AACjB,eAAO,EAAC,GAAGmB,KAAJ;AAAW,aAAG;AAACR,YAAAA,MAAM,EAAE,CAACQ,KAAK,CAACR;AAAhB;AAAd,SAAP;AACH;;AACD;AAAS,aAAOQ,KAAP;AAtEb;AAwEH,CA1ED;;AA4EA,eAAeD,QAAf","sourcesContent":["import {\r\n    SET_LANG,\r\n    SET_AUTH_USER,\r\n    SET_MAXIMIZE,\r\n    SET_REGIONS, SET_REGION, SET_RADIO_SITES, SET_RADIO_SITE,\r\n    SET_TOKEN, MODAL_TOGGLE, MODAL_TITLE, MODAL_IMPORT_TOGGLE,\r\n    SET_TOPOLOGY_FIRST_LEVEL, SET_TOPOLOGY_SECOND_LEVEL,\r\n    EDIT_ON_TOGGLE, SPINNER_TOGGLE, MODAL_EXPORT_TOGGLE,\r\n    SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS\r\n}\r\n    from '../actions'\r\n\r\nconst initialState = {\r\n    language: null,\r\n    lang: 'en', // default language\r\n    maximize: false,\r\n    contentCSS: 'col-11 content', // default content area css\r\n    token: null,\r\n    modalToggle: false,\r\n    editOn: false,\r\n    spinnerToggle: false,\r\n    tooltipPlacement: \"top\",\r\n    topologyFirstLevel: null,\r\n    topologySecondLevel: null,\r\n    topologySecondLevelDropdownLabels: null,\r\n    topologySelectedNodeFontSize: 18 // selectedNode font size default is 13\r\n};\r\n\r\nconst reducers = (state = initialState, action) =>  {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_LANG: {\r\n            const {langFile, lang} = action.payload;\r\n            return {...state, ...{language: langFile, lang: lang}}\r\n        }\r\n        case SET_AUTH_USER: {\r\n            if (action.user !== null) {\r\n                localStorage.setItem('user', action.user.name);\r\n            } else {\r\n                localStorage.removeItem('user');\r\n            }\r\n            return {...state, ...{user: action.user}}\r\n        }\r\n        case SET_TOKEN: {\r\n            if (action.token !== null) {\r\n                localStorage.setItem('e2eToken', action.token);\r\n            } else {\r\n                localStorage.removeItem('e2eToken');\r\n            }\r\n            return {...state, ...{token: action.token}}\r\n        }\r\n        case SET_REGIONS: {\r\n            return {...state, ...{regions: action.regions}}\r\n        }\r\n        case SET_REGION: {\r\n            return {...state, ...{region: action.region}}\r\n        }\r\n        case SET_RADIO_SITES: {\r\n            return {...state, ...{radioSites: action.radioSites}}\r\n        }\r\n        case SET_RADIO_SITE: {\r\n            return {...state, ...{radioSite: action.radioSite}}\r\n        }\r\n        case SET_MAXIMIZE: {\r\n            const newValue = !state.maximize;\r\n            const contentCSS = newValue ? 'col-12 maximized' : initialState.contentCSS;\r\n            const tooltipPlacement = newValue ? 'bottom' : 'top';\r\n            return {...state, ...{maximize: newValue, contentCSS, tooltipPlacement}}\r\n        }\r\n        case MODAL_TOGGLE: {\r\n            return {...state, ...{modalToggle: !state.modalToggle}}\r\n        }\r\n        case MODAL_TITLE: {\r\n            return {...state, ...{modalTitle: action.title}}\r\n        }\r\n        case MODAL_IMPORT_TOGGLE: {\r\n            return {...state, ...{modalImportToggle: !state.modalImportToggle}}\r\n        }\r\n        case MODAL_EXPORT_TOGGLE: {\r\n            return {...state, ...{modalExportToggle: !state.modalExportToggle}}\r\n        }\r\n        case SPINNER_TOGGLE: {\r\n            return {...state, ...{spinnerToggle: !state.spinnerToggle}}\r\n        }\r\n        case SET_TOPOLOGY_FIRST_LEVEL: {\r\n            const {data} = action.payload;\r\n            return {...state, ...{topologyFirstLevel: data}}\r\n        }\r\n        case SET_TOPOLOGY_SECOND_LEVEL: {\r\n            const {data} = action.payload;\r\n            return {...state, ...{topologySecondLevel: data}}\r\n        }\r\n        case SET_TOPOLOGY_SECOND_LEVEL_DROPDOWN_LABELS: {\r\n            const {data} = action.payload;\r\n            return {...state, ...{topologySecondLevelDropdownLabels: data}}\r\n        }\r\n        case EDIT_ON_TOGGLE: {\r\n            return {...state, ...{editOn: !state.editOn}}\r\n        }\r\n        default: return state;\r\n    }\r\n} \r\n\r\nexport default reducers"]},"metadata":{},"sourceType":"module"}