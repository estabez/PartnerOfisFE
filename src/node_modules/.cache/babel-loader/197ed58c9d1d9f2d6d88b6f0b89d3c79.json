{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{createRef}from'react';import{connect}from\"react-redux\";import{Row,Col,Card,CardBody,CardFooter}from'reactstrap';import{HotTable}from'@handsontable/react';import Handsontable from'handsontable';import{groupingMap}from'../matrixDataMap';import{columnLogic}from'../matrixColumnLogicMap';import PaginationMatrix from\"../components/Pagination\";import Header from'../components/Header';import Sidebar from'../components/Sidebar';import Toolbar from'../components/ToolbarMatrix';import ModalImport from'../components/ModalImport';import Spinner from'../components/Spinner';import EmptyDataset from'../components/EmptyDataset';import{editOnToggle,spinnerToggle}from\"../redux/actions\";import{confirmAlert}from'react-confirm-alert';import'react-confirm-alert/src/react-confirm-alert.css';// For export File\nimport XLSX from'xlsx';import{saveAs}from'file-saver';// Rest api module import\nimport RestApiModule from'../RestApiModule';// Alert module\nimport AlertModule from'../AlertModule';var Matrix=/*#__PURE__*/function(_React$Component){_inherits(Matrix,_React$Component);var _super=_createSuper(Matrix);function Matrix(props){var _this;_classCallCheck(this,Matrix);_this=_super.call(this,props);_this._isMounted=false;_this.restApi=new RestApiModule();_this.alert=new AlertModule();_this.hotTableComponent=createRef();_this.hot=null;_this.handsontableData=null;_this.handsontableDataBackup=null;_this.errorMessages=null;_this.errorBoxTitle=null;_this.columnHeaders=[];_this.titles=[];_this.columns=[];_this.handleColumnHeaders();_this.selectedRowCoords={r:null,c:null};_this.editedRowCoords={r:null,c:null};_this.validatedCell={r:null,c:null};_this.rowValidation=true;_this.showHistory=false;_this.filter=null;_this.mandatoryColumns=null;//this.itemPerPage = +process.env.REACT_APP_MATRIX_ITEM_PER_PAGE;\n_this.state={isDataExistsInDB:false,newRowAdded:false,showHistory:false,activePage:1,itemPerPage:+process.env.REACT_APP_MATRIX_ITEM_PER_PAGE,totalCountOfData:0,exportDataAsExcelFile:null};Handsontable.hooks.add('afterSelectionEnd',function(r,c){_this.selectedRowCoords.r=r;_this.selectedRowCoords.c=c;});return _this;}_createClass(Matrix,[{key:\"componentDidMount\",value:function componentDidMount(){this._isMounted=true;if(this.props.user){// get mandatory columns from map file\nthis.mandatoryColumns=this.mandatoryColumnExtractor();this.setStateAsync({permittedColumns:this.props.user.role.permittedColumns});this.hot=this.hotTableComponent.current.hotInstance;this.dataLoad();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;}},{key:\"calculatePagination\",value:function calculatePagination(total){if(total){var pageCount=+total/this.state.itemPerPage;this.setStateAsync({totalCountOfData:total,pageCount:pageCount});}}},{key:\"dataCountOfSelectedRegion\",value:function dataCountOfSelectedRegion(){var _this2=this;var _this$props=this.props,token=_this$props.token,region=_this$props.region,radioSite=_this$props.radioSite;if(region){this.restApi.callApi('getMatrixDataCount',{token:token,region:region,radioSite:radioSite}).then(function(response){_this2.calculatePagination(response.ConnectivityCount[0].Count);});}}},{key:\"dataLoad\",value:function(){var _dataLoad=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(filterChanged){var _this3=this;var _this$props2,token,region,radioSite;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!this._isMounted){_context2.next=9;break;}_this$props2=this.props,token=_this$props2.token,region=_this$props2.region,radioSite=_this$props2.radioSite;// that means filtered options changed, so we reset the activePage number to 1\nif(filterChanged){this.setStateAsync({activePage:1,itemPerPage:filterChanged===\"radioSite\"?100:+process.env.REACT_APP_MATRIX_ITEM_PER_PAGE});}if(!region){_context2.next=9;break;}this.props.setSpinner();// get count of data\n_context2.next=7;return this.dataCountOfSelectedRegion();case 7://reset selected row data\nthis.resetSelectedRow();this.restApi.callApi('getMatrixData',{token:token,region:region,radioSite:radioSite,count:this.state.itemPerPage.toString(),page_index:this.state.activePage.toString()}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var ConnectivityMatrix,exec_status;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://console.log(response)\n// mock test\n//response.exec_status = \"error\";\nConnectivityMatrix=response.ConnectivityMatrix,exec_status=response.exec_status;// If data doesnt exist in EAI DB we should set a flag to manage toolbar actions\nif(!(exec_status===\"success\"&&ConnectivityMatrix.length>0)){_context.next=11;break;}_this3.setStateAsync({isDataExistsInDB:true});_this3.handsontableData=ConnectivityMatrix;// store the copy of data\n_this3.hot.loadData(_this3.handsontableData);_this3.paginationRowNumbers();/* Filter for show active rows only*/_this3.filter=_this3.hot.getPlugin('filters');_context.next=9;return _this3.revisionRowFilter();case 9:_context.next=12;break;case 11:_this3.setStateAsync({isDataExistsInDB:false});case 12:// remove spinner from screen\n_this3.props.setSpinner();case 13:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref.apply(this,arguments);};}()).catch(function(err){// err state. If need we can give message to user.\n// Error handling is managed by RestApiModule.\n// We don't need to do extra development in here\n// Somehow if this block executed, we can only change the flag to false.\n_this3.setStateAsync({isDataExistsInDB:false});// remove spinner from screen\n_this3.props.setSpinner();});case 9:case\"end\":return _context2.stop();}}},_callee2,this);}));function dataLoad(_x){return _dataLoad.apply(this,arguments);}return dataLoad;}()},{key:\"setStateAsync\",value:function setStateAsync(state){var _this4=this;return new Promise(function(resolve){_this4.setState(state,resolve);});}},{key:\"handlePageChange\",value:function(){var _handlePageChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(pageNumber){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.setStateAsync({activePage:pageNumber});case 2:this.dataLoad();case 3:case\"end\":return _context3.stop();}}},_callee3,this);}));function handlePageChange(_x3){return _handlePageChange.apply(this,arguments);}return handlePageChange;}()},{key:\"paginationRowNumbers\",value:function paginationRowNumbers(){// break the handsontable row headers mechanism to show to user exact row numbers while paginating\nvar _this$state=this.state,activePage=_this$state.activePage,itemPerPage=_this$state.itemPerPage;var startPoint=(activePage-1)*itemPerPage+1;var newNumbers=Array.from(Array(itemPerPage),function(_,i){return startPoint+i;});this.hot.updateSettings({rowHeaders:newNumbers});}// click event handle for edit button\n},{key:\"handleEditClick\",value:function handleEditClick(){var _this5=this;var _this$selectedRowCoor=this.selectedRowCoords,r=_this$selectedRowCoor.r,c=_this$selectedRowCoor.c;if(r===null&&c===null)return;// Lock mechanism controls\nvar dto=this.prepareDTOforLockMechanism(r,false);this.restApi.callApi('lock',dto).then(function(response){var json=response.resultLock;var user=_this5.props.user;console.log(json);// can I continue to edit ?\nvar continueToEdit=json.islock&&json.uname===user.name;if(continueToEdit){var etatRule=_this5.ruleExtractor(\"etatCheckValue\");var archivedRule=_this5.ruleExtractor(\"archivedCheckValue\");var etatDataAtCell=_this5.hot.getDataAtRowProp(r,\"etat\");var archivedDataAtCell=_this5.hot.getDataAtRowProp(r,\"archived\");var checkEtatValue=etatRule.isValue.includes(etatDataAtCell);var checkArchivedValue=archivedRule.isValue.includes(archivedDataAtCell);if(checkEtatValue&&checkArchivedValue){// create backup data before editing;\n_this5.handsontableDataBackup=JSON.parse(JSON.stringify(_this5.handsontableData));// Change edit mode on redux\n_this5.props.setEdit();_this5.setCellProperties(r,c);_this5.editedRowCoords.r=r;_this5.editedRowCoords.c=c;}else{var language=_this5.props.language;_this5.alert.showMessage(\"warning\",language.editModeRestrictionTitle,language.editModeRestriction,false);}}else{_this5.showMessageForLockMechanism(true,json);}});}// click handle for add new row\n},{key:\"handleNewRowClick\",value:function(){var _handleNewRowClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var duplicate,_args4=arguments;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:duplicate=_args4.length>0&&_args4[0]!==undefined?_args4[0]:false;_context4.next=3;return this.setStateAsync({newRowAdded:true});case 3:this.editedRowCoords.r=0;this.editedRowCoords.c=0;// create backup data before editing;\nthis.handsontableDataBackup=JSON.parse(JSON.stringify(this.handsontableData));this.props.setEdit();this.hot.alter('insert_row',0,1);this.setCellProperties(0,null,duplicate);if(this.state.showHistory)this.iterateRevisionRows();case 10:case\"end\":return _context4.stop();}}},_callee4,this);}));function handleNewRowClick(){return _handleNewRowClick.apply(this,arguments);}return handleNewRowClick;}()},{key:\"handleDuplicateRowClick\",value:function(){var _handleDuplicateRowClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var _this$selectedRowCoor2,r,c,data,radioSiteColumnIndex,colCount,x;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_this$selectedRowCoor2=this.selectedRowCoords,r=_this$selectedRowCoor2.r,c=_this$selectedRowCoor2.c;if(!(r===null&&c===null)){_context5.next=3;break;}return _context5.abrupt(\"return\");case 3:_context5.next=5;return this.handleNewRowClick(true);case 5:// get existing data at row\ndata=this.hot.getDataAtRow(r);// find radio Site column for special case. we need empty radio site for duplicated row\nradioSiteColumnIndex=this.findIndexOfColumn(0,'radioSite');// get column count for iteration\ncolCount=this.hot.countCols();// iterate the columns\nx=0;case 9:if(!(x<=colCount)){_context5.next=16;break;}if(!(x===radioSiteColumnIndex)){_context5.next=12;break;}return _context5.abrupt(\"continue\",13);case 12:// set data\nthis.hot.setDataAtCell(0,x,data[x]);case 13:x++;_context5.next=9;break;case 16:case\"end\":return _context5.stop();}}},_callee5,this);}));function handleDuplicateRowClick(){return _handleDuplicateRowClick.apply(this,arguments);}return handleDuplicateRowClick;}()// history toggle finished\n},{key:\"handleHistoryToggle\",value:function(){var _handleHistoryToggle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return this.setStateAsync({showHistory:!this.state.showHistory});case 2:_context6.next=4;return this.revisionRowFilter();case 4:case\"end\":return _context6.stop();}}},_callee6,this);}));function handleHistoryToggle(){return _handleHistoryToggle.apply(this,arguments);}return handleHistoryToggle;}()},{key:\"handleCancelClick\",value:function handleCancelClick(){var _this6=this;this.setStateAsync({newRowAdded:false}).then(function(){var _this6$selectedRowCoo=_this6.selectedRowCoords,r=_this6$selectedRowCoo.r,c=_this6$selectedRowCoo.c;if(r===null&&c===null)return;// Lock mechanism controls\nvar dto=_this6.prepareDTOforLockMechanism(r,false);// In all circumstances call implicit unlock\n_this6.restApi.callApi('unlock',dto).then(function(response){console.log(response);_this6.showMessageForLockMechanism(false,response.resultUnlock);});_this6.cancelEdit();});}},{key:\"handleSaveClick\",value:function handleSaveClick(){this.saveAction();}},{key:\"handleSaveHistoryClick\",value:function handleSaveHistoryClick(){this.saveAction(true);}// save action for row edited or new\n},{key:\"saveAction\",value:function saveAction(revision){var _this7=this;var language=this.props.language;if(this.rowValidation){var _this$editedRowCoords=this.editedRowCoords,r=_this$editedRowCoords.r,c=_this$editedRowCoords.c;var token=this.props.token;if(r!==null||r!==undefined){// data would send to API\nvar data=this.hot.getDataAtRow(r);data=this.columns.reduce(function(newRowData,item,index){Object.assign(newRowData,data[index]!==null?_defineProperty({},item.data,data[index]):_defineProperty({},item.data,\"\"));return newRowData;},{});var mandatoryColumnsFilled=this.checkMandatoryColumnsFilled(data);if(mandatoryColumnsFilled){var isRevision=false;if(revision){isRevision=revision;}// Call backend to save row\nthis.restApi.callApi(\"saveRow\",{token:token,row:data,isNewRow:this.state.newRowAdded,isRevision:isRevision}).then(function(response){var _response$result=response.result,processed=_response$result.processed,log=_response$result.log;var message=log.split('\\n').join('<br>');if(processed){_this7.alert.showMessage(\"success\",language.saveActionSuccessTitle,message,false);_this7.selectedRowCoords.c=c;_this7.selectedRowCoords.r=r;_this7.editedRowCoords.r=null;_this7.editedRowCoords.c=null;// Change edit mode on redux\n_this7.props.setEdit();// Reset new row state if its true\nif(_this7.state.newRowAdded)_this7.setState({newRowAdded:false});_this7.dataLoad();}else{_this7.alert.showMessage(\"error\",language.saveActionFailTitle,message,false);}});}else{var title=language.mandatoryDataTitle;var text=language.mandatoryDataText;text=text.replace(\"{columns}\",this.mandatoryColumns.join(',<br>'));this.alert.showMessage(\"error\",title,text,false);}}}else{var _language=this.props.language;this.alert.showMessage(\"error\",_language.validationMessageBoxTitle,_language.validationErrorGeneralMessage,false);}}},{key:\"revisionRowFilter\",value:function(){var _revisionRowFilter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var colIndex,arg;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!this._isMounted){_context7.next=8;break;}colIndex=this.findIndexOfColumn(0,'archived');arg=this.state.showHistory?'':'NO';// this param is for filtering on handsontable\nif(this.state.showHistory){this.filter.removeConditions(colIndex);}else{this.filter.addCondition(colIndex,'contains',arg);}_context7.next=6;return this.filter.filter();case 6:_context7.next=8;return this.iterateRevisionRows();case 8:case\"end\":return _context7.stop();}}},_callee7,this);}));function revisionRowFilter(){return _revisionRowFilter.apply(this,arguments);}return revisionRowFilter;}()},{key:\"setCellProperties\",value:function setCellProperties(r,c,isDuplicateRow){var colCount=this.hot.countCols();var col=c!==null?c:0;for(var x=0;x<=colCount;x++){var _this$hot$getCellMeta=this.hot.getCellMeta(r,x),prop=_this$hot$getCellMeta.prop,readOnly=_this$hot$getCellMeta.readOnly,readOnlyInEditMode=_this$hot$getCellMeta.readOnlyInEditMode;if(typeof prop!==\"string\")continue;// if prop has got readyOnly attribute with value \"true\", write permission will restricted\n// if prop hasn't got readOnly attribute it would be false by default. So we need to check if\n// this action is adding new row or editing existing row.\n// if action is editing a row then we should check readOnlyInEditMode attribute of prop.\n// if it's exist we should get opposite value because if we add this attribute to prop it value should be \"true\"\n// it means this property can not be writable in edit mode\n// if readOnlyInEditMode attribute is not exist in prop there isn't extra attribute checking for this cell\n// can be writable or not. So we can put \"true\" value to associated variable.\nvar writable=readOnly?!readOnly:!this.state.newRowAdded?!readOnlyInEditMode:!readOnly;if(writable){if(this.state.permittedColumns.indexOf(prop)>=0){var type=this.hot.getDataType(r,x);// get cell type from loaded map\n// this 2 row for initiate the rules on editing row.\n//const value = this.hot.getDataAtCell(r, x);\n//this.columnEvents(r, prop, value);\ncol=col===0?x:col;// when add new row find first editable col.\nthis.hot.setCellMeta(r,x,\"editor\",type);this.hot.setCellMeta(r,x,\"className\",'bg-warning text-dark');}}}// set initial value for newly adding rows\nif(this.state.newRowAdded&&!isDuplicateRow){this.setInitialValueOfColumn();}this.hot.render();this.hot.selectCell(r,col);}},{key:\"findIndexOfColumn\",value:function findIndexOfColumn(r,propName){var colCount=this.hot.countCols();for(var c=0;c<=colCount;c++){var _this$hot$getCellMeta2=this.hot.getCellMeta(r,c),prop=_this$hot$getCellMeta2.prop;if(prop===propName){return c;}}}// Before save action mandatory columns are must be filled\n},{key:\"checkMandatoryColumnsFilled\",value:function checkMandatoryColumnsFilled(rowData){var checkData=this.mandatoryColumns.reduce(function(data,columnId){data.push(rowData[columnId]);return data;},[]);return checkData.every(function(data){return data!==undefined&&data!==\"\"&&data!==null;});}// Finished initial value setter\n},{key:\"setInitialValueOfColumn\",value:function setInitialValueOfColumn(){var _this8=this;this.columns.map(function(item){if(item.hasOwnProperty('initialValue')){_this8.hot.setDataAtRowProp(0,item.data,item.initialValue);}return true;});}// Finished, cancel edit return back to last backup data\n},{key:\"cancelEdit\",value:function cancelEdit(){this.handsontableData=JSON.parse(JSON.stringify(this.handsontableDataBackup));this.hot.loadData(this.handsontableData);this.hot.render();// Change edit mode on redux\nthis.props.setEdit();if(this.state.showHistory)this.iterateRevisionRows();}// reset row finished\n},{key:\"resetRow\",value:function resetRow(r){var colCount=this.hot.countCols();for(var x=0;x<=colCount;x++){this.hot.setCellMeta(r,x,\"editor\",false);this.hot.setCellMeta(r,x,\"className\",'bg-primary text-white');}this.hot.render();this.setState({newRowAdded:false});}// reset seleted rows for some reason such as change region, change active page\n},{key:\"resetSelectedRow\",value:function resetSelectedRow(){this.selectedRowCoords.r=null;this.selectedRowCoords.c=null;this.editedRowCoords.r=null;this.editedRowCoords.c=null;this.validatedCell.r=null;this.validatedCell.c=null;this.hot.deselectCell();}// disable moves finished\n},{key:\"disableMoves\",value:function disableMoves(){return false;}// Finished ip validation rule\n},{key:\"ipValidate\",value:function ipValidate(value,callback){var pat=/^(?:\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b|null)$/;this.rowValidation=pat.test(value);callback(this.rowValidation);if(!this.rowValidation)this.showMessage(this.errorBoxTitle,this.errorMessages.invalidIP,true);}// Finished numeric value validation\n},{key:\"numericValidate\",value:function numericValidate(value,callback){var pat=/^\\d+$/;this.rowValidation=pat.test(value);callback(this.rowValidation);if(!this.rowValidation)this.showMessage(this.errorBoxTitle,this.errorMessages.invalidNumber,true);}// Finished validation message box\n},{key:\"showMessage\",value:function showMessage(title,message,validatorClose){var _this9=this;confirmAlert({title:'Validation Warning',message:message,closeOnEscape:false,closeOnClickOutside:false,customUI:function customUI(_ref4){var onClose=_ref4.onClose;var closeAction=function closeAction(){if(validatorClose){_this9.hot.selectCell(_this9.validatedCell.r,_this9.validatedCell.c);if(_this9.hot.getActiveEditor()!==undefined)_this9.hot.getActiveEditor().beginEditing();onClose();}else{_this9.cancelEdit();onClose();}};return/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header\"},title,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"close\",onClick:closeAction,\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"div\",{className:'card-text text-danger'},message)),/*#__PURE__*/React.createElement(\"div\",{className:\"card-footer\"},/*#__PURE__*/React.createElement(\"button\",{className:'btn btn-warning',onClick:closeAction},\"Ok\")));}});}// Finished column header groups\n},{key:\"handleColumnHeaders\",value:function handleColumnHeaders(){var _this10=this;// Create a copy of map file\nvar headerMap=JSON.parse(JSON.stringify(groupingMap));// Set the header groups for table\nvar headerGrouping=headerMap.filter(function(item){item.colspan=item.columns.length;return typeof item.columns===\"object\";});// set each and every column defaults\nvar cols=headerMap.map(function(item){return item.columns.map(function(c){_this10.titles.push(c.label);c.editor=false;// default readonly\nif(typeof c.validator!==\"undefined\"){if(c.validator==='ipValidator'){c.validator=function(value,callback){_this10.ipValidate(value,callback);};}if(c.validator==='isNumeric'){c.validator=function(value,callback){_this10.numericValidate(value,callback);};}}if(typeof c.type!==\"undefined\"){if(c.type==='dropdown'){_this10.setPickList(c.data).then(function(list){c.source=list;});}}return c;});});// spread the columns into single object\ncols.map(function(c){_this10.columns=[].concat(_toConsumableArray(_this10.columns),_toConsumableArray(c));});// Pushing header group const to related vars\nthis.columnHeaders.push(headerGrouping);this.columnHeaders.push(this.titles);}// Finished colouring header\n},{key:\"headerColoring\",value:function headerColoring(col,TH){var TR=TH.parentNode;var THEAD=TR.parentNode;var b=THEAD.childNodes.length;var n=Array.prototype.indexOf.call(THEAD.childNodes,TR);var headerLevel=-1*b+n;function applyClass(elem,className){if(!Handsontable.dom.hasClass(elem,className))Handsontable.dom.addClass(elem,className);}if(headerLevel===-1||headerLevel===-2){if(col>=0&&col<=11)applyClass(TH,'color1');if(col===12)applyClass(TH,'color2');if(col>=13&&col<=20)applyClass(TH,'color3');if(col>=21&&col<=27)applyClass(TH,'color4');if(col>=28&&col<=30)applyClass(TH,'color5');if(col>=31&&col<=34)applyClass(TH,'color6');if(col>=35&&col<=43)applyClass(TH,'color7');if(col>=44&&col<=46)applyClass(TH,'color8');if(col>=47&&col<=50)applyClass(TH,'color9');}}// Finished pick list setter function\n},{key:\"setPickList\",value:function setPickList(name){var _this11=this;return new Promise(function(res,rej){var value=\"\".concat(name,\"Picklist_value\");var key=\"\".concat(name,\"Picklist\");_this11.restApi.callApi('getPickList',{token:_this11.props.token,pickListName:key}).then(function(response){if(response.pickList.length>0){var list=response.pickList.map(function(item){return item[value];});res(list);}}).catch(function(error){console.log(error);});});}// Finished revision row makeup\n},{key:\"iterateRevisionRows\",value:function iterateRevisionRows(){var _this12=this;var rc=this.hot.countRows();var cc=this.hot.countCols();for(var r=0;r<=rc;r++){var value=this.hot.getDataAtRowProp(r,'archived');if(value==='YES'||value===\"Yes\"||value===\"yes\"){for(var c=0;c<=cc;c++){this.hot.setCellMeta(r,c,'renderer',function(instance,td){var showHistory=_this12.state.showHistory;if(showHistory)td.classList.add('revision-row');});}}}this.hot.render();}// Read the rule from imported rule file\n},{key:\"mandatoryColumnExtractor\",value:function mandatoryColumnExtractor(){return groupingMap.reduce(function(fullArr,item){var cols=item.columns.reduce(function(arr,col){if(col.mandatory)arr.push(col.data);return arr;},[]);return[].concat(_toConsumableArray(fullArr),_toConsumableArray(cols));},[]);}// Read the rule from imported rule file\n},{key:\"ruleExtractor\",value:function ruleExtractor(columnId){return columnLogic.find(function(item){return item.id===columnId;});}// Generic attributes validations and rule runner\n},{key:\"columnEvents\",value:function(){var _columnEvents=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(r,c,newV){var _this13=this;var properties,methodCaller,rules,executeRules,paramName,additionalParams,ruleChain,dto,additionalDTO;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:this.validatedCell.r=r;this.validatedCell.c=c;properties=this.ruleExtractor(c);if(properties){methodCaller=properties.methodCaller,rules=properties.rules,executeRules=properties.executeRules,paramName=properties.paramName,additionalParams=properties.additionalParams,ruleChain=properties.ruleChain;if(methodCaller){// we understand that this logic needs to call api\n// default dto\ndto=_defineProperty({token:this.props.token},paramName,this.hot.getDataAtRowProp(r,c));if(typeof additionalParams!=='undefined'&&typeof additionalParams==='object'){// create addition parameter to bind exact one\nadditionalDTO=additionalParams.map(function(prop){return _defineProperty({},prop,_this13.hot.getDataAtRowProp(r,prop));});// dto with additional parameters\ndto=Object.assign.apply(Object,[{},dto].concat(_toConsumableArray(additionalDTO)));}// method caller and logic execution\n//await this.genericCL(methodCaller, dto);\nthis.restApi.callApi(methodCaller,dto).then(function(response){if(typeof response.isExist!=='undefined'){if(!response.isExist){// value is not exist in DB, show message\n_this13.showMessage(_this13.errorBoxTitle,_this13.errorMessages[c],true);return false;}else{// value is exist in DB, check other rules associated with that one\nif(executeRules&&executeRules.length>0){executeRules.map(function(props){var propId=props.propId;var data=_this13.hot.getDataAtRowProp(r,propId);_this13.columnEvents(r,propId,data);});}}if(ruleChain&&ruleChain.length>0){_this13.ruleChainHandle(ruleChain,dto,r);}}else{rules[0].changedValue=response.List.map(function(i){return i.value;});_this13.staticRules(r,null,rules);}});}else{this.staticRules(r,newV,rules);}}case 4:case\"end\":return _context8.stop();}}},_callee8,this);}));function columnEvents(_x4,_x5,_x6){return _columnEvents.apply(this,arguments);}return columnEvents;}()},{key:\"ruleChainHandle\",value:function ruleChainHandle(ruleChain,dto,r){var _this14=this;ruleChain.map(function(item){if(item.parentResponse){_this14.restApi.callApi(item.methodCaller,dto).then(function(response){var exec_status=response.exec_status;var value=response[item.parsingKey];if(exec_status===\"success\"){_this14.staticRules(r,value,item.rules);}});}});}},{key:\"staticRules\",value:function staticRules(r,value,rules){var _this15=this;if(rules){rules.map(function(item){if(item.columnValue&&value){if(item.columnValue===value){// status changes\n_this15.hot.setDataAtRowProp(r,item.changedId,item.changedValue);}}else if(!item.columnValue&&value){_this15.hot.setDataAtRowProp(r,item.changedId,value);}else{_this15.hot.setCellMeta(r,_this15.hot.propToCol(item.changedId),'source',item.changedValue);}});}}},{key:\"handleExport\",value:function handleExport(){var _this$props3=this.props,token=_this$props3.token,region=_this$props3.region;this.restApi.callApi('exportData',{region:region,token:token}).then(function(response){var today=new Date();//const todayDate =  '_' + today.getDate() +  (today.toLocaleString('default', { month: 'long' })) + today.getFullYear();\nvar todayDate='_'+today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate()+'T'+today.getHours()+'.'+today.getMinutes();var ws=XLSX.utils.json_to_sheet(response.ExportedExcelAsJSON);var wb={Sheets:{'data':ws},SheetNames:['data']};var excelBuffer=XLSX.write(wb,{bookType:'xlsx',type:'array'});var data=new Blob([excelBuffer],{type:'xlsx'});// saveAs(data, `DataMatrix${todayDate}.xlsx`);\nsaveAs(data,\"Exported_RANConn\".concat(todayDate,\".xlsx\"));}).catch(function(error){console.log(error);});}},{key:\"handleLockClick\",value:function handleLockClick(){var _this16=this;var r=this.selectedRowCoords.r;if(r===null)return;var dto=this.prepareDTOforLockMechanism(r,true);this.restApi.callApi('lock',dto).then(function(response){_this16.showMessageForLockMechanism(true,response.resultLock);});}},{key:\"handleUnlockClick\",value:function handleUnlockClick(){var _this17=this;var r=this.selectedRowCoords.r;if(r===null)return;var dto=this.prepareDTOforLockMechanism(r,true);this.restApi.callApi('unlock',dto).then(function(response){_this17.showMessageForLockMechanism(false,response.resultUnlock);});}},{key:\"prepareDTOforLockMechanism\",value:function prepareDTOforLockMechanism(r,isExplicit){var token=this.props.token;// get existing data at row\nvar data=this.hot.getDataAtRow(r);var radioSiteColumnIndex=this.findIndexOfColumn(0,'radioSite');var revisionNumberColumnIndex=this.findIndexOfColumn(0,'revisionNumber');var radioSite=data[radioSiteColumnIndex].toString();var revisionNumber=data[revisionNumberColumnIndex].toString();return{token:token,radioSite:radioSite,revisionNumber:revisionNumber,isExplicit:isExplicit};}},{key:\"showMessageForLockMechanism\",value:function showMessageForLockMechanism(messageForLock,result){var _this$props$language=this.props.language,lockMechanism=_this$props$language.lockMechanism,unlockMechanism=_this$props$language.unlockMechanism;var message=messageForLock?lockMechanism[result.code.toString()]:unlockMechanism[result.code.toString()];message=message?message.replace(\"{uname}\",result.uname).replace(\"{time}\",new Date(result.time).toLocaleString()):\"Undefined\";this.alert.showMessage('info',unlockMechanism.title,message,false);}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState,nextContext){return nextState.isDataExistsInDB!==this.state.isDataExistsInDB||nextState.activePage!==this.state.activePage||nextState.totalCountOfData!==this.state.totalCountOfData||nextState.newRowAdded!==this.state.newRowAdded||nextState.maximize!==this.props.maximize;}},{key:\"render\",value:function render(){var _this18=this;var _this$props4=this.props,maximize=_this$props4.maximize,language=_this$props4.language,contentCSS=_this$props4.contentCSS;if(language){this.errorBoxTitle=language.validationMessageBoxTitle;this.errorMessages=language.validationErrorMessages;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Row,{className:\"h-100\"},/*#__PURE__*/React.createElement(Sidebar,{maximize:maximize}),/*#__PURE__*/React.createElement(Col,{className:contentCSS},/*#__PURE__*/React.createElement(Toolbar,{wrapper:'toolbar mt-2',isDataExist:this.state.isDataExistsInDB,newRowAdded:this.state.newRowAdded,export:this.handleExport.bind(this),lock:this.handleLockClick.bind(this),unlock:this.handleUnlockClick.bind(this),new:this.handleNewRowClick.bind(this),duplicate:this.handleDuplicateRowClick.bind(this),edit:this.handleEditClick.bind(this),cancel:this.handleCancelClick.bind(this),save:this.handleSaveClick.bind(this),\"save-history\":this.handleSaveHistoryClick.bind(this),history:this.handleHistoryToggle.bind(this),handleRegionChange:this.dataLoad.bind(this),handleRadioSiteChange:this.dataLoad.bind(this)}),/*#__PURE__*/React.createElement(Card,{className:'mt-1 fixedCard'},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(HotTable,{ref:this.hotTableComponent,id:'hot',licenseKey:'non-commercial-and-evaluation',nestedHeaders:this.columnHeaders,columns:this.columns,stretchH:'all',dropdownMenu:true,filters:true,manualColumnResize:true,width:'100%',height:'100%',fixedColumnsLeft:0,columnSorting:true,currentRowClassName:['bg-primary','text-white'],enterBeginsEditing:false,outsideClickDeselects:false,enterMoves:this.disableMoves(),fillHandle:this.disableMoves(),afterValidate:function afterValidate(isValid,value,row,prop){// this is check dropdown values are proper or not.\n_this18.validatedCell.r=row;_this18.validatedCell.c=prop;},afterGetColHeader:function afterGetColHeader(col,TH){_this18.headerColoring(col,TH);},afterCreateRow:function afterCreateRow(index,amount,source){//console.log(index, amount, source)\n},afterChange:function afterChange(changes){// TODO: check esc button when its clicked\nif(changes){var _changes$=_slicedToArray(changes[0],4),r=_changes$[0],c=_changes$[1],oldV=_changes$[2],newV=_changes$[3];//&& !this.state.newRowAdded\nif(oldV!==newV)_this18.columnEvents(r,c,newV);}}}),!this.state.isDataExistsInDB&&/*#__PURE__*/React.createElement(EmptyDataset,{page:'matrix'})),/*#__PURE__*/React.createElement(CardFooter,{className:'text-center'},/*#__PURE__*/React.createElement(PaginationMatrix,{activePage:this.state.activePage,itemPerPage:this.state.itemPerPage,totalCountOfData:this.state.totalCountOfData,handlePageChange:this.handlePageChange.bind(this)}))))),/*#__PURE__*/React.createElement(ModalImport,{loadAfterImport:this.dataLoad.bind(this)}),/*#__PURE__*/React.createElement(Spinner,null));}}]);return Matrix;}(React.Component);function mapStateToProps(state){return{token:state.token,user:state.user,language:state.language,maximize:state.maximize,contentCSS:state.contentCSS,region:state.region,radioSite:state.radioSite,spinnerToggle:state.spinnerToggle};}function mapDispatchToProps(dispatch){return{setEdit:function setEdit(){return dispatch(editOnToggle());},setSpinner:function setSpinner(){return dispatch(spinnerToggle());}};}export default connect(mapStateToProps,mapDispatchToProps)(Matrix);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/views/Matrix.jsx"],"names":["React","createRef","connect","Row","Col","Card","CardBody","CardFooter","HotTable","Handsontable","groupingMap","columnLogic","PaginationMatrix","Header","Sidebar","Toolbar","ModalImport","Spinner","EmptyDataset","editOnToggle","spinnerToggle","confirmAlert","XLSX","saveAs","RestApiModule","AlertModule","Matrix","props","_isMounted","restApi","alert","hotTableComponent","hot","handsontableData","handsontableDataBackup","errorMessages","errorBoxTitle","columnHeaders","titles","columns","handleColumnHeaders","selectedRowCoords","r","c","editedRowCoords","validatedCell","rowValidation","showHistory","filter","mandatoryColumns","state","isDataExistsInDB","newRowAdded","activePage","itemPerPage","process","env","REACT_APP_MATRIX_ITEM_PER_PAGE","totalCountOfData","exportDataAsExcelFile","hooks","add","user","mandatoryColumnExtractor","setStateAsync","permittedColumns","role","current","hotInstance","dataLoad","total","pageCount","token","region","radioSite","callApi","then","response","calculatePagination","ConnectivityCount","Count","filterChanged","setSpinner","dataCountOfSelectedRegion","resetSelectedRow","count","toString","page_index","ConnectivityMatrix","exec_status","length","loadData","paginationRowNumbers","getPlugin","revisionRowFilter","catch","err","Promise","resolve","setState","pageNumber","startPoint","newNumbers","Array","from","_","i","updateSettings","rowHeaders","dto","prepareDTOforLockMechanism","json","resultLock","console","log","continueToEdit","islock","uname","name","etatRule","ruleExtractor","archivedRule","etatDataAtCell","getDataAtRowProp","archivedDataAtCell","checkEtatValue","isValue","includes","checkArchivedValue","JSON","parse","stringify","setEdit","setCellProperties","language","showMessage","editModeRestrictionTitle","editModeRestriction","showMessageForLockMechanism","duplicate","alter","iterateRevisionRows","handleNewRowClick","data","getDataAtRow","radioSiteColumnIndex","findIndexOfColumn","colCount","countCols","x","setDataAtCell","resultUnlock","cancelEdit","saveAction","revision","undefined","reduce","newRowData","item","index","Object","assign","mandatoryColumnsFilled","checkMandatoryColumnsFilled","isRevision","row","isNewRow","result","processed","message","split","join","saveActionSuccessTitle","saveActionFailTitle","title","mandatoryDataTitle","text","mandatoryDataText","replace","validationMessageBoxTitle","validationErrorGeneralMessage","colIndex","arg","removeConditions","addCondition","isDuplicateRow","col","getCellMeta","prop","readOnly","readOnlyInEditMode","writable","indexOf","type","getDataType","setCellMeta","setInitialValueOfColumn","render","selectCell","propName","rowData","checkData","columnId","push","every","map","hasOwnProperty","setDataAtRowProp","initialValue","deselectCell","value","callback","pat","test","invalidIP","invalidNumber","validatorClose","closeOnEscape","closeOnClickOutside","customUI","onClose","closeAction","getActiveEditor","beginEditing","headerMap","headerGrouping","colspan","cols","label","editor","validator","ipValidate","numericValidate","setPickList","list","source","TH","TR","parentNode","THEAD","b","childNodes","n","prototype","call","headerLevel","applyClass","elem","className","dom","hasClass","addClass","res","rej","key","pickListName","pickList","error","rc","countRows","cc","instance","td","classList","fullArr","arr","mandatory","find","id","newV","properties","methodCaller","rules","executeRules","paramName","additionalParams","ruleChain","additionalDTO","isExist","propId","columnEvents","ruleChainHandle","changedValue","List","staticRules","parentResponse","parsingKey","columnValue","changedId","propToCol","today","Date","todayDate","getFullYear","getMonth","getDate","getHours","getMinutes","ws","utils","json_to_sheet","ExportedExcelAsJSON","wb","Sheets","SheetNames","excelBuffer","write","bookType","Blob","isExplicit","revisionNumberColumnIndex","revisionNumber","messageForLock","lockMechanism","unlockMechanism","code","time","toLocaleString","nextProps","nextState","nextContext","maximize","contentCSS","validationErrorMessages","handleExport","bind","handleLockClick","handleUnlockClick","handleDuplicateRowClick","handleEditClick","handleCancelClick","handleSaveClick","handleSaveHistoryClick","handleHistoryToggle","disableMoves","isValid","headerColoring","amount","changes","oldV","handlePageChange","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {createRef} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Row, Col, Card, CardBody, CardFooter} from 'reactstrap';\r\n\r\nimport {HotTable} from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport {groupingMap} from '../matrixDataMap';\r\nimport {columnLogic} from '../matrixColumnLogicMap';\r\n\r\nimport PaginationMatrix from \"../components/Pagination\"\r\n\r\nimport Header from '../components/Header'\r\nimport Sidebar from '../components/Sidebar'\r\nimport Toolbar from '../components/ToolbarMatrix'\r\nimport ModalImport from '../components/ModalImport'\r\nimport Spinner from '../components/Spinner'\r\nimport EmptyDataset from '../components/EmptyDataset'\r\n\r\nimport {editOnToggle, spinnerToggle} from \"../redux/actions\";\r\n\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\n// For export File\r\nimport XLSX from 'xlsx'\r\nimport {saveAs} from 'file-saver';\r\n\r\n// Rest api module import\r\nimport RestApiModule from '../RestApiModule'\r\n\r\n// Alert module\r\nimport AlertModule from '../AlertModule'\r\n\r\nclass Matrix extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.restApi = new RestApiModule();\r\n        this.alert = new AlertModule();\r\n\r\n        this.hotTableComponent = createRef();\r\n        this.hot = null;\r\n        this.handsontableData = null;\r\n        this.handsontableDataBackup = null;\r\n\r\n        this.errorMessages = null;\r\n        this.errorBoxTitle = null;\r\n        this.columnHeaders = [];\r\n        this.titles = [];\r\n        this.columns = [];\r\n        this.handleColumnHeaders();\r\n\r\n        this.selectedRowCoords = {r: null, c: null};\r\n        this.editedRowCoords = {r: null, c: null};\r\n        this.validatedCell = {r: null, c: null};\r\n        this.rowValidation = true;\r\n        this.showHistory = false;\r\n        this.filter = null;\r\n        this.mandatoryColumns = null;\r\n\r\n\r\n        //this.itemPerPage = +process.env.REACT_APP_MATRIX_ITEM_PER_PAGE;\r\n        this.state = {\r\n            isDataExistsInDB: false,\r\n            newRowAdded: false,\r\n            showHistory: false,\r\n            activePage: 1,\r\n            itemPerPage: +process.env.REACT_APP_MATRIX_ITEM_PER_PAGE,\r\n            totalCountOfData: 0,\r\n            exportDataAsExcelFile: null\r\n        };\r\n\r\n        Handsontable.hooks.add('afterSelectionEnd', (r, c) => {\r\n            this.selectedRowCoords.r = r;\r\n            this.selectedRowCoords.c = c;\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n        if (this.props.user) {\r\n\r\n            // get mandatory columns from map file\r\n            this.mandatoryColumns = this.mandatoryColumnExtractor();\r\n\r\n            this.setStateAsync({permittedColumns: this.props.user.role.permittedColumns});\r\n            this.hot = this.hotTableComponent.current.hotInstance;\r\n\r\n            this.dataLoad();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    calculatePagination(total) {\r\n\r\n        if (total) {\r\n            const pageCount = +total / this.state.itemPerPage;\r\n            this.setStateAsync({totalCountOfData: total, pageCount})\r\n        }\r\n    }\r\n\r\n    dataCountOfSelectedRegion() {\r\n\r\n        const {token, region, radioSite} = this.props;\r\n\r\n        if (region) {\r\n            this.restApi.callApi('getMatrixDataCount', {\r\n                token,\r\n                region,\r\n                radioSite\r\n            }).then(response => {\r\n                this.calculatePagination(response.ConnectivityCount[0].Count)\r\n            })\r\n        }\r\n    }\r\n\r\n    async dataLoad(filterChanged) {\r\n\r\n        if (this._isMounted) {\r\n            const {token, region, radioSite} = this.props;\r\n\r\n            // that means filtered options changed, so we reset the activePage number to 1\r\n            if (filterChanged) {\r\n\r\n                this.setStateAsync({\r\n                    activePage: 1,\r\n                    itemPerPage: (filterChanged === \"radioSite\") ? 100 : +process.env.REACT_APP_MATRIX_ITEM_PER_PAGE\r\n                });\r\n            }\r\n\r\n            if (region) {\r\n                this.props.setSpinner();\r\n\r\n                // get count of data\r\n                await this.dataCountOfSelectedRegion()\r\n\r\n                //reset selected row data\r\n                this.resetSelectedRow()\r\n\r\n                this.restApi.callApi('getMatrixData', {\r\n                    token,\r\n                    region,\r\n                    radioSite,\r\n                    count: this.state.itemPerPage.toString(),\r\n                    page_index: this.state.activePage.toString()\r\n                }).then(async (response) => {\r\n                    //console.log(response)\r\n\r\n                    // mock test\r\n                    //response.exec_status = \"error\";\r\n\r\n                    const {ConnectivityMatrix, exec_status} = response;\r\n\r\n                    // If data doesnt exist in EAI DB we should set a flag to manage toolbar actions\r\n                    if (exec_status === \"success\" &&\r\n                        ConnectivityMatrix.length > 0) {\r\n\r\n                        this.setStateAsync({isDataExistsInDB: true});\r\n\r\n                        this.handsontableData = ConnectivityMatrix; // store the copy of data\r\n                        this.hot.loadData(this.handsontableData);\r\n\r\n                        this.paginationRowNumbers();\r\n\r\n                        /* Filter for show active rows only*/\r\n                        this.filter = this.hot.getPlugin('filters');\r\n\r\n                        await this.revisionRowFilter();\r\n\r\n                    } else {\r\n\r\n                        this.setStateAsync({isDataExistsInDB: false});\r\n                    }\r\n\r\n                    // remove spinner from screen\r\n                    this.props.setSpinner();\r\n\r\n                }).catch(err => {\r\n                    // err state. If need we can give message to user.\r\n                    // Error handling is managed by RestApiModule.\r\n                    // We don't need to do extra development in here\r\n\r\n                    // Somehow if this block executed, we can only change the flag to false.\r\n                    this.setStateAsync({isDataExistsInDB: false});\r\n\r\n                    // remove spinner from screen\r\n                    this.props.setSpinner();\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    setStateAsync(state) {\r\n        return new Promise((resolve) => {\r\n            this.setState(state, resolve)\r\n        });\r\n    }\r\n\r\n    async handlePageChange(pageNumber) {\r\n        //console.log(pageNumber);\r\n        // TODO: call api to retrieve data for matrix page\r\n        // data will provided by page number\r\n        await this.setStateAsync({activePage: pageNumber});\r\n        this.dataLoad();\r\n    }\r\n\r\n    paginationRowNumbers() {\r\n        // break the handsontable row headers mechanism to show to user exact row numbers while paginating\r\n        const {activePage, itemPerPage} = this.state;\r\n\r\n        const startPoint =((activePage - 1) * itemPerPage) + 1;\r\n        const newNumbers = Array.from(Array(itemPerPage), (_, i) => startPoint + i)\r\n\r\n        this.hot.updateSettings({\r\n            rowHeaders: newNumbers\r\n        })\r\n    }\r\n\r\n    // click event handle for edit button\r\n    handleEditClick() {\r\n\r\n        const {r, c} = this.selectedRowCoords;\r\n        if (r === null && c === null) return;\r\n\r\n        // Lock mechanism controls\r\n        const dto = this.prepareDTOforLockMechanism(r, false);\r\n\r\n        this.restApi.callApi('lock', dto).then(response => {\r\n            const json = response.resultLock;\r\n            const {user} = this.props;\r\n\r\n            console.log(json);\r\n\r\n            // can I continue to edit ?\r\n            const continueToEdit = json.islock && json.uname === user.name;\r\n\r\n            if (continueToEdit) {\r\n\r\n                const etatRule = this.ruleExtractor(\"etatCheckValue\");\r\n                const archivedRule = this.ruleExtractor(\"archivedCheckValue\");\r\n                const etatDataAtCell = this.hot.getDataAtRowProp(r, \"etat\");\r\n                const archivedDataAtCell = this.hot.getDataAtRowProp(r, \"archived\");\r\n\r\n                const checkEtatValue = etatRule.isValue.includes(etatDataAtCell)\r\n                const checkArchivedValue = archivedRule.isValue.includes(archivedDataAtCell)\r\n\r\n                if (checkEtatValue && checkArchivedValue) {\r\n\r\n                    // create backup data before editing;\r\n                    this.handsontableDataBackup = JSON.parse(JSON.stringify(this.handsontableData));\r\n\r\n                    // Change edit mode on redux\r\n                    this.props.setEdit();\r\n\r\n                    this.setCellProperties(r, c);\r\n                    this.editedRowCoords.r = r;\r\n                    this.editedRowCoords.c = c;\r\n                } else {\r\n\r\n                    const {language} = this.props;\r\n                    this.alert.showMessage(\"warning\",\r\n                        language.editModeRestrictionTitle,\r\n                        language.editModeRestriction,\r\n                        false);\r\n                }\r\n            } else {\r\n                this.showMessageForLockMechanism(true, json)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    // click handle for add new row\r\n    async handleNewRowClick(duplicate = false) {\r\n\r\n        await this.setStateAsync({newRowAdded : true});\r\n        this.editedRowCoords.r = 0;\r\n        this.editedRowCoords.c = 0;\r\n\r\n        // create backup data before editing;\r\n        this.handsontableDataBackup = JSON.parse(JSON.stringify(this.handsontableData));\r\n\r\n        this.props.setEdit();\r\n        this.hot.alter('insert_row', 0, 1);\r\n        this.setCellProperties(0, null, duplicate);\r\n\r\n        if (this.state.showHistory)\r\n            this.iterateRevisionRows();\r\n    }\r\n\r\n    async handleDuplicateRowClick() {\r\n\r\n        const {r, c} = this.selectedRowCoords;\r\n        if (r === null && c === null) return;\r\n\r\n        await this.handleNewRowClick(true);\r\n\r\n        // get existing data at row\r\n        const data = this.hot.getDataAtRow(r);\r\n\r\n        // find radio Site column for special case. we need empty radio site for duplicated row\r\n        const radioSiteColumnIndex = this.findIndexOfColumn(0,'radioSite');\r\n\r\n        // get column count for iteration\r\n        const colCount = this.hot.countCols();\r\n\r\n        // iterate the columns\r\n        for (let x = 0; x <= colCount; x++) {\r\n\r\n            // if column is radio site, pass it\r\n            if (x === radioSiteColumnIndex) continue;\r\n\r\n            // set data\r\n            this.hot.setDataAtCell(0, x, data[x])\r\n        }\r\n    }\r\n\r\n    // history toggle finished\r\n    async handleHistoryToggle() {\r\n\r\n        await this.setStateAsync({showHistory: !this.state.showHistory})\r\n        await this.revisionRowFilter();\r\n    }\r\n\r\n    handleCancelClick() {\r\n        this.setStateAsync({newRowAdded : false}).then(() => {\r\n\r\n            const {r, c} = this.selectedRowCoords;\r\n            if (r === null && c === null) return;\r\n\r\n            // Lock mechanism controls\r\n            const dto = this.prepareDTOforLockMechanism(r, false);\r\n\r\n            // In all circumstances call implicit unlock\r\n            this.restApi.callApi('unlock', dto).then(response => {\r\n                console.log(response);\r\n                this.showMessageForLockMechanism(false, response.resultUnlock)\r\n\r\n            })\r\n\r\n            this.cancelEdit();\r\n        });\r\n    }\r\n\r\n    handleSaveClick() {\r\n        this.saveAction();\r\n    }\r\n\r\n    handleSaveHistoryClick() {\r\n        this.saveAction(true)\r\n    }\r\n\r\n    // save action for row edited or new\r\n    saveAction(revision) {\r\n\r\n        const {language} = this.props;\r\n\r\n        if (this.rowValidation) {\r\n\r\n            const {r, c} = this.editedRowCoords;\r\n            const {token} = this.props;\r\n\r\n            if (r !== null || r !== undefined) {\r\n                // data would send to API\r\n                let data = this.hot.getDataAtRow(r);\r\n\r\n                data = this.columns.reduce((newRowData, item, index) => {\r\n\r\n                    Object.assign(newRowData,\r\n                        (data[index] !== null)\r\n                            ? {[item.data]: data[index]}\r\n                            : {[item.data]: \"\"}\r\n                    );\r\n                    return newRowData;\r\n                }, {});\r\n\r\n                const mandatoryColumnsFilled = this.checkMandatoryColumnsFilled(data);\r\n\r\n                if (mandatoryColumnsFilled) {\r\n\r\n                    let isRevision = false;\r\n                    if (revision) {\r\n                       isRevision = revision\r\n                    }\r\n\r\n                    // Call backend to save row\r\n                    this.restApi.callApi(\"saveRow\", {\r\n                        token,\r\n                        row: data,\r\n                        isNewRow: this.state.newRowAdded,\r\n                        isRevision\r\n                    }).then(response => {\r\n\r\n                        const {processed, log} = response.result;\r\n\r\n                        const message = log.split('\\n').join('<br>');\r\n                        if (processed) {\r\n                            this.alert.showMessage(\"success\",\r\n                                language.saveActionSuccessTitle,\r\n                                message,\r\n                                false\r\n                            )\r\n\r\n\r\n                            this.selectedRowCoords.c = c;\r\n                            this.selectedRowCoords.r = r;\r\n                            this.editedRowCoords.r = null;\r\n                            this.editedRowCoords.c = null;\r\n\r\n                            // Change edit mode on redux\r\n                            this.props.setEdit();\r\n                            // Reset new row state if its true\r\n                            if (this.state.newRowAdded)\r\n                                this.setState({ newRowAdded : false});\r\n\r\n                            this.dataLoad();\r\n\r\n                        } else {\r\n                            this.alert.showMessage(\"error\",\r\n                                language.saveActionFailTitle,\r\n                                message,\r\n                                false\r\n                            )\r\n                        }\r\n                    })\r\n                } else {\r\n\r\n                    const title = language.mandatoryDataTitle;\r\n                    let text = language.mandatoryDataText;\r\n\r\n                    text = text.replace(\"{columns}\", this.mandatoryColumns.join(',<br>'));\r\n\r\n                    this.alert.showMessage(\"error\", title, text, false);\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            const {language} = this.props;\r\n            this.alert.showMessage(\"error\",\r\n                language.validationMessageBoxTitle,\r\n                language.validationErrorGeneralMessage,\r\n                false)\r\n        }\r\n    }\r\n\r\n    async revisionRowFilter() {\r\n        if (this._isMounted) {\r\n            const colIndex = this.findIndexOfColumn(0,'archived');\r\n\r\n            const arg = this.state.showHistory ? '' : 'NO'; // this param is for filtering on handsontable\r\n\r\n            if (this.state.showHistory) {\r\n                this.filter.removeConditions(colIndex);\r\n            } else {\r\n                this.filter.addCondition(colIndex, 'contains', arg);\r\n            }\r\n            await this.filter.filter();\r\n\r\n            // Makeup for revisioned rows.\r\n            await this.iterateRevisionRows();\r\n        }\r\n    }\r\n\r\n    setCellProperties(r, c, isDuplicateRow) {\r\n\r\n        const colCount = this.hot.countCols();\r\n        let col = c !== null ? c : 0;\r\n\r\n        for (let x = 0; x <= colCount; x++) {\r\n            const {prop, readOnly, readOnlyInEditMode} = this.hot.getCellMeta(r,x);\r\n\r\n            if (typeof prop !== \"string\") continue\r\n\r\n            // if prop has got readyOnly attribute with value \"true\", write permission will restricted\r\n            // if prop hasn't got readOnly attribute it would be false by default. So we need to check if\r\n            // this action is adding new row or editing existing row.\r\n            // if action is editing a row then we should check readOnlyInEditMode attribute of prop.\r\n            // if it's exist we should get opposite value because if we add this attribute to prop it value should be \"true\"\r\n            // it means this property can not be writable in edit mode\r\n            // if readOnlyInEditMode attribute is not exist in prop there isn't extra attribute checking for this cell\r\n            // can be writable or not. So we can put \"true\" value to associated variable.\r\n            const writable = readOnly ? !readOnly : !this.state.newRowAdded ? !readOnlyInEditMode : !readOnly;\r\n\r\n            if (writable) {\r\n                if (this.state.permittedColumns.indexOf(prop) >= 0) {\r\n\r\n                    const type = this.hot.getDataType(r, x); // get cell type from loaded map\r\n\r\n                    // this 2 row for initiate the rules on editing row.\r\n                    //const value = this.hot.getDataAtCell(r, x);\r\n                    //this.columnEvents(r, prop, value);\r\n\r\n                    col = col === 0 ? x : col; // when add new row find first editable col.\r\n\r\n                    this.hot.setCellMeta(r, x, \"editor\", type);\r\n                    this.hot.setCellMeta(r, x, \"className\", 'bg-warning text-dark');\r\n                }\r\n            }\r\n        }\r\n        // set initial value for newly adding rows\r\n        if (this.state.newRowAdded && !isDuplicateRow) {\r\n            this.setInitialValueOfColumn();\r\n        }\r\n\r\n\r\n        this.hot.render();\r\n        this.hot.selectCell(r, col);\r\n    }\r\n\r\n    findIndexOfColumn(r, propName) {\r\n        const colCount = this.hot.countCols();\r\n        for (let c = 0; c <= colCount; c++) {\r\n            const {prop} = this.hot.getCellMeta(r,c);\r\n            if (prop === propName) {\r\n                return c;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Before save action mandatory columns are must be filled\r\n    checkMandatoryColumnsFilled(rowData) {\r\n\r\n        const checkData = this.mandatoryColumns.reduce((data, columnId) => {\r\n            data.push(rowData[columnId]);\r\n            return data;\r\n        }, []);\r\n\r\n        return checkData.every(data => {\r\n            return data !== undefined && data !== \"\" && data !== null\r\n        })\r\n    }\r\n\r\n    // Finished initial value setter\r\n    setInitialValueOfColumn() {\r\n        this.columns.map((item) => {\r\n            if (item.hasOwnProperty('initialValue')) {\r\n                this.hot.setDataAtRowProp(0, item.data, item.initialValue)\r\n            }\r\n            return true;\r\n        })\r\n    }\r\n\r\n    // Finished, cancel edit return back to last backup data\r\n    cancelEdit() {\r\n        this.handsontableData = JSON.parse(JSON.stringify(this.handsontableDataBackup));\r\n        this.hot.loadData(this.handsontableData);\r\n        this.hot.render();\r\n\r\n        // Change edit mode on redux\r\n        this.props.setEdit();\r\n\r\n        if (this.state.showHistory)\r\n            this.iterateRevisionRows();\r\n    }\r\n\r\n    // reset row finished\r\n    resetRow(r) {\r\n        const colCount = this.hot.countCols();\r\n        for (let x = 0; x <= colCount; x++) {\r\n\r\n            this.hot.setCellMeta(r, x, \"editor\", false);\r\n            this.hot.setCellMeta(r, x, \"className\", 'bg-primary text-white');\r\n        }\r\n        this.hot.render();\r\n        this.setState({ newRowAdded : false});\r\n    }\r\n\r\n    // reset seleted rows for some reason such as change region, change active page\r\n    resetSelectedRow() {\r\n\r\n        this.selectedRowCoords.r = null\r\n        this.selectedRowCoords.c = null\r\n        this.editedRowCoords.r = null\r\n        this.editedRowCoords.c = null\r\n        this.validatedCell.r = null\r\n        this.validatedCell.c = null\r\n\r\n        this.hot.deselectCell();\r\n    }\r\n\r\n    // disable moves finished\r\n    disableMoves() {\r\n        return false;\r\n    }\r\n\r\n    // Finished ip validation rule\r\n    ipValidate(value, callback) {\r\n\r\n        const pat = /^(?:\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b|null)$/;\r\n\r\n        this.rowValidation = pat.test(value);\r\n        callback(this.rowValidation);\r\n        if (!this.rowValidation)\r\n            this.showMessage(this.errorBoxTitle, this.errorMessages.invalidIP, true);\r\n    }\r\n\r\n    // Finished numeric value validation\r\n    numericValidate(value, callback) {\r\n\r\n        const pat = /^\\d+$/;\r\n\r\n        this.rowValidation = pat.test(value);\r\n        callback(this.rowValidation);\r\n        if (!this.rowValidation)\r\n            this.showMessage(this.errorBoxTitle, this.errorMessages.invalidNumber, true);\r\n    }\r\n\r\n    // Finished validation message box\r\n    showMessage(title, message, validatorClose) {\r\n        confirmAlert({\r\n            title: 'Validation Warning',\r\n            message: message,\r\n            closeOnEscape: false,\r\n            closeOnClickOutside: false,\r\n            customUI: ({ onClose }) => {\r\n\r\n                const closeAction = () => {\r\n                    if (validatorClose) {\r\n                        this.hot.selectCell(this.validatedCell.r, this.validatedCell.c);\r\n                        if (this.hot.getActiveEditor() !== undefined)\r\n                            this.hot.getActiveEditor().beginEditing();\r\n                        onClose();\r\n\r\n                    } else {\r\n                        this.cancelEdit();\r\n                        onClose();\r\n                    }\r\n                }\r\n                return (\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {title}\r\n\r\n                            <button type=\"button\" className=\"close\"\r\n                                    onClick={closeAction}\r\n                                    aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className={'card-text text-danger'}>{message}</div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <button className={'btn btn-warning'} onClick={closeAction}>\r\n                                Ok\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    // Finished column header groups\r\n    handleColumnHeaders() {\r\n\r\n        // Create a copy of map file\r\n        const headerMap = JSON.parse(JSON.stringify(groupingMap));\r\n\r\n        // Set the header groups for table\r\n        const headerGrouping = headerMap.filter((item) => {\r\n            item.colspan = item.columns.length;\r\n            return typeof item.columns === \"object\"\r\n        })\r\n\r\n        // set each and every column defaults\r\n        const cols = headerMap.map((item) => {\r\n\r\n            return item.columns.map(c => {\r\n\r\n                this.titles.push(c.label);\r\n\r\n                c.editor = false; // default readonly\r\n\r\n                if (typeof c.validator !== \"undefined\") {\r\n\r\n                    if (c.validator === 'ipValidator') {\r\n                        c.validator = (value, callback) => {\r\n                            this.ipValidate(value, callback)\r\n                        }\r\n                    }\r\n\r\n                    if (c.validator === 'isNumeric') {\r\n                        c.validator = (value, callback) => {\r\n                            this.numericValidate(value, callback)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (typeof c.type !== \"undefined\") {\r\n                    if (c.type === 'dropdown') {\r\n                        this.setPickList(c.data).then((list) => {\r\n                            c.source = list;\r\n                        });\r\n                    }\r\n                }\r\n                return c;\r\n            });\r\n        })\r\n\r\n        // spread the columns into single object\r\n        cols.map((c) => {\r\n            this.columns = [...this.columns, ...c];\r\n        })\r\n\r\n        // Pushing header group const to related vars\r\n        this.columnHeaders.push(headerGrouping);\r\n        this.columnHeaders.push(this.titles);\r\n    }\r\n\r\n    // Finished colouring header\r\n    headerColoring(col, TH) {\r\n\r\n        const TR = TH.parentNode;\r\n        const THEAD = TR.parentNode;\r\n\r\n        const b = THEAD.childNodes.length;\r\n        const n = Array.prototype.indexOf.call(THEAD.childNodes, TR);\r\n        const headerLevel = (-1) * b + n;\r\n\r\n        function applyClass(elem, className) {\r\n            if (!Handsontable.dom.hasClass(elem, className))\r\n                Handsontable.dom.addClass(elem, className);\r\n        }\r\n\r\n        if (headerLevel === -1 || headerLevel === -2) {\r\n\r\n            if (col >=0 && col <= 11) applyClass(TH, 'color1');\r\n            if (col === 12) applyClass(TH, 'color2');\r\n            if (col >=13 && col <= 20) applyClass(TH, 'color3');\r\n            if (col >=21 && col <= 27) applyClass(TH, 'color4');\r\n            if (col >=28 && col <= 30) applyClass(TH, 'color5');\r\n            if (col >=31 && col <= 34) applyClass(TH, 'color6');\r\n            if (col >=35 && col <= 43) applyClass(TH, 'color7');\r\n            if (col >=44 && col <= 46) applyClass(TH, 'color8');\r\n            if (col >=47 && col <= 50) applyClass(TH, 'color9');\r\n        }\r\n    }\r\n\r\n    // Finished pick list setter function\r\n    setPickList(name) {\r\n        return new Promise ((res, rej) => {\r\n\r\n            const value = `${name}Picklist_value`;\r\n            const key = `${name}Picklist`;\r\n\r\n            this.restApi.callApi('getPickList', {\r\n                token: this.props.token,\r\n                pickListName: key\r\n\r\n            }).then((response) => {\r\n\r\n                if (response.pickList.length > 0) {\r\n                     const list = response.pickList.map((item) => {\r\n                        return item[value];\r\n                    })\r\n                    res(list)\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        })\r\n    }\r\n\r\n    // Finished revision row makeup\r\n    iterateRevisionRows() {\r\n\r\n        const rc = this.hot.countRows();\r\n        const cc = this.hot.countCols();\r\n\r\n        for (let r = 0; r <= rc; r++) {\r\n            const value = this.hot.getDataAtRowProp(r, 'archived');\r\n            if (value === 'YES' || value === \"Yes\" || value === \"yes\") {\r\n                for (let c = 0; c <= cc; c++) {\r\n                    this.hot.setCellMeta(r, c, 'renderer', (instance, td) => {\r\n\r\n                        const {showHistory} = this.state;\r\n                        if (showHistory)\r\n                            td.classList.add('revision-row');\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        this.hot.render();\r\n    }\r\n\r\n    // Read the rule from imported rule file\r\n    mandatoryColumnExtractor() {\r\n        return groupingMap.reduce((fullArr, item) => {\r\n            const cols = item.columns.reduce((arr, col) => {\r\n                if (col.mandatory) arr.push(col.data)\r\n                return arr;\r\n            }, []);\r\n            return [...fullArr, ...cols]\r\n        }, [])\r\n    }\r\n\r\n    // Read the rule from imported rule file\r\n    ruleExtractor(columnId) {\r\n        return columnLogic.find((item) => {\r\n            return item.id === columnId;\r\n        })\r\n    }\r\n\r\n    // Generic attributes validations and rule runner\r\n    async columnEvents(r, c, newV) {\r\n\r\n        this.validatedCell.r = r;\r\n        this.validatedCell.c = c;\r\n\r\n        const properties = this.ruleExtractor(c);\r\n        if (properties) {\r\n            const {methodCaller, rules, executeRules, paramName, additionalParams, ruleChain} = properties;\r\n\r\n            if (methodCaller) {\r\n                // we understand that this logic needs to call api\r\n\r\n                // default dto\r\n                let dto = {\r\n                    token: this.props.token,\r\n                    [paramName]: this.hot.getDataAtRowProp(r, c)\r\n                };\r\n\r\n                if (typeof additionalParams !== 'undefined' &&\r\n                    typeof additionalParams === 'object') {\r\n\r\n                    // create addition parameter to bind exact one\r\n                    const additionalDTO = additionalParams.map((prop) => {\r\n                        return {[prop]: this.hot.getDataAtRowProp(r, prop)}\r\n                    });\r\n\r\n                    // dto with additional parameters\r\n                    dto = Object.assign({}, dto, ...additionalDTO);\r\n                }\r\n\r\n                // method caller and logic execution\r\n                //await this.genericCL(methodCaller, dto);\r\n                this.restApi.callApi(methodCaller, dto).then((response) => {\r\n\r\n                    if (typeof response.isExist !== 'undefined') {\r\n\r\n                        if (!response.isExist) {\r\n                            // value is not exist in DB, show message\r\n                            this.showMessage(this.errorBoxTitle, this.errorMessages[c], true);\r\n                            return false;\r\n\r\n                        } else {\r\n                            // value is exist in DB, check other rules associated with that one\r\n                            if (executeRules && executeRules.length > 0) {\r\n                                executeRules.map(props => {\r\n\r\n                                    const {propId} = props;\r\n                                    const data = this.hot.getDataAtRowProp(r, propId)\r\n\r\n                                    this.columnEvents(r, propId, data)\r\n                                })\r\n                            }\r\n                        }\r\n\r\n                        if (ruleChain && ruleChain.length > 0) {\r\n                            this.ruleChainHandle(ruleChain, dto, r)\r\n                        }\r\n                    } else {\r\n                        rules[0].changedValue = response.List.map(i => {return i.value})\r\n                        this.staticRules(r, null, rules);\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                this.staticRules(r, newV, rules)\r\n            }\r\n        }\r\n    }\r\n\r\n    ruleChainHandle(ruleChain, dto, r) {\r\n\r\n        ruleChain.map(item => {\r\n            if (item.parentResponse) {\r\n                this.restApi.callApi(item.methodCaller, dto).then(response => {\r\n                    const { exec_status } = response;\r\n                    const value = response[item.parsingKey]\r\n                    if (exec_status === \"success\") {\r\n                        this.staticRules(r, value, item.rules)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    staticRules(r, value, rules) {\r\n        if (rules) {\r\n            rules.map((item) => {\r\n                if (item.columnValue && value) {\r\n                    if (item.columnValue === value) {\r\n                        // status changes\r\n                        this.hot.setDataAtRowProp(r, item.changedId, item.changedValue);\r\n                    }\r\n                } else if (!item.columnValue && value) {\r\n\r\n                    this.hot.setDataAtRowProp(r, item.changedId, value);\r\n\r\n                } else {\r\n                    this.hot.setCellMeta(r, this.hot.propToCol(item.changedId), 'source', item.changedValue);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleExport() {\r\n        const {token, region} = this.props;\r\n\r\n        this.restApi.callApi('exportData', {\r\n            region,\r\n            token\r\n        }).then(response => {\r\n            const today = new Date();\r\n            //const todayDate =  '_' + today.getDate() +  (today.toLocaleString('default', { month: 'long' })) + today.getFullYear();\r\n\r\n            const todayDate = '_' + today.getFullYear() + '-' + (today.getMonth()+1) + '-' + today.getDate() + 'T' + today.getHours() + '.' + today.getMinutes()\r\n\r\n            const ws = XLSX.utils.json_to_sheet(response.ExportedExcelAsJSON);\r\n            const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n            const data = new Blob([excelBuffer], {type: 'xlsx'});\r\n\r\n           // saveAs(data, `DataMatrix${todayDate}.xlsx`);\r\n            saveAs(data, `Exported_RANConn${todayDate}.xlsx`);\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    handleLockClick() {\r\n\r\n        const {r} = this.selectedRowCoords;\r\n        if (r === null) return;\r\n\r\n        const dto = this.prepareDTOforLockMechanism(r,true);\r\n\r\n        this.restApi.callApi('lock', dto).then(response => {\r\n\r\n            this.showMessageForLockMechanism(true, response.resultLock);\r\n\r\n        })\r\n    }\r\n\r\n    handleUnlockClick() {\r\n        const {r} = this.selectedRowCoords;\r\n        if (r === null) return;\r\n\r\n        const dto = this.prepareDTOforLockMechanism(r,true);\r\n\r\n        this.restApi.callApi('unlock', dto).then(response => {\r\n\r\n            this.showMessageForLockMechanism(false, response.resultUnlock)\r\n        })\r\n\r\n    }\r\n\r\n    prepareDTOforLockMechanism(r, isExplicit) {\r\n        const {token} = this.props;\r\n\r\n        // get existing data at row\r\n        const data = this.hot.getDataAtRow(r);\r\n        const radioSiteColumnIndex = this.findIndexOfColumn(0,'radioSite');\r\n        const revisionNumberColumnIndex = this.findIndexOfColumn(0,'revisionNumber');\r\n\r\n        const radioSite = data[radioSiteColumnIndex].toString();\r\n        const revisionNumber = data[revisionNumberColumnIndex].toString();\r\n\r\n\r\n        return {\r\n            token,\r\n            radioSite,\r\n            revisionNumber,\r\n            isExplicit\r\n        }\r\n    }\r\n\r\n    showMessageForLockMechanism(messageForLock, result) {\r\n\r\n        const {lockMechanism, unlockMechanism} = this.props.language;\r\n\r\n        let message = messageForLock ? lockMechanism[result.code.toString()] : unlockMechanism[result.code.toString()]\r\n\r\n        message = message\r\n            ? message.replace(\"{uname}\", result.uname).replace(\"{time}\", new Date(result.time).toLocaleString())\r\n            : \"Undefined\";\r\n\r\n        this.alert.showMessage('info', unlockMechanism.title, message, false);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextState.isDataExistsInDB !== this.state.isDataExistsInDB ||\r\n            nextState.activePage !== this.state.activePage ||\r\n            nextState.totalCountOfData !== this.state.totalCountOfData ||\r\n            nextState.newRowAdded !== this.state.newRowAdded ||\r\n            nextState.maximize !== this.props.maximize\r\n    }\r\n\r\n    render() {\r\n        const {maximize, language, contentCSS} = this.props;\r\n\r\n        if (language) {\r\n            this.errorBoxTitle = language.validationMessageBoxTitle;\r\n            this.errorMessages = language.validationErrorMessages;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Header/>\r\n                <Row className=\"h-100\">\r\n                    <Sidebar maximize={maximize}/>\r\n                    <Col className={contentCSS}>\r\n                        <Toolbar\r\n                            wrapper={'toolbar mt-2'}\r\n                            isDataExist={this.state.isDataExistsInDB}\r\n                            newRowAdded={this.state.newRowAdded}\r\n                            export={this.handleExport.bind(this)}\r\n                            lock={this.handleLockClick.bind(this)}\r\n                            unlock={this.handleUnlockClick.bind(this)}\r\n                            new={this.handleNewRowClick.bind(this)}\r\n                            duplicate={this.handleDuplicateRowClick.bind(this)}\r\n                            edit={this.handleEditClick.bind(this)}\r\n                            cancel={this.handleCancelClick.bind(this)}\r\n                            save={this.handleSaveClick.bind(this)}\r\n                            save-history={this.handleSaveHistoryClick.bind(this)}\r\n                            history={this.handleHistoryToggle.bind(this)}\r\n                            handleRegionChange={this.dataLoad.bind(this)}\r\n                            handleRadioSiteChange={this.dataLoad.bind(this)}\r\n                        />\r\n\r\n                        <Card className={'mt-1 fixedCard'}>\r\n                            <CardBody>\r\n                                <HotTable ref={this.hotTableComponent} id={'hot'}\r\n                                  licenseKey={'non-commercial-and-evaluation'}\r\n                                  nestedHeaders={this.columnHeaders}\r\n                                  columns={this.columns}\r\n                                  stretchH={'all'}\r\n                                  dropdownMenu={true}\r\n                                  filters={true}\r\n                                  manualColumnResize={true}\r\n                                  width={'100%'}\r\n                                  height={'100%'}\r\n                                  fixedColumnsLeft={0}\r\n                                  columnSorting={true}\r\n                                  currentRowClassName={['bg-primary', 'text-white']}\r\n                                  enterBeginsEditing={false}\r\n                                  outsideClickDeselects={false}\r\n                                  enterMoves={this.disableMoves()}\r\n                                  fillHandle={this.disableMoves()}\r\n                                  afterValidate={(isValid, value, row, prop) => {\r\n                                      // this is check dropdown values are proper or not.\r\n                                      this.validatedCell.r = row;\r\n                                      this.validatedCell.c = prop;\r\n                                  }}\r\n                                  afterGetColHeader={(col, TH) => {\r\n                                      this.headerColoring(col, TH)\r\n                                  }}\r\n                                  afterCreateRow={(index, amount, source) => {\r\n                                      //console.log(index, amount, source)\r\n                                  }}\r\n                                  afterChange={(changes) => {\r\n                                      // TODO: check esc button when its clicked\r\n                                      if (changes) {\r\n                                          const [r, c, oldV, newV] = changes[0];\r\n                                          //&& !this.state.newRowAdded\r\n                                          if (oldV !== newV)\r\n                                            this.columnEvents(r, c, newV);\r\n                                      }\r\n                                  }}\r\n                                />\r\n\r\n                                {!this.state.isDataExistsInDB &&\r\n                                    <EmptyDataset page={'matrix'}/>\r\n                                }\r\n                            </CardBody>\r\n\r\n                            <CardFooter className={'text-center'}>\r\n                                <PaginationMatrix\r\n                                    activePage={this.state.activePage}\r\n                                    itemPerPage={this.state.itemPerPage}\r\n                                    totalCountOfData={this.state.totalCountOfData}\r\n                                    handlePageChange={this.handlePageChange.bind(this)}\r\n                                />\r\n                            </CardFooter>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModalImport loadAfterImport={this.dataLoad.bind(this)}/>\r\n                <Spinner/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        token: state.token,\r\n        user: state.user,\r\n        language: state.language,\r\n        maximize: state.maximize,\r\n        contentCSS: state.contentCSS,\r\n        region: state.region,\r\n        radioSite: state.radioSite,\r\n        spinnerToggle: state.spinnerToggle\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setEdit: () => dispatch(editOnToggle()),\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Matrix);"]},"metadata":{},"sourceType":"module"}