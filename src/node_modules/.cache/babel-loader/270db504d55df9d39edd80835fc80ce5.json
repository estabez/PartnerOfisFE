{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\src\\\\components\\\\ModalExport.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { modalExportToggle, spinnerToggle } from \"../redux/actions\";\nimport FileUploadProgress from 'react-fileupload-progress';\nimport RestApiModule from '../RestApiModule';\nimport { CSVLink } from 'react-csv';\nconst styles = {\n  progressWrapper: {\n    height: '25px',\n    marginTop: '10px',\n    marginBottom: '10px',\n    width: '100%',\n    float: 'left',\n    overflow: 'hidden',\n    backgroundColor: '#f5f5f5',\n    borderRadius: '4px',\n    WebkitBoxShadow: 'inset 0 1px 2px rgba(0,0,0,.1)',\n    boxShadow: 'inset 0 1px 2px rgba(0,0,0,.1)'\n  },\n  progressBar: {\n    float: 'left',\n    width: '0',\n    height: '100%',\n    fontSize: '12px',\n    lineHeight: '20px',\n    color: '#fff',\n    textAlign: 'center',\n    backgroundColor: '#5cb85c',\n    WebkitBoxShadow: 'inset 0 -1px 0 rgba(0,0,0,.15)',\n    boxShadow: 'inset 0 -1px 0 rgba(0,0,0,.15)',\n    WebkitTransition: 'width .6s ease',\n    Otransition: 'width .6s ease',\n    transition: 'width .6s ease'\n  },\n  cancelButton: {\n    marginTop: '5px',\n    WebkitAppearance: 'none',\n    padding: 0,\n    cursor: 'pointer',\n    background: '0 0',\n    border: 0,\n    float: 'left',\n    fontSize: '21px',\n    fontWeight: 700,\n    lineHeight: 1,\n    color: '#000',\n    textShadow: '0 1px 0 #fff',\n    filter: 'alpha(opacity=20)',\n    opacity: '.2'\n  },\n  bslabel: {\n    display: 'inline-block',\n    maxWidth: '100%',\n    marginBottom: '5px',\n    fontWeight: 700\n  },\n  bsHelp: {\n    display: 'block',\n    marginTop: '5px',\n    marginBottom: '10px',\n    color: '#737373'\n  },\n  bsButton: {\n    padding: '1px 5px',\n    fontSize: '12px',\n    lineHeight: '1.5',\n    borderRadius: '3px',\n    color: '#fff',\n    backgroundColor: '#337ab7',\n    borderColor: '#2e6da4',\n    display: 'inline-block',\n    marginBottom: 0,\n    fontWeight: 400,\n    textAlign: 'center',\n    whiteSpace: 'nowrap',\n    verticalAlign: 'middle',\n    touchAction: 'manipulation',\n    cursor: 'pointer',\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none',\n    backgroundImage: 'none',\n    border: '1px solid transparent'\n  }\n};\n\nclass ModalExportTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: {},\n      data: [],\n      cols: [],\n      fileJSON: [],\n      loading: true,\n      isUploadDisabled: true,\n      isValidateDisabled: true,\n      uploadHasError: true,\n      uploadProgress: 0,\n      showProgress: false\n    };\n    this.columnHeaders = [];\n    this.titles = [];\n    this.columns = [];\n    this.today = new Date();\n    this.todayDate = this.today.getFullYear() + '-' + (this.today.getMonth() + 1) + '-' + this.today.getDate();\n    this.fileName = 'DataMatrix_' + this.todayDate + '.csv';\n    this.showProgress = false;\n    this.restApi = new RestApiModule();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.chosenFile.innerText = e.target.files[0].name;\n    const files = e.target.files;\n    this.setState({\n      isUploadDisabled: false\n    });\n    if (files && files[0]) this.setState({\n      file: files[0]\n    });\n  }\n\n  toggle() {\n    this.props.setModalExport();\n  }\n\n  getExportDataJSON() {\n    this.restApi.callApi('exportExcel', {\n      token: this.props.token,\n      region: \"Benimelal\"\n    }).then(response => {\n      this.setState(prevState => ({\n        fileJSON: [...prevState.fileJSON, response.ExportedExcelAsJSON]\n      }));\n      console.log(response.ExportedExcelAsJSON);\n      console.log(this.state.fileJSON);\n      console.log(this.state.fileJSON[0]);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  customFormRenderer(onSubmit) {\n    return React.createElement(\"form\", {\n      id: \"customForm\",\n      style: {\n        marginBottom: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'row',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'col-4',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'col-8',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: styles.bsHelp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.fileName), React.createElement(\"button\", {\n      onClick: this.getExportDataJSON.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"start\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(CSVLink, {\n      data: this.state.fileJSON,\n      filename: this.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Export\")))));\n  }\n\n  formGetter() {\n    return this.state.fileJSON;\n  }\n\n  customProgressRenderer(progress, hasError, cancelHandler) {\n    if (hasError || progress > -1) {\n      let barStyle = Object.assign({}, styles.progressBar);\n      barStyle.width = progress + '%';\n      let message = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, barStyle.width);\n\n      if (hasError) {\n        barStyle.backgroundColor = '#d9534f';\n        message = React.createElement(\"span\", {\n          style: {\n            'color': '#a94442'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Failed to upload ...\");\n      }\n\n      if (!hasError && progress === 100) {\n        message = React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Done\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.progressWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: barStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'alert alert-info mt-2',\n        style: {\n          'clear': 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, message));\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    const language = this.props.language;\n\n    if (language) {\n      return React.createElement(Modal, {\n        isOpen: this.props.open,\n        size: 'l',\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, language.exportDataMatrixFile), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(FileUploadProgress, {\n        key: \"ex2\",\n        url: \"http://localhost:3000/api/upload\",\n        method: \"post\",\n        onProgress: (e, request, progress) => {\n          console.log('progress', e, request, progress);\n          this.props.setSpinner();\n        },\n        onLoad: (e, request) => {\n          console.log('load', e, request);\n          this.props.setSpinner();\n        },\n        onError: (e, request) => {\n          console.log('error', e, request);\n          this.props.setSpinner();\n        },\n        onAbort: (e, request) => {\n          console.log('abort', e, request);\n          this.props.setSpinner();\n        },\n        formGetter: this.formGetter.bind(this),\n        formRenderer: this.customFormRenderer.bind(this),\n        progressRenderer: this.customProgressRenderer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    open: state.modalExportToggle,\n    export: state.export,\n    language: state.language,\n    token: state.token\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setModalExport: () => dispatch(modalExportToggle()),\n    setSpinner: () => dispatch(spinnerToggle())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalExportTemplate);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/ModalExport.jsx"],"names":["React","connect","Modal","ModalHeader","ModalBody","modalExportToggle","spinnerToggle","FileUploadProgress","RestApiModule","CSVLink","styles","progressWrapper","height","marginTop","marginBottom","width","float","overflow","backgroundColor","borderRadius","WebkitBoxShadow","boxShadow","progressBar","fontSize","lineHeight","color","textAlign","WebkitTransition","Otransition","transition","cancelButton","WebkitAppearance","padding","cursor","background","border","fontWeight","textShadow","filter","opacity","bslabel","display","maxWidth","bsHelp","bsButton","borderColor","whiteSpace","verticalAlign","touchAction","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","backgroundImage","ModalExportTemplate","Component","constructor","props","state","file","data","cols","fileJSON","loading","isUploadDisabled","isValidateDisabled","uploadHasError","uploadProgress","showProgress","columnHeaders","titles","columns","today","Date","todayDate","getFullYear","getMonth","getDate","fileName","restApi","handleChange","bind","e","chosenFile","innerText","target","files","name","setState","toggle","setModalExport","getExportDataJSON","callApi","token","region","then","response","prevState","ExportedExcelAsJSON","console","log","catch","error","customFormRenderer","onSubmit","formGetter","customProgressRenderer","progress","hasError","cancelHandler","barStyle","Object","assign","message","render","language","open","exportDataMatrixFile","request","setSpinner","mapStateToProps","export","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {modalExportToggle, spinnerToggle} from \"../redux/actions\";\r\nimport FileUploadProgress from 'react-fileupload-progress';\r\nimport RestApiModule from '../RestApiModule';\r\n\r\nimport { CSVLink } from 'react-csv'\r\n\r\n\r\n\r\nconst styles = {\r\n    progressWrapper: {\r\n        height: '25px',\r\n        marginTop: '10px',\r\n        marginBottom: '10px',\r\n        width: '100%',\r\n        float: 'left',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#f5f5f5',\r\n        borderRadius: '4px',\r\n        WebkitBoxShadow: 'inset 0 1px 2px rgba(0,0,0,.1)',\r\n        boxShadow: 'inset 0 1px 2px rgba(0,0,0,.1)'\r\n    },\r\n    progressBar: {\r\n        float: 'left',\r\n        width: '0',\r\n        height: '100%',\r\n        fontSize: '12px',\r\n        lineHeight: '20px',\r\n        color: '#fff',\r\n        textAlign: 'center',\r\n        backgroundColor: '#5cb85c',\r\n        WebkitBoxShadow: 'inset 0 -1px 0 rgba(0,0,0,.15)',\r\n        boxShadow: 'inset 0 -1px 0 rgba(0,0,0,.15)',\r\n        WebkitTransition: 'width .6s ease',\r\n        Otransition: 'width .6s ease',\r\n        transition: 'width .6s ease'\r\n    },\r\n    cancelButton: {\r\n        marginTop: '5px',\r\n        WebkitAppearance: 'none',\r\n        padding: 0,\r\n        cursor: 'pointer',\r\n        background: '0 0',\r\n        border: 0,\r\n        float: 'left',\r\n        fontSize: '21px',\r\n        fontWeight: 700,\r\n        lineHeight: 1,\r\n        color: '#000',\r\n        textShadow: '0 1px 0 #fff',\r\n        filter: 'alpha(opacity=20)',\r\n        opacity: '.2'\r\n    },\r\n\r\n    bslabel: {\r\n        display: 'inline-block',\r\n        maxWidth: '100%',\r\n        marginBottom: '5px',\r\n        fontWeight: 700\r\n    },\r\n\r\n    bsHelp: {\r\n        display: 'block',\r\n        marginTop: '5px',\r\n        marginBottom: '10px',\r\n        color: '#737373'\r\n    },\r\n\r\n    bsButton: {\r\n        padding: '1px 5px',\r\n        fontSize: '12px',\r\n        lineHeight: '1.5',\r\n        borderRadius: '3px',\r\n        color: '#fff',\r\n        backgroundColor: '#337ab7',\r\n        borderColor: '#2e6da4',\r\n        display: 'inline-block',\r\n        marginBottom: 0,\r\n        fontWeight: 400,\r\n        textAlign: 'center',\r\n        whiteSpace: 'nowrap',\r\n        verticalAlign: 'middle',\r\n        touchAction: 'manipulation',\r\n        cursor: 'pointer',\r\n        WebkitUserSelect: 'none',\r\n        MozUserSelect: 'none',\r\n        msUserSelect: 'none',\r\n        userSelect: 'none',\r\n        backgroundImage: 'none',\r\n        border: '1px solid transparent'\r\n    }\r\n};\r\n\r\nclass ModalExportTemplate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: {},\r\n            data: [],\r\n            cols: [],\r\n            fileJSON: [],\r\n            loading: true,\r\n            isUploadDisabled: true,\r\n            isValidateDisabled: true,\r\n            uploadHasError: true,\r\n            uploadProgress: 0,\r\n            showProgress: false\r\n        }\r\n        this.columnHeaders = [];\r\n        this.titles = [];\r\n        this.columns = [];\r\n        this.today = new Date();\r\n        this.todayDate = this.today.getFullYear() + '-' + (this.today.getMonth()+1) + '-' + this.today.getDate();\r\n        this.fileName = 'DataMatrix_' + this.todayDate + '.csv';\r\n        this.showProgress = false;\r\n        this.restApi = new RestApiModule();\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.chosenFile.innerText = e.target.files[0].name;\r\n        const files = e.target.files;\r\n        this.setState({\r\n            isUploadDisabled: false\r\n        })\r\n        if (files && files[0]) this.setState({file: files[0]});\r\n    };\r\n\r\n    toggle() {\r\n        this.props.setModalExport();\r\n    }\r\n\r\n    getExportDataJSON () {\r\n      this.restApi.callApi('exportExcel', {\r\n            token: this.props.token,\r\n          region: \"Benimelal\"\r\n        }).then(response => {\r\n          this.setState(prevState => ({\r\n              fileJSON: [...prevState.fileJSON, response.ExportedExcelAsJSON]\r\n          }))\r\n          console.log(response.ExportedExcelAsJSON);\r\n\r\n          console.log(this.state.fileJSON)\r\n          console.log(this.state.fileJSON[0])\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n\r\n\r\n    }\r\n\r\n    customFormRenderer(onSubmit) {\r\n        return (\r\n            <form id='customForm' style={{marginBottom: '15px'}}>\r\n                <div className={'row'}>\r\n                    <div className={'col-4'}></div>\r\n                    <div className={'col-8'}>\r\n                        <label style={styles.bsHelp}>{this.fileName}</label>\r\n                        <button onClick={this.getExportDataJSON.bind(this)}>start</button>\r\n                        <button>\r\n                            <CSVLink data={this.state.fileJSON} filename={this.fileName}>Export</CSVLink>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    formGetter() {\r\n        return this.state.fileJSON;\r\n    }\r\n\r\n    customProgressRenderer(progress, hasError, cancelHandler) {\r\n        if (hasError || progress > -1) {\r\n            let barStyle = Object.assign({}, styles.progressBar);\r\n            barStyle.width = progress + '%';\r\n\r\n            let message = (<span>{barStyle.width}</span>);\r\n            if (hasError) {\r\n                barStyle.backgroundColor = '#d9534f';\r\n                message = (<span style={{'color': '#a94442'}}>Failed to upload ...</span>);\r\n            }\r\n            if (!hasError && progress === 100) {\r\n                message = (<span>Done</span>);\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <div style={styles.progressWrapper}>\r\n                        <div style={barStyle}></div>\r\n                    </div>\r\n                    <div className={'alert alert-info mt-2'} style={{'clear': 'left'}}>\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {language} = this.props;\r\n        if (language) {\r\n            return (\r\n                <Modal isOpen={this.props.open} size={'l'} centered={true}>\r\n                    <ModalHeader toggle={this.toggle.bind(this)}>{language.exportDataMatrixFile}</ModalHeader>\r\n                    <ModalBody>\r\n                        <FileUploadProgress key='ex2' url='http://localhost:3000/api/upload' method='post'\r\n                                            onProgress={(e, request, progress) => {\r\n                                                console.log('progress', e, request, progress);\r\n                                                this.props.setSpinner();\r\n                                            }}\r\n                                            onLoad={(e, request) => {\r\n                                                console.log('load', e, request);\r\n                                                this.props.setSpinner();\r\n                                            }}\r\n                                            onError={(e, request) => {\r\n                                                console.log('error', e, request);\r\n                                                this.props.setSpinner();\r\n                                            }}\r\n                                            onAbort={(e, request) => {\r\n                                                console.log('abort', e, request);\r\n                                                this.props.setSpinner();\r\n                                            }}\r\n                                            formGetter={this.formGetter.bind(this)}\r\n                                            formRenderer={this.customFormRenderer.bind(this)}\r\n                                            progressRenderer={this.customProgressRenderer.bind(this)}\r\n\r\n                        />\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        open: state.modalExportToggle,\r\n        export: state.export,\r\n        language: state.language,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setModalExport: () => dispatch(modalExportToggle()),\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalExportTemplate);"]},"metadata":{},"sourceType":"module"}