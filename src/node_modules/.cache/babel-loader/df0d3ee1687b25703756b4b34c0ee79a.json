{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\src\\\\views\\\\Main.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport { Row, Col, Card, CardBody, CardFooter } from 'reactstrap';\nimport Header from '../components/Header';\nimport Sidebar from \"../components/Sidebar\";\nimport RestApiModule from '../RestApiModule';\nimport Spinner from '../components/Spinner';\nimport { editOnToggle, spinnerToggle } from \"../redux/actions\";\nimport Handsontable from \"handsontable\";\n\nclass WDM extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.restApi = new RestApiModule();\n    this.state = {\n      columns: [],\n      data: [],\n      newArrColumns: [],\n      newArrData: [],\n      newArrDataForPair: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.setSpinner();\n    this.restApi.callApi('exceldata', {}).then(response => {\n      console.log(\"aaaa\");\n      const json = response.data[0];\n      const jsonBig = response.data;\n\n      for (let key in json) {\n        if (json.hasOwnProperty(key)) {\n          this.state.newArrColumns.push(key);\n        }\n      }\n\n      for (let a = 0; a < jsonBig.length; a++) {\n        const jsonPair = response.data[a];\n\n        for (let key in jsonPair) {\n          if (jsonPair.hasOwnProperty(key)) {\n            this.state.newArrData.push(jsonPair[key]);\n          }\n        }\n\n        this.state.data.push(this.state.newArrData);\n        this.state.newArrData = [];\n      }\n\n      console.log(this.state.newArrColumns);\n      this.state.columns.push(this.state.newArrColumns);\n      this.forceUpdate();\n    }).catch(err => {\n      console.log(err);\n    });\n    this.props.setSpinner();\n    /*\r\n            //console.log(this.state.columns);\r\n            Axios({\r\n                //PLEASE FIX URL BASED ON YOUR LOCAL MACHINE PORT WHICH SET FOR BACKEND NODE\r\n                method: 'POST',\r\n                url: `http://localhost:8777/test-jersey-rest-maven-tomcat/rest/testservice/test12/`,\r\n                data: null,\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            }).then(async (response) => {\r\n                console.log(\"aaaa\");\r\n    \r\n                const json = response.data[0].variants[0];\r\n                const jsonBig = response.data[0].variants;\r\n                for (let key in json) {\r\n                    if (json.hasOwnProperty(key)) {\r\n                        this.state.newArrColumns.push(key);\r\n                    }\r\n                }\r\n    \r\n                for(let a=0; a<jsonBig.length; a++){\r\n                    const jsonPair = response.data[0].variants[a];\r\n                    for(let key in jsonPair){\r\n                        if (jsonPair.hasOwnProperty(key)) {\r\n                            this.state.newArrData.push(jsonPair[key]);\r\n                        }\r\n                    }\r\n                    this.state.data.push(this.state.newArrData);\r\n                    this.state.newArrData = [];\r\n                }\r\n                this.state.columns.push(this.state.newArrColumns);\r\n                this.forceUpdate();\r\n    \r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })*/\n  }\n\n  headerColoring(col, TH) {\n    console.log(col);\n    console.log(TH);\n    const TR = TH.parentNode;\n    const THEAD = TR.parentNode;\n    const b = THEAD.childNodes.length;\n    const n = Array.prototype.indexOf.call(THEAD.childNodes, TR);\n    const headerLevel = -1 * b + n;\n\n    function applyClass(elem, className) {\n      if (!Handsontable.dom.hasClass(elem, className)) Handsontable.dom.addClass(elem, className);\n    }\n\n    if (headerLevel === -1 || headerLevel === -2) {\n      if (col in this.columns) {\n        const {\n          color\n        } = this.columns[col];\n        if (color) applyClass(TH, color);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      maximize: this.props.maximize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      className: this.props.contentCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: 'mt-1 fixedCard',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HotTable, {\n      data: this.state.data,\n      autoRowSize: true,\n      autoWrapRow: true,\n      dropdownMenu: true,\n      filters: true,\n      manualColumnResize: true,\n      columnSorting: true,\n      colHeaders: this.state.columns[0],\n      rowHeaders: true,\n      width: \"1900\",\n      height: \"600\",\n      licenseKey: \"non-commercial-and-evaluation\",\n      afterGetColHeader: (col, TH) => {\n        this.headerColoring(col, TH);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    language: state.language,\n    maximize: state.maximize,\n    contentCSS: state.contentCSS,\n    fontSize: state.topologySelectedNodeFontSize,\n    spinnerToggle: state.spinnerToggle\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSpinner: () => dispatch(spinnerToggle())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WDM);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/views/Main.jsx"],"names":["React","connect","Axios","HotTable","Row","Col","Card","CardBody","CardFooter","Header","Sidebar","RestApiModule","Spinner","editOnToggle","spinnerToggle","Handsontable","WDM","Component","constructor","props","_isMounted","restApi","state","columns","data","newArrColumns","newArrData","newArrDataForPair","componentDidMount","setSpinner","callApi","then","response","console","log","json","jsonBig","key","hasOwnProperty","push","a","length","jsonPair","forceUpdate","catch","err","headerColoring","col","TH","TR","parentNode","THEAD","b","childNodes","n","Array","prototype","indexOf","call","headerLevel","applyClass","elem","className","dom","hasClass","addClass","color","render","maximize","contentCSS","mapStateToProps","token","language","fontSize","topologySelectedNodeFontSize","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Axios from 'axios';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport {Row, Col, Card, CardBody, CardFooter} from 'reactstrap';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport RestApiModule from '../RestApiModule';\r\nimport Spinner from '../components/Spinner';\r\nimport {editOnToggle, spinnerToggle} from \"../redux/actions\";\r\nimport Handsontable from \"handsontable\";\r\n\r\n\r\nclass WDM extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.restApi = new RestApiModule();\r\n        this.state = {\r\n            columns: [\r\n            ],\r\n            data: [\r\n            ],\r\n            newArrColumns: [],\r\n            newArrData: [],\r\n            newArrDataForPair: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.setSpinner();\r\n        this.restApi.callApi('exceldata', {\r\n\r\n        }).then(response => {\r\n            console.log(\"aaaa\");\r\n\r\n            const json = response.data[0];\r\n            const jsonBig = response.data;\r\n            for (let key in json) {\r\n                if (json.hasOwnProperty(key)) {\r\n                    this.state.newArrColumns.push(key);\r\n\r\n                }\r\n            }\r\n\r\n            for(let a=0; a<jsonBig.length; a++){\r\n                const jsonPair = response.data[a];\r\n                for(let key in jsonPair){\r\n                    if (jsonPair.hasOwnProperty(key)) {\r\n                        this.state.newArrData.push(jsonPair[key]);\r\n                    }\r\n                }\r\n                this.state.data.push(this.state.newArrData);\r\n                this.state.newArrData = [];\r\n            }\r\n            console.log(this.state.newArrColumns);\r\n\r\n            this.state.columns.push(this.state.newArrColumns);\r\n            this.forceUpdate();\r\n\r\n        }).catch((err) => {\r\n    console.log(err);\r\n})\r\n\r\n        this.props.setSpinner();\r\n\r\n/*\r\n        //console.log(this.state.columns);\r\n        Axios({\r\n            //PLEASE FIX URL BASED ON YOUR LOCAL MACHINE PORT WHICH SET FOR BACKEND NODE\r\n            method: 'POST',\r\n            url: `http://localhost:8777/test-jersey-rest-maven-tomcat/rest/testservice/test12/`,\r\n            data: null,\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }).then(async (response) => {\r\n            console.log(\"aaaa\");\r\n\r\n            const json = response.data[0].variants[0];\r\n            const jsonBig = response.data[0].variants;\r\n            for (let key in json) {\r\n                if (json.hasOwnProperty(key)) {\r\n                    this.state.newArrColumns.push(key);\r\n                }\r\n            }\r\n\r\n            for(let a=0; a<jsonBig.length; a++){\r\n                const jsonPair = response.data[0].variants[a];\r\n                for(let key in jsonPair){\r\n                    if (jsonPair.hasOwnProperty(key)) {\r\n                        this.state.newArrData.push(jsonPair[key]);\r\n                    }\r\n                }\r\n                this.state.data.push(this.state.newArrData);\r\n                this.state.newArrData = [];\r\n            }\r\n            this.state.columns.push(this.state.newArrColumns);\r\n            this.forceUpdate();\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })*/\r\n    }\r\n\r\n\r\n    headerColoring(col, TH) {\r\n\r\n        console.log(col);\r\n        console.log(TH);\r\n        const TR = TH.parentNode;\r\n        const THEAD = TR.parentNode;\r\n\r\n        const b = THEAD.childNodes.length;\r\n        const n = Array.prototype.indexOf.call(THEAD.childNodes, TR);\r\n        const headerLevel = (-1) * b + n;\r\n\r\n        function applyClass(elem, className) {\r\n            if (!Handsontable.dom.hasClass(elem, className))\r\n                Handsontable.dom.addClass(elem, className);\r\n        }\r\n\r\n        if (headerLevel === -1 || headerLevel === -2) {\r\n\r\n            if (col in this.columns) {\r\n                const {color} = this.columns[col];\r\n                if (color) applyClass(TH, color);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <Header/>\r\n                <Row className=\"h-100\">\r\n                    <Sidebar maximize={this.props.maximize}/>\r\n                    <Col className={this.props.contentCSS}>\r\n\r\n                        <Card className={'mt-1 fixedCard'}>\r\n                            <CardBody>\r\n                                <HotTable  data={this.state.data}   autoRowSize={true}  autoWrapRow={true} dropdownMenu={true} filters={true} manualColumnResize={true} columnSorting={true} colHeaders={this.state.columns[0]} rowHeaders={true} width=\"1900\" height=\"600\" licenseKey=\"non-commercial-and-evaluation\"\r\n                                           afterGetColHeader={(col, TH) => {\r\n                                               this.headerColoring(col, TH)\r\n                                           }}\r\n                                />\r\n\r\n                            </CardBody>\r\n\r\n\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        token: state.token,\r\n        language: state.language,\r\n        maximize: state.maximize,\r\n        contentCSS: state.contentCSS,\r\n        fontSize: state.topologySelectedNodeFontSize,\r\n        spinnerToggle: state.spinnerToggle,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WDM);"]},"metadata":{},"sourceType":"module"}