{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";/*\r\n* Rest Api module\r\n* Use for call rest api methods from one hand\r\n* It includes error handler\r\n*\r\n*/import axios from'axios';import Swal from'sweetalert2';var RestApiModule=/*#__PURE__*/function(){function RestApiModule(){_classCallCheck(this,RestApiModule);this.serverPath=process.env.REACT_APP_API_GATEWAY;this.endpoints={login:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/LoginWithCredentials\"},logout:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/Logout\"},checkToken:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/LoginWithToken\"},getRoles:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/GetUserRolesList\"},getRegions:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/GetUserRegions\"},ranFirst:{serviceName:process.env.REACT_APP_RAN_SERVICE,methodName:\"/GetRANTopologyFirstLevelforRegion\"},ranSecond:{serviceName:process.env.REACT_APP_RAN_SERVICE,methodName:\"/GetRANTopologySecondLevelforAggregSite\"},core:{serviceName:process.env.REACT_APP_CORE_SERVICE,methodName:\"/CoreTopologyView\"},wdm:{serviceName:process.env.REACT_APP_WDM_SERVICE,methodName:\"/WDMTopologyView\"}};}_createClass(RestApiModule,[{key:\"callApi\",value:function callApi(endpoint,dto){var _this=this;return new Promise(function(res,rej){var _this$endpoints$endpo=_this.endpoints[endpoint],serviceName=_this$endpoints$endpo.serviceName,methodName=_this$endpoints$endpo.methodName;axios({method:\"POST\",url:\"\".concat(_this.serverPath).concat(serviceName).concat(methodName),data:dto}).then(function _callee(response){var _response$data,exec_status,error_code,error_message;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://console.log(response);\n_response$data=response.data,exec_status=_response$data.exec_status,error_code=_response$data.error_code,error_message=_response$data.error_message;if(exec_status==='success'){res(response.data);}if(exec_status==='error'){if(+error_code===10){Swal.fire({title:'Error',text:error_message,icon:'error',showCancelButton:false,confirmButtonColor:'#3085d6',cancelButtonColor:'#d33',confirmButtonText:'OK'}).then(function(result){if(result.value){window.store.dispatch(window.setAuthUser(null));window.store.dispatch(window.setToken(null));document.location='/login';/*Swal.fire(\r\n                                    'Deleted!',\r\n                                    'Your file has been deleted.',\r\n                                    'success'\r\n                                )*/}});}rej(error_message);}case 3:case\"end\":return _context.stop();}}});}).catch(function(err){rej(err);});});}},{key:\"errorHandler\",value:function errorHandler(){}}]);return RestApiModule;}();export default RestApiModule;","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/RestApiModule.js"],"names":["axios","Swal","RestApiModule","serverPath","process","env","REACT_APP_API_GATEWAY","endpoints","login","serviceName","REACT_APP_AUTH_SERVICE","methodName","logout","checkToken","getRoles","getRegions","ranFirst","REACT_APP_RAN_SERVICE","ranSecond","core","REACT_APP_CORE_SERVICE","wdm","REACT_APP_WDM_SERVICE","endpoint","dto","Promise","res","rej","method","url","data","then","response","exec_status","error_code","error_message","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","value","window","store","dispatch","setAuthUser","setToken","document","location","catch","err"],"mappings":"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","sourcesContent":["/*\r\n* Rest Api module\r\n* Use for call rest api methods from one hand\r\n* It includes error handler\r\n*\r\n*/\r\n\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass RestApiModule {\r\n\r\n    constructor() {\r\n        this.serverPath = process.env.REACT_APP_API_GATEWAY;\r\n        this.endpoints = {\r\n            login: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/LoginWithCredentials\"\r\n            },\r\n            logout: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/Logout\"\r\n            },\r\n            checkToken: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/LoginWithToken\"\r\n            },\r\n            getRoles:{\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/GetUserRolesList\"\r\n            },\r\n            getRegions: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/GetUserRegions\"\r\n            },\r\n            ranFirst: {\r\n                serviceName: process.env.REACT_APP_RAN_SERVICE,\r\n                methodName: \"/GetRANTopologyFirstLevelforRegion\",\r\n            },\r\n            ranSecond: {\r\n                serviceName: process.env.REACT_APP_RAN_SERVICE,\r\n                methodName: \"/GetRANTopologySecondLevelforAggregSite\"\r\n            },\r\n            core: {\r\n                serviceName: process.env.REACT_APP_CORE_SERVICE,\r\n                methodName: \"/CoreTopologyView\"\r\n            },\r\n            wdm: {\r\n                serviceName: process.env.REACT_APP_WDM_SERVICE,\r\n                methodName: \"/WDMTopologyView\"\r\n            }\r\n        }\r\n    }\r\n\r\n    callApi(endpoint, dto) {\r\n\r\n        return new Promise((res, rej) => {\r\n            const {serviceName, methodName} = this.endpoints[endpoint];\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${this.serverPath}${serviceName}${methodName}`,\r\n                data: dto\r\n            }).then(async (response) => {\r\n\r\n                //console.log(response);\r\n\r\n                const {exec_status, error_code, error_message} = response.data;\r\n\r\n                if (exec_status === 'success') {\r\n                    res(response.data);\r\n                }\r\n\r\n                if (exec_status === 'error') {\r\n\r\n                    if (+error_code === 10) {\r\n                        Swal.fire({\r\n                            title: 'Error',\r\n                            text: error_message,\r\n                            icon: 'error',\r\n                            showCancelButton: false,\r\n                            confirmButtonColor: '#3085d6',\r\n                            cancelButtonColor: '#d33',\r\n                            confirmButtonText: 'OK'\r\n                        }).then((result) => {\r\n                            if (result.value) {\r\n                                window.store.dispatch(window.setAuthUser(null));\r\n                                window.store.dispatch(window.setToken(null));\r\n                                document.location = '/login'\r\n\r\n                                /*Swal.fire(\r\n                                    'Deleted!',\r\n                                    'Your file has been deleted.',\r\n                                    'success'\r\n                                )*/\r\n                            }\r\n                        })\r\n\r\n\r\n                    }\r\n                    rej(error_message)\r\n                }\r\n\r\n            }).catch((err) => {\r\n\r\n                rej(err)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    errorHandler() {\r\n\r\n    }\r\n}\r\n\r\nexport default RestApiModule;"]},"metadata":{},"sourceType":"module"}