{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\src\\\\components\\\\MaximizeContent.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { setMaximize } from \"../redux/actions\";\nimport { Button } from 'reactstrap';\nimport ReactTooltip from 'react-tooltip';\n\nclass MaximizeContent extends React.Component {\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    ReactTooltip.rebuild();\n  }\n\n  handleMaximize() {\n    this.props.toggleMaximize();\n  }\n\n  render() {\n    const {\n      language,\n      maximize,\n      editOn,\n      tooltipPlacement\n    } = this.props;\n    const toggleCSS = maximize ? 'icon icon-minimize' : 'icon icon-maximize';\n    const buttonCSS = maximize ? 'btn btn-warning' : 'btn btn-light';\n    const title = maximize ? language.standard : language.maximize;\n\n    if (language) {\n      return /*#__PURE__*/React.createElement(Button, {\n        className: buttonCSS,\n        disabled: editOn,\n        \"data-place\": tooltipPlacement,\n        \"data-tip\": title,\n        onClick: this.handleMaximize.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: toggleCSS,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    maximize: state.maximize,\n    language: state.language,\n    editOn: state.editOn,\n    tooltipPlacement: state.tooltipPlacement\n  };\n}\n\nfunction mapStateToDispatch(dispatch) {\n  return {\n    toggleMaximize: () => dispatch(setMaximize())\n  };\n}\n\nexport default connect(mapStateToProps, mapStateToDispatch)(MaximizeContent);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/components/MaximizeContent.jsx"],"names":["React","connect","setMaximize","Button","ReactTooltip","MaximizeContent","Component","componentDidUpdate","prevProps","prevState","snapshot","rebuild","handleMaximize","props","toggleMaximize","render","language","maximize","editOn","tooltipPlacement","toggleCSS","buttonCSS","title","standard","bind","mapStateToProps","state","mapStateToDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAGA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAE1CC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/CN,IAAAA,YAAY,CAACO,OAAb;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,SAAKC,KAAL,CAAWC,cAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,MAArB;AAA6BC,MAAAA;AAA7B,QAAiD,KAAKN,KAA5D;AACA,UAAMO,SAAS,GAAGH,QAAQ,GAAG,oBAAH,GAA0B,oBAApD;AACA,UAAMI,SAAS,GAAGJ,QAAQ,GAAG,iBAAH,GAAuB,eAAjD;AACA,UAAMK,KAAK,GAAGL,QAAQ,GAAGD,QAAQ,CAACO,QAAZ,GAAuBP,QAAQ,CAACC,QAAtD;;AAEA,QAAID,QAAJ,EAAc;AACV,0BACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEK,SAAnB;AACQ,QAAA,QAAQ,EAAEH,MADlB;AAEQ,sBAAYC,gBAFpB;AAGQ,oBAAUG,KAHlB;AAIQ,QAAA,OAAO,EAAE,KAAKV,cAAL,CAAoBY,IAApB,CAAyB,IAAzB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAG,QAAA,SAAS,EAAEJ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH,KAVD,MAUO;AACH,0BAAQ,yCAAR;AACH;AACJ;;AA7ByC;;AAgC9C,SAASK,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHT,IAAAA,QAAQ,EAAES,KAAK,CAACT,QADb;AAEHD,IAAAA,QAAQ,EAAEU,KAAK,CAACV,QAFb;AAGHE,IAAAA,MAAM,EAAEQ,KAAK,CAACR,MAHX;AAIHC,IAAAA,gBAAgB,EAAEO,KAAK,CAACP;AAJrB,GAAP;AAMH;;AAED,SAASQ,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHd,IAAAA,cAAc,EAAE,MAAMc,QAAQ,CAAC1B,WAAW,EAAZ;AAD3B,GAAP;AAGH;;AAGD,eAAeD,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,eAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {setMaximize} from \"../redux/actions\";\r\nimport {Button} from 'reactstrap';\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\n\r\nclass MaximizeContent extends React.Component {\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n    handleMaximize() {\r\n        this.props.toggleMaximize();\r\n    }\r\n\r\n    render() {\r\n        const {language, maximize, editOn, tooltipPlacement} = this.props;\r\n        const toggleCSS = maximize ? 'icon icon-minimize' : 'icon icon-maximize';\r\n        const buttonCSS = maximize ? 'btn btn-warning' : 'btn btn-light';\r\n        const title = maximize ? language.standard : language.maximize;\r\n\r\n        if (language) {\r\n            return (\r\n                <Button className={buttonCSS}\r\n                        disabled={editOn}\r\n                        data-place={tooltipPlacement}\r\n                        data-tip={title}\r\n                        onClick={this.handleMaximize.bind(this)}>\r\n                    <i className={toggleCSS}/>\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        maximize: state.maximize,\r\n        language: state.language,\r\n        editOn: state.editOn,\r\n        tooltipPlacement: state.tooltipPlacement\r\n    }\r\n}\r\n\r\nfunction mapStateToDispatch(dispatch) {\r\n    return {\r\n        toggleMaximize: () => dispatch(setMaximize())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(MaximizeContent);"]},"metadata":{},"sourceType":"module"}