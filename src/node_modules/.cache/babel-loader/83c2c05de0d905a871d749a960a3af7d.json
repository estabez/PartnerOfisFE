{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from\"react-redux\";import{Modal,ModalHeader,ModalBody}from'reactstrap';import{modalExportToggle,spinnerToggle}from\"../redux/actions\";import RestApiModule from'../RestApiModule';import{CSVLink}from'react-csv';var ModalExport=/*#__PURE__*/function(_React$Component){_inherits(ModalExport,_React$Component);function ModalExport(props){var _this;_classCallCheck(this,ModalExport);_this=_possibleConstructorReturn(this,_getPrototypeOf(ModalExport).call(this,props));_this.state={fileJSON:[]};_this.today=new Date();_this.todayDate=_this.today.getFullYear()+'-'+(_this.today.getMonth()+1)+'-'+_this.today.getDate();_this.fileName='DataMatrix_'+_this.todayDate+'.csv';_this.restApi=new RestApiModule();return _this;}_createClass(ModalExport,[{key:\"toggle\",value:function toggle(){this.props.setModalExport();}},{key:\"setStateAsync\",value:function setStateAsync(state){var _this2=this;return new Promise(function(resolve){_this2.setState(state,resolve);});}/*\r\n    componentDidMount () {\r\n    this.getExportDataJSON();\r\n    }\r\n\r\n*/},{key:\"render\",value:function render(){var language=this.props.language;if(language){return React.createElement(Modal,{isOpen:this.props.open,size:'l',centered:true},React.createElement(ModalHeader,{toggle:this.toggle.bind(this)},language.exportDataMatrixFile),React.createElement(ModalBody,null,React.createElement(\"div\",{className:'row'},React.createElement(\"div\",{className:'col-4'}),React.createElement(\"div\",{className:'col-8'},React.createElement(\"label\",null,this.fileName),React.createElement(\"button\",null,React.createElement(CSVLink,{data:this.props.data,filename:this.fileName},\"Export\"))))));}else{return React.createElement(React.Fragment,null);}}}]);return ModalExport;}(React.Component);function mapStateToProps(state){return{open:state.modalExportToggle,export:state.export,language:state.language,token:state.token,region:state.region};}function mapDispatchToProps(dispatch){return{setModalExport:function setModalExport(){return dispatch(modalExportToggle());},setSpinner:function setSpinner(){return dispatch(spinnerToggle());}};}export default connect(mapStateToProps,mapDispatchToProps)(ModalExport);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/ModalExport.jsx"],"names":["React","connect","Modal","ModalHeader","ModalBody","modalExportToggle","spinnerToggle","RestApiModule","CSVLink","ModalExport","props","state","fileJSON","today","Date","todayDate","getFullYear","getMonth","getDate","fileName","restApi","setModalExport","Promise","resolve","setState","language","open","toggle","bind","exportDataMatrixFile","data","Component","mapStateToProps","export","token","region","mapDispatchToProps","dispatch","setSpinner"],"mappings":"21BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,CAAeC,WAAf,CAA4BC,SAA5B,KAA4C,YAA5C,CACA,OAAQC,iBAAR,CAA2BC,aAA3B,KAA+C,kBAA/C,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,OAASC,OAAT,KAAwB,WAAxB,C,GAEMC,CAAAA,W,iFACF,qBAAYC,KAAZ,CAAmB,6CACf,6EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,EADD,CAAb,CAGA,MAAKC,KAAL,CAAa,GAAIC,CAAAA,IAAJ,EAAb,CACA,MAAKC,SAAL,CAAiB,MAAKF,KAAL,CAAWG,WAAX,GAA2B,GAA3B,EAAkC,MAAKH,KAAL,CAAWI,QAAX,GAAsB,CAAxD,EAA6D,GAA7D,CAAmE,MAAKJ,KAAL,CAAWK,OAAX,EAApF,CACA,MAAKC,QAAL,CAAgB,cAAgB,MAAKJ,SAArB,CAAiC,MAAjD,CACA,MAAKK,OAAL,CAAe,GAAIb,CAAAA,aAAJ,EAAf,CARe,aASlB,C,+DAGQ,CACL,KAAKG,KAAL,CAAWW,cAAX,GACH,C,oDACaV,K,CAAO,iBACjB,MAAO,IAAIW,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC5B,MAAI,CAACC,QAAL,CAAcb,KAAd,CAAqBY,OAArB,EACH,CAFM,CAAP,CAGH,CAEL;;;;;yCAQa,IACEE,CAAAA,QADF,CACc,KAAKf,KADnB,CACEe,QADF,CAEL,GAAIA,QAAJ,CAAc,CACV,MACI,qBAAC,KAAD,EAAO,MAAM,CAAE,KAAKf,KAAL,CAAWgB,IAA1B,CAAgC,IAAI,CAAE,GAAtC,CAA2C,QAAQ,CAAE,IAArD,EACI,oBAAC,WAAD,EAAa,MAAM,CAAE,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAArB,EAA8CH,QAAQ,CAACI,oBAAvD,CADJ,CAEI,oBAAC,SAAD,MACI,2BAAK,SAAS,CAAE,KAAhB,EACI,2BAAK,SAAS,CAAE,OAAhB,EADJ,CAEI,2BAAK,SAAS,CAAE,OAAhB,EACI,iCAAS,KAAKV,QAAd,CADJ,CAEI,kCACI,oBAAC,OAAD,EAAS,IAAI,CAAE,KAAKT,KAAL,CAAWoB,IAA1B,CAAgC,QAAQ,CAAE,KAAKX,QAA/C,WADJ,CAFJ,CAFJ,CADJ,CAFJ,CADJ,CAgBH,CAjBD,IAiBO,CACH,MAAQ,yCAAR,CACH,CACJ,C,yBApDqBnB,KAAK,CAAC+B,S,EAuDhC,QAASC,CAAAA,eAAT,CAAyBrB,KAAzB,CAAgC,CAC5B,MAAO,CACHe,IAAI,CAAEf,KAAK,CAACN,iBADT,CAEH4B,MAAM,CAAEtB,KAAK,CAACsB,MAFX,CAGHR,QAAQ,CAAEd,KAAK,CAACc,QAHb,CAIHS,KAAK,CAAEvB,KAAK,CAACuB,KAJV,CAKHC,MAAM,CAAExB,KAAK,CAACwB,MALX,CAAP,CAOH,CAED,QAASC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHhB,cAAc,CAAE,gCAAMgB,CAAAA,QAAQ,CAAChC,iBAAiB,EAAlB,CAAd,EADb,CAEHiC,UAAU,CAAE,4BAAMD,CAAAA,QAAQ,CAAC/B,aAAa,EAAd,CAAd,EAFT,CAAP,CAIH,CAED,cAAeL,CAAAA,OAAO,CAAC+B,eAAD,CAAkBI,kBAAlB,CAAP,CAA6C3B,WAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {modalExportToggle, spinnerToggle} from \"../redux/actions\";\r\nimport RestApiModule from '../RestApiModule';\r\nimport { CSVLink } from 'react-csv'\r\n\r\nclass ModalExport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileJSON: [],\r\n        }\r\n        this.today = new Date();\r\n        this.todayDate = this.today.getFullYear() + '-' + (this.today.getMonth()+1) + '-' + this.today.getDate();\r\n        this.fileName = 'DataMatrix_' + this.todayDate + '.csv';\r\n        this.restApi = new RestApiModule();\r\n    }\r\n\r\n\r\n    toggle() {\r\n        this.props.setModalExport();\r\n    }\r\n    setStateAsync(state) {\r\n        return new Promise((resolve) => {\r\n            this.setState(state, resolve)\r\n        });\r\n    }\r\n\r\n/*\r\n    componentDidMount () {\r\n    this.getExportDataJSON();\r\n    }\r\n\r\n*/\r\n\r\n\r\n    render() {\r\n        const {language} = this.props;\r\n        if (language) {\r\n            return (\r\n                <Modal isOpen={this.props.open} size={'l'} centered={true}>\r\n                    <ModalHeader toggle={this.toggle.bind(this)}>{language.exportDataMatrixFile}</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className={'row'}>\r\n                            <div className={'col-4'}></div>\r\n                            <div className={'col-8'}>\r\n                                <label >{this.fileName}</label>\r\n                                <button>\r\n                                    <CSVLink data={this.props.data} filename={this.fileName} >Export</CSVLink>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        open: state.modalExportToggle,\r\n        export: state.export,\r\n        language: state.language,\r\n        token: state.token,\r\n        region: state.region\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setModalExport: () => dispatch(modalExportToggle()),\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalExport);"]},"metadata":{},"sourceType":"module"}