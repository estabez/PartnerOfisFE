{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\src\\\\components\\\\LanguageButton.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { setLang } from \"../redux/actions\"; // Language files\n\nimport en from '../languages/en';\nimport fr from '../languages/fr';\n\nclass LanguageButton extends React.Component {\n  changeLanguage() {\n    if (this.props.lang === 'en') {\n      this.props.setLang(fr, 'fr');\n    } else {\n      this.props.setLang(en, 'en');\n    }\n  }\n\n  render() {\n    const {\n      language,\n      lang,\n      editOn,\n      buttonClass\n    } = this.props;\n\n    if (language) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClass,\n        disabled: editOn,\n        \"data-place\": 'bottom',\n        \"data-tip\": language.languageButtonText,\n        onClick: this.changeLanguage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: 'icon icon-language mr-2',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, language[lang]));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    language: state.language,\n    lang: state.lang,\n    editOn: state.editOn\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setLang: (langFile, lang) => dispatch(setLang(langFile, lang))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageButton);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/components/LanguageButton.jsx"],"names":["React","connect","setLang","en","fr","LanguageButton","Component","changeLanguage","props","lang","render","language","editOn","buttonClass","languageButtonText","bind","mapStateToProps","state","mapDispatchToProps","dispatch","langFile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,kBAAtB,C,CAEA;;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAEzCC,EAAAA,cAAc,GAAG;AAEb,QAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,IAAxB,EAA8B;AAC1B,WAAKD,KAAL,CAAWN,OAAX,CAAmBE,EAAnB,EAAuB,IAAvB;AACH,KAFD,MAEO;AACH,WAAKI,KAAL,CAAWN,OAAX,CAAmBC,EAAnB,EAAuB,IAAvB;AACH;AACJ;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAWF,MAAAA,IAAX;AAAiBG,MAAAA,MAAjB;AAAyBC,MAAAA;AAAzB,QAAwC,KAAKL,KAAnD;;AAEA,QAAIG,QAAJ,EAAc;AACV,0BACI;AAAQ,QAAA,SAAS,EAAEE,WAAnB;AACQ,QAAA,QAAQ,EAAED,MADlB;AAEQ,sBAAY,QAFpB;AAGQ,oBAAUD,QAAQ,CAACG,kBAH3B;AAIQ,QAAA,OAAO,EAAE,KAAKP,cAAL,CAAoBQ,IAApB,CAAyB,IAAzB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAG,QAAA,SAAS,EAAE,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAMI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBJ,QAAQ,CAACF,IAAD,CAAhC,CANJ,CADJ;AAUH,KAXD,MAWO;AACH,0BACI,yCADJ;AAGH;AAEJ;;AA/BwC;;AAiC7C,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHN,IAAAA,QAAQ,EAAEM,KAAK,CAACN,QADb;AAEHF,IAAAA,IAAI,EAAEQ,KAAK,CAACR,IAFT;AAGHG,IAAAA,MAAM,EAAEK,KAAK,CAACL;AAHX,GAAP;AAKH;;AAED,SAASM,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHjB,IAAAA,OAAO,EAAE,CAACkB,QAAD,EAAWX,IAAX,KAAoBU,QAAQ,CAACjB,OAAO,CAACkB,QAAD,EAAWX,IAAX,CAAR;AADlC,GAAP;AAGH;;AAED,eAAeR,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,cAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {setLang} from \"../redux/actions\";\r\n\r\n// Language files\r\nimport en from '../languages/en';\r\nimport fr from '../languages/fr';\r\n\r\nclass LanguageButton extends React.Component {\r\n\r\n    changeLanguage() {\r\n\r\n        if (this.props.lang === 'en') {\r\n            this.props.setLang(fr, 'fr');\r\n        } else {\r\n            this.props.setLang(en, 'en');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {language, lang, editOn, buttonClass} = this.props;\r\n\r\n        if (language) {\r\n            return(\r\n                <button className={buttonClass}\r\n                        disabled={editOn}\r\n                        data-place={'bottom'}\r\n                        data-tip={language.languageButtonText}\r\n                        onClick={this.changeLanguage.bind(this)}>\r\n                    <i className={'icon icon-language mr-2'}/>\r\n                    <span className='mr-1'>{language[lang]}</span>\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        language: state.language,\r\n        lang: state.lang,\r\n        editOn: state.editOn\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setLang: (langFile, lang) => dispatch(setLang(langFile, lang))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageButton);"]},"metadata":{},"sourceType":"module"}