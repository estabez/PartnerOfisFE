{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";/*\r\n* User Role definitions and tools\r\n*\r\n*/var RoleModule=/*#__PURE__*/function(){function RoleModule(){_classCallCheck(this,RoleModule);this.roleDefinitions=[{roleName:\"Admin\",permittedPages:['/matrix','/ran','/wdm','/core'],permittedColumns:'all',mainPage:'/matrix'},{roleName:\"E2E BSS\",permittedPages:['/matrix','/ran'],permittedColumns:[],mainPage:'/matrix'},{roleName:\"E2E TRANS\",permittedPages:['/matrix','/ran'],permittedColumns:[],mainPage:'/matrix'},{roleName:\"E2E RO\",permittedPages:['/matrix','/ran'],permittedColumns:null,mainPage:'/matrix'},{roleName:\"WDM Topology\",permittedPages:['/wdm'],permittedColumns:null,mainPage:'/wdm'},{roleName:\"Core Topology\",permittedPages:['/core'],permittedColumns:null,mainPage:'/core'}];}_createClass(RoleModule,[{key:\"getRole\",value:function getRole(role){return this.roleDefinitions.find(function(item){return item.roleName===role;});}}]);return RoleModule;}();export{RoleModule as default};","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/RoleModule.js"],"names":["RoleModule","roleDefinitions","roleName","permittedPages","permittedColumns","mainPage","role","find","item"],"mappings":"gVAAA;;;KAIqBA,CAAAA,U,yBAEjB,qBAAc,kCACV,KAAKC,eAAL,CAAuB,CACnB,CACIC,QAAQ,CAAE,OADd,CAEIC,cAAc,CAAE,CAAC,SAAD,CAAY,MAAZ,CAAoB,MAApB,CAA4B,OAA5B,CAFpB,CAGIC,gBAAgB,CAAE,KAHtB,CAIIC,QAAQ,CAAE,SAJd,CADmB,CAOnB,CACIH,QAAQ,CAAE,SADd,CAEIC,cAAc,CAAE,CAAC,SAAD,CAAY,MAAZ,CAFpB,CAGIC,gBAAgB,CAAE,EAHtB,CAIIC,QAAQ,CAAE,SAJd,CAPmB,CAanB,CACIH,QAAQ,CAAE,WADd,CAEIC,cAAc,CAAE,CAAC,SAAD,CAAY,MAAZ,CAFpB,CAGIC,gBAAgB,CAAE,EAHtB,CAIIC,QAAQ,CAAE,SAJd,CAbmB,CAmBnB,CACIH,QAAQ,CAAE,QADd,CAEIC,cAAc,CAAE,CAAC,SAAD,CAAY,MAAZ,CAFpB,CAGIC,gBAAgB,CAAE,IAHtB,CAIIC,QAAQ,CAAE,SAJd,CAnBmB,CAyBnB,CACIH,QAAQ,CAAE,cADd,CAEIC,cAAc,CAAE,CAAC,MAAD,CAFpB,CAGIC,gBAAgB,CAAE,IAHtB,CAIIC,QAAQ,CAAE,MAJd,CAzBmB,CA+BnB,CACIH,QAAQ,CAAE,eADd,CAEIC,cAAc,CAAE,CAAC,OAAD,CAFpB,CAGIC,gBAAgB,CAAE,IAHtB,CAIIC,QAAQ,CAAE,OAJd,CA/BmB,CAAvB,CAsCH,C,+DAEOC,I,CAAM,CACV,MAAO,MAAKL,eAAL,CAAqBM,IAArB,CAA0B,SAACC,IAAD,CAAU,CACvC,MAAQA,CAAAA,IAAI,CAACN,QAAL,GAAkBI,IAA1B,CACH,CAFM,CAAP,CAGH,C,iCA/CgBN,U","sourcesContent":["/*\r\n* User Role definitions and tools\r\n*\r\n*/\r\nexport default class RoleModule {\r\n\r\n    constructor() {\r\n        this.roleDefinitions = [\r\n            {\r\n                roleName: \"Admin\",\r\n                permittedPages: ['/matrix', '/ran', '/wdm', '/core'],\r\n                permittedColumns: 'all',\r\n                mainPage: '/matrix'\r\n            },\r\n            {\r\n                roleName: \"E2E BSS\",\r\n                permittedPages: ['/matrix', '/ran'],\r\n                permittedColumns: [],\r\n                mainPage: '/matrix'\r\n            },\r\n            {\r\n                roleName: \"E2E TRANS\",\r\n                permittedPages: ['/matrix', '/ran'],\r\n                permittedColumns: [],\r\n                mainPage: '/matrix'\r\n            },\r\n            {\r\n                roleName: \"E2E RO\",\r\n                permittedPages: ['/matrix', '/ran'],\r\n                permittedColumns: null,\r\n                mainPage: '/matrix'\r\n            },\r\n            {\r\n                roleName: \"WDM Topology\",\r\n                permittedPages: ['/wdm'],\r\n                permittedColumns: null,\r\n                mainPage: '/wdm'\r\n            },\r\n            {\r\n                roleName: \"Core Topology\",\r\n                permittedPages: ['/core'],\r\n                permittedColumns: null,\r\n                mainPage: '/core'\r\n            }\r\n        ]\r\n    }\r\n\r\n    getRole(role) {\r\n        return this.roleDefinitions.find((item) => {\r\n            return (item.roleName === role)\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}