{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\src\\\\App.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { BrowserRouter, Route, Switch, HashRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/App.scss';\nimport 'handsontable/dist/handsontable.full.css';\nimport { connect } from 'react-redux';\nimport { setLang, setAuthUser } from \"./redux/actions\"; //Private Routing\n\nimport { PrivateRoute } from \"./components/PrivateRoute\"; // User Privileges for accessible pages\n\nimport RoleModule from './RoleModule'; // Language file\n\nimport en from './languages/en'; // Views\n\nimport Login from './views/Login';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.roleModule = new RoleModule();\n  }\n\n  componentDidMount() {\n    // default lang\n    this.props.setLang(en, 'en');\n    const token = localStorage.getItem('e2eToken');\n\n    if (token !== null) {\n      const role = this.roleModule.getRole(\"Admin\");\n      const user = {\n        name: localStorage.getItem('user'),\n        role\n      };\n      this.props.setAuthUser(user);\n    } else {\n      this.props.setAuthUser(null);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          location = _this$props.location;\n    const requestedPath = location.pathname;\n\n    if (authUser !== undefined) {\n      return React.createElement(\"div\", {\n        className: 'container-fluid',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(HashRouter, {\n        basename: process.env.PUBLIC_URL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        exact: true,\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        key: requestedPath,\n        authUser: authUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    lang: state.lang,\n    language: state.language,\n    maximize: state.maximize,\n    authUser: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setLang: (langFile, lang) => dispatch(setLang(langFile, lang)),\n    setAuthUser: user => dispatch(setAuthUser(user))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/App.js"],"names":["React","withRouter","BrowserRouter","Route","Switch","HashRouter","connect","setLang","setAuthUser","PrivateRoute","RoleModule","en","Login","App","Component","constructor","props","roleModule","componentDidMount","token","localStorage","getItem","role","getRole","user","name","render","authUser","location","requestedPath","pathname","undefined","process","env","PUBLIC_URL","mapStateToProps","state","lang","language","maximize","mapDispatchToProps","dispatch","langFile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router';\nimport {BrowserRouter, Route, Switch, HashRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/App.scss';\nimport 'handsontable/dist/handsontable.full.css';\n\nimport {connect} from 'react-redux';\nimport {setLang, setAuthUser} from \"./redux/actions\";\n\n\n//Private Routing\nimport {PrivateRoute} from \"./components/PrivateRoute\";\n\n// User Privileges for accessible pages\nimport RoleModule from './RoleModule';\n\n// Language file\nimport en from './languages/en';\n\n// Views\nimport Login from './views/Login';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.roleModule = new RoleModule();\n    }\n\n    componentDidMount() {\n        // default lang\n        this.props.setLang(en, 'en');\n\n        const token = localStorage.getItem('e2eToken');\n\n        if (token !== null) {\n\n            const role = this.roleModule.getRole(\"Admin\");\n\n            const user = {\n                name: localStorage.getItem('user'),\n                role\n            };\n\n            this.props.setAuthUser(user)\n        } else {\n            this.props.setAuthUser(null)\n        }\n    }\n\n    render() {\n\n        const {authUser, location} = this.props;\n        const requestedPath = location.pathname;\n\n        if (authUser !== undefined) {\n            return (\n                <div className={'container-fluid'}>\n                    <HashRouter basename={process.env.PUBLIC_URL}>\n                        <Switch>\n                            <Route path=\"/\" exact component={Login}/>\n                            <Route path=\"/login\" exact component={Login}/>\n\n                            <PrivateRoute key={requestedPath} authUser={authUser} />\n                        </Switch>\n                    </HashRouter>\n                </div>\n            )\n        } else {\n            return <></>;\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        lang: state.lang,\n        language: state.language,\n        maximize: state.maximize,\n        authUser: state.user\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setLang: (langFile, lang) => dispatch(setLang(langFile, lang)),\n        setAuthUser: (user) => dispatch(setAuthUser(user))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n"]},"metadata":{},"sourceType":"module"}