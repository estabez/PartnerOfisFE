{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{createRef}from'react';import{connect}from\"react-redux\";import Axios from'axios';import{HotTable}from'@handsontable/react';import'handsontable/dist/handsontable.full.css';import{Row,Col,Card,CardBody,CardFooter}from'reactstrap';import Header from'../components/Header';import Sidebar from\"../components/Sidebar\";import RestApiModule from'../RestApiModule';import{editOnToggle,spinnerToggle}from\"../redux/actions\";import Toolbar from'../components/Toolbar';import AlertModule from'../AlertModule';var WDM=/*#__PURE__*/function(_React$Component){_inherits(WDM,_React$Component);var _super=_createSuper(WDM);function WDM(props){var _this;_classCallCheck(this,WDM);_this=_super.call(this,props);_this._isMounted=false;_this.hotTableComponent=createRef();_this.hot=null;_this.columns=[];_this.restApi=new RestApiModule();_this.handsontableDataBackup=null;_this.handsontableData=null;_this.alert=new AlertModule();_this.selectedRowCoords={r:null,c:null};_this.editedRowCoords={r:null,c:null};_this.state={columns:[],data:[],newArrColumns:[],ColumnsInOrder:[\"SKU\",\"Tedarikçi SKU\",\"Ürün İsmi\",\"Liste Fiyatı\",\"Satış Fiyatı\",\"İnd.Oran(%)\",\"Stok Adet\",\"T.Adet\",\"T.Sıra\",\"Ürt.Tar.\",\"Hz.Sr.\"],newArrData:[],newArrDataForPair:[],columnOptions:[]};return _this;}_createClass(WDM,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var company=localStorage.getItem('Company');this.props.setSpinner();this.restApi.callApi('exceldata',{company:company}).then(function(response){var json=response.data[0];var jsonBig=response.data;for(var key in json){if(json.hasOwnProperty(key)){_this2.state.newArrColumns.push(key);}}console.log(_this2.state.ColumnsInOrder);/*\r\n            for(let a=0; a<jsonBig.length; a++){\r\n                const jsonPair = response.data[a];\r\n                console.log(jsonPair)\r\n                for(let key in jsonPair){\r\n                    console.log(key)\r\n                    if (jsonPair.hasOwnProperty(key)) {\r\n                        this.state.newArrData.push(jsonPair[key]);\r\n                    }\r\n                }\r\n                this.state.data.push(this.state.newArrData);\r\n                this.state.newArrData = [];\r\n            }\r\n            */console.log(_this2.state.ColumnsInOrder[0]);for(var a=0;a<jsonBig.length;a++){var jsonPair=response.data[a];for(var c=0;c<11;c++){var _key=_this2.state.ColumnsInOrder[c];_this2.state.newArrData.push(jsonPair[_key]);}_this2.state.data.push(_this2.state.newArrData);_this2.state.newArrData=[];}console.log(_this2.state.data);_this2.state.columns.push(_this2.state.newArrColumns);_this2.forceUpdate();_this2.hot=_this2.hotTableComponent.current.hotInstance;_this2.handsontableData=_this2.state.data;//this.hot.setCellMeta(1, 4, \"className\", 'bg-primary text-white');\n//this.hot.render();\n/* var rows=this.hot.countRows();  // get the count of the rows in the table\r\n            var cols=this.hot.countCols();  // get the count of the columns in the table.\r\n            for(var row=0; row<rows; row++){  // go through each row of the table\r\n\r\n                    var cell = this.hot.getCell(row,1);\r\n                    cell.style.background = \"#00FF90\";\r\n\r\n            }\r\n\r\n            console.log(this.hot.getSettings())*/ //  this.hot.render();\n}).catch(function(err){console.log(err);});this.props.setSpinner();/*\r\n        //console.log(this.state.columns);\r\n        Axios({\r\n\r\n            method: 'POST',\r\n            url: `http://localhost:8777/test-jersey-rest-maven-tomcat/rest/testservice/test12/`,\r\n            data: null,\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }).then(async (response) => {\r\n            console.log(\"aaaa\");\r\n\r\n            const json = response.data[0].variants[0];\r\n            const jsonBig = response.data[0].variants;\r\n            for (let key in json) {\r\n                if (json.hasOwnProperty(key)) {\r\n                    this.state.newArrColumns.push(key);\r\n                }\r\n            }\r\n\r\n            for(let a=0; a<jsonBig.length; a++){\r\n                const jsonPair = response.data[0].variants[a];\r\n                for(let key in jsonPair){\r\n                    if (jsonPair.hasOwnProperty(key)) {\r\n                        this.state.newArrData.push(jsonPair[key]);\r\n                    }\r\n                }\r\n                this.state.data.push(this.state.newArrData);\r\n                this.state.newArrData = [];\r\n            }\r\n            this.state.columns.push(this.state.newArrColumns);\r\n            this.forceUpdate();\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })*/}},{key:\"setCellProperties\",value:function setCellProperties(r,c){var colCount=this.hot.countCols();var col=c!==null?c:0;for(var x=0;x<=colCount;x++){var _this$hot$getCellMeta=this.hot.getCellMeta(r,x),prop=_this$hot$getCellMeta.prop,readOnly=_this$hot$getCellMeta.readOnly,readOnlyInEditMode=_this$hot$getCellMeta.readOnlyInEditMode;var type=this.hot.getDataType(r,x);// get cell type from loaded map\ncol=col===0?x:col;// when add new row find first editable col.\nthis.hot.setCellMeta(r,x,\"editor\",type);this.hot.setCellMeta(r,x,\"className\",'bg-warning text-dark');}this.hot.render();this.hot.selectCell(r,col);}},{key:\"handleEditClick\",value:function handleEditClick(){var _this$selectedRowCoor=this.selectedRowCoords,r=_this$selectedRowCoor.r,c=_this$selectedRowCoor.c;if(r===null&&c===null)return;this.handsontableDataBackup=JSON.parse(JSON.stringify(this.handsontableData));// Change edit mode on redux\nthis.props.setEdit();this.setCellProperties(r,c);this.editedRowCoords.r=r;this.editedRowCoords.c=c;}},{key:\"handleCancelClick\",value:function handleCancelClick(){this.handsontableData=JSON.parse(JSON.stringify(this.handsontableDataBackup));this.hot.loadData(this.handsontableData);this.hot.render();// Change edit mode on redux\nthis.props.setEdit();}},{key:\"handleSaveClick\",value:function handleSaveClick(){var _this3=this;console.log(\"aaaa\");var _this$editedRowCoords=this.editedRowCoords,r=_this$editedRowCoords.r,c=_this$editedRowCoords.c;var data=this.hot.getDataAtRow(r);console.log(data);console.log(this.state.ColumnsInOrder);var finalData={};this.state.ColumnsInOrder.forEach(function(v,i){finalData[v]=data[i];});console.log(finalData);var company=localStorage.getItem('Company');console.log(company);this.restApi.callApi('saveRowAndSendFlxPoint',{row:finalData,company:company}).then(function(response){var saveResult=response.exec_status;if(saveResult==\"success\"){_this3.alert.showMessage(\"success\",\"Kayıt Başarılı\",response.SKU+\" için kayıt başarılı\",false);_this3.resetRow(r);// this method will return the edit view to normal\n_this3.props.setEdit();}else{_this3.alert.showMessage(\"error\",\"Kayıt Başarısız\",response.SKU+\" için kayıt başarısız\",false);}}).catch(function(err){console.log(err);});}},{key:\"resetRow\",value:function resetRow(r){var colCount=this.hot.countCols();for(var x=0;x<=colCount;x++){this.hot.setCellMeta(r,x,\"editor\",false);this.hot.setCellMeta(r,x,\"className\",'bg-primary text-white');}this.hot.render();this.setState({newRowAdded:false});}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Row,{className:\"h-100\"},/*#__PURE__*/React.createElement(Sidebar,{maximize:this.props.maximize}),/*#__PURE__*/React.createElement(Col,{className:this.props.contentCSS},/*#__PURE__*/React.createElement(Toolbar,{wrapper:'toolbar mt-2',isDataExist:this.state.isDataExistsInDB,newRowAdded:this.state.newRowAdded,edit:this.handleEditClick.bind(this),cancel:this.handleCancelClick.bind(this),save:this.handleSaveClick.bind(this)}),/*#__PURE__*/React.createElement(Card,{className:'mt-1 fixedCard'},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(HotTable,{ref:this.hotTableComponent,id:'hot',data:this.state.data,stretchH:'all',autoRowSize:true,autoWrapRow:true,dropdownMenu:true,filters:true,manualColumnResize:true,columnSorting:true,colHeaders:this.state.ColumnsInOrder,rowHeaders:true,width:'100%',height:'100%',licenseKey:\"non-commercial-and-evaluation\",afterSelectionEnd:function afterSelectionEnd(r,c){_this4.selectedRowCoords.r=r;_this4.selectedRowCoords.c=c;}}))))));}}]);return WDM;}(React.Component);function mapStateToProps(state){return{token:state.token,company:state.company,language:state.language,maximize:state.maximize,contentCSS:state.contentCSS,fontSize:state.topologySelectedNodeFontSize,spinnerToggle:state.spinnerToggle};}function mapDispatchToProps(dispatch){return{setEdit:function setEdit(){return dispatch(editOnToggle());},setSpinner:function setSpinner(){return dispatch(spinnerToggle());}};}export default connect(mapStateToProps,mapDispatchToProps)(WDM);","map":{"version":3,"sources":["C:/Users/soperasyon27/Desktop/FE/src18mart/src/src/views/Main.jsx"],"names":["React","createRef","connect","Axios","HotTable","Row","Col","Card","CardBody","CardFooter","Header","Sidebar","RestApiModule","editOnToggle","spinnerToggle","Toolbar","AlertModule","WDM","props","_isMounted","hotTableComponent","hot","columns","restApi","handsontableDataBackup","handsontableData","alert","selectedRowCoords","r","c","editedRowCoords","state","data","newArrColumns","ColumnsInOrder","newArrData","newArrDataForPair","columnOptions","company","localStorage","getItem","setSpinner","callApi","then","response","json","jsonBig","key","hasOwnProperty","push","console","log","a","length","jsonPair","forceUpdate","current","hotInstance","catch","err","colCount","countCols","col","x","getCellMeta","prop","readOnly","readOnlyInEditMode","type","getDataType","setCellMeta","render","selectCell","JSON","parse","stringify","setEdit","setCellProperties","loadData","getDataAtRow","finalData","forEach","v","i","row","saveResult","exec_status","showMessage","SKU","resetRow","setState","newRowAdded","maximize","contentCSS","isDataExistsInDB","handleEditClick","bind","handleCancelClick","handleSaveClick","Component","mapStateToProps","token","language","fontSize","topologySelectedNodeFontSize","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {createRef} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Axios from 'axios';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport {Row, Col, Card, CardBody, CardFooter} from 'reactstrap';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport RestApiModule from '../RestApiModule';\r\n\r\nimport {editOnToggle, spinnerToggle} from \"../redux/actions\";\r\n\r\nimport Toolbar from '../components/Toolbar';\r\nimport AlertModule from '../AlertModule'\r\n\r\nclass WDM extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.hotTableComponent = createRef();\r\n        this.hot = null;\r\n        this.columns = [];\r\n        this.restApi = new RestApiModule();\r\n        this.handsontableDataBackup = null;\r\n        this.handsontableData = null;\r\n        this.alert = new AlertModule();\r\n        this.selectedRowCoords = {r: null, c: null};\r\n        this.editedRowCoords = {r: null, c: null};\r\n\r\n        this.state = {\r\n            columns: [\r\n            ],\r\n            data: [\r\n            ],\r\n            newArrColumns: [],\r\n            ColumnsInOrder: [\"SKU\",\"Tedarikçi SKU\",\"Ürün İsmi\", \"Liste Fiyatı\", \"Satış Fiyatı\", \"İnd.Oran(%)\", \"Stok Adet\", \"T.Adet\",\"T.Sıra\", \"Ürt.Tar.\", \"Hz.Sr.\"],\r\n            newArrData: [],\r\n            newArrDataForPair: [],\r\n            columnOptions: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const company = localStorage.getItem('Company');\r\n\r\n        this.props.setSpinner();\r\n        this.restApi.callApi('exceldata', {\r\n            company: company,\r\n        }).then(response => {\r\n\r\n\r\n            const json = response.data[0];\r\n            const jsonBig = response.data;\r\n            for (let key in json) {\r\n                if (json.hasOwnProperty(key)) {\r\n                    this.state.newArrColumns.push(key);\r\n\r\n                }\r\n            }\r\n            console.log(this.state.ColumnsInOrder)\r\n/*\r\n            for(let a=0; a<jsonBig.length; a++){\r\n                const jsonPair = response.data[a];\r\n                console.log(jsonPair)\r\n                for(let key in jsonPair){\r\n                    console.log(key)\r\n                    if (jsonPair.hasOwnProperty(key)) {\r\n                        this.state.newArrData.push(jsonPair[key]);\r\n                    }\r\n                }\r\n                this.state.data.push(this.state.newArrData);\r\n                this.state.newArrData = [];\r\n            }\r\n            */\r\n\r\n            console.log(this.state.ColumnsInOrder[0])\r\n           for(let a=0; a<jsonBig.length; a++){\r\n               const jsonPair = response.data[a];\r\n               for(let c=0; c<11; c++){\r\n                   let key = this.state.ColumnsInOrder[c]\r\n                   this.state.newArrData.push(jsonPair[key]);\r\n               }\r\n               this.state.data.push(this.state.newArrData);\r\n               this.state.newArrData = [];\r\n            }\r\n            console.log(this.state.data)\r\n\r\n            this.state.columns.push(this.state.newArrColumns);\r\n            this.forceUpdate();\r\n\r\n            this.hot = this.hotTableComponent.current.hotInstance;\r\n            this.handsontableData = this.state.data;\r\n\r\n            //this.hot.setCellMeta(1, 4, \"className\", 'bg-primary text-white');\r\n            //this.hot.render();\r\n           /* var rows=this.hot.countRows();  // get the count of the rows in the table\r\n            var cols=this.hot.countCols();  // get the count of the columns in the table.\r\n            for(var row=0; row<rows; row++){  // go through each row of the table\r\n\r\n                    var cell = this.hot.getCell(row,1);\r\n                    cell.style.background = \"#00FF90\";\r\n\r\n            }\r\n\r\n            console.log(this.hot.getSettings())*/\r\n\r\n          //  this.hot.render();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }).catch((err) => {\r\n    console.log(err);\r\n})\r\n\r\n        this.props.setSpinner();\r\n\r\n/*\r\n        //console.log(this.state.columns);\r\n        Axios({\r\n\r\n            method: 'POST',\r\n            url: `http://localhost:8777/test-jersey-rest-maven-tomcat/rest/testservice/test12/`,\r\n            data: null,\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }).then(async (response) => {\r\n            console.log(\"aaaa\");\r\n\r\n            const json = response.data[0].variants[0];\r\n            const jsonBig = response.data[0].variants;\r\n            for (let key in json) {\r\n                if (json.hasOwnProperty(key)) {\r\n                    this.state.newArrColumns.push(key);\r\n                }\r\n            }\r\n\r\n            for(let a=0; a<jsonBig.length; a++){\r\n                const jsonPair = response.data[0].variants[a];\r\n                for(let key in jsonPair){\r\n                    if (jsonPair.hasOwnProperty(key)) {\r\n                        this.state.newArrData.push(jsonPair[key]);\r\n                    }\r\n                }\r\n                this.state.data.push(this.state.newArrData);\r\n                this.state.newArrData = [];\r\n            }\r\n            this.state.columns.push(this.state.newArrColumns);\r\n            this.forceUpdate();\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })*/\r\n    }\r\n\r\n    setCellProperties(r, c) {\r\n\r\n        const colCount = this.hot.countCols();\r\n        let col = c !== null ? c : 0;\r\n\r\n\r\n        for (let x = 0; x <= colCount; x++) {\r\n            const {prop, readOnly, readOnlyInEditMode} = this.hot.getCellMeta(r,x);\r\n\r\n\r\n                    const type = this.hot.getDataType(r, x); // get cell type from loaded map\r\n\r\n\r\n                    col = col === 0 ? x : col; // when add new row find first editable col.\r\n\r\n                    this.hot.setCellMeta(r, x, \"editor\", type);\r\n                    this.hot.setCellMeta(r, x, \"className\", 'bg-warning text-dark');\r\n\r\n\r\n        }\r\n        this.hot.render();\r\n        this.hot.selectCell(r, col);\r\n    }\r\n\r\n    handleEditClick() {\r\n\r\n\r\n        const {r, c} = this.selectedRowCoords;\r\n        if (r === null && c === null) return;\r\n\r\n        this.handsontableDataBackup = JSON.parse(JSON.stringify(this.handsontableData));\r\n                    // Change edit mode on redux\r\n                    this.props.setEdit();\r\n\r\n                    this.setCellProperties(r, c);\r\n                    this.editedRowCoords.r = r;\r\n                    this.editedRowCoords.c = c;\r\n\r\n    }\r\n\r\n\r\n    handleCancelClick() {\r\n\r\n        this.handsontableData = JSON.parse(JSON.stringify(this.handsontableDataBackup));\r\n        this.hot.loadData(this.handsontableData);\r\n        this.hot.render();\r\n\r\n        // Change edit mode on redux\r\n        this.props.setEdit();\r\n\r\n    }\r\n\r\n\r\n    handleSaveClick() {\r\n      console.log(\"aaaa\")\r\n        const {r, c} = this.editedRowCoords;\r\n        let data = this.hot.getDataAtRow(r);\r\n        console.log(data);\r\n        console.log(this.state.ColumnsInOrder);\r\n\r\n       let finalData = {};\r\n\r\n        this.state.ColumnsInOrder.forEach((v,i) => {\r\n           finalData[v] = data[i]\r\n       });\r\n\r\n        console.log(finalData);\r\n\r\n        const company = localStorage.getItem('Company');\r\n        console.log(company);\r\n        this.restApi.callApi('saveRowAndSendFlxPoint', {\r\n            row: finalData,\r\n            company: company\r\n        }).then(response => {\r\n\r\n        const saveResult = response.exec_status;\r\n\r\n        if(saveResult == \"success\"){\r\n            this.alert.showMessage(\"success\",\r\n                \"Kayıt Başarılı\",\r\n                response.SKU + \" için kayıt başarılı\",\r\n                false\r\n            )\r\n\r\n\r\n\r\n            this.resetRow(r); // this method will return the edit view to normal\r\n            this.props.setEdit();\r\n\r\n        }else{\r\n\r\n            this.alert.showMessage(\"error\",\r\n                \"Kayıt Başarısız\",\r\n                response.SKU + \" için kayıt başarısız\",\r\n                false\r\n            )\r\n\r\n        }\r\n\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    resetRow(r) {\r\n        const colCount = this.hot.countCols();\r\n        for (let x = 0; x <= colCount; x++) {\r\n\r\n            this.hot.setCellMeta(r, x, \"editor\", false);\r\n            this.hot.setCellMeta(r, x, \"className\", 'bg-primary text-white');\r\n        }\r\n        this.hot.render();\r\n        this.setState({ newRowAdded : false});\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <Header/>\r\n                <Row className=\"h-100\">\r\n                    <Sidebar maximize={this.props.maximize}/>\r\n                    <Col className={this.props.contentCSS}>\r\n                        <Toolbar\r\n                            wrapper={'toolbar mt-2'}\r\n                            isDataExist={this.state.isDataExistsInDB}\r\n                            newRowAdded={this.state.newRowAdded}\r\n                            edit={this.handleEditClick.bind(this)}\r\n                            cancel={this.handleCancelClick.bind(this)}\r\n                            save={this.handleSaveClick.bind(this)}\r\n                        />\r\n                        <Card className={'mt-1 fixedCard'}>\r\n                            <CardBody>\r\n                                <HotTable  ref={this.hotTableComponent} id={'hot'}\r\n                                           data={this.state.data}\r\n                                           stretchH={'all'}\r\n                                           autoRowSize={true}\r\n                                           autoWrapRow={true}\r\n                                           dropdownMenu={true}\r\n                                           filters={true}\r\n                                           manualColumnResize={true}\r\n                                           columnSorting={true}\r\n                                           colHeaders={this.state.ColumnsInOrder}\r\n                                           rowHeaders={true}\r\n                                           width={'100%'}\r\n                                           height={'100%'}\r\n                                           licenseKey=\"non-commercial-and-evaluation\"\r\n                                           afterSelectionEnd={(r, c) => {\r\n                                               this.selectedRowCoords.r = r;\r\n                                               this.selectedRowCoords.c = c;\r\n                                           }}\r\n                                />\r\n\r\n                            </CardBody>\r\n\r\n\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        token: state.token,\r\n        company: state.company,\r\n        language: state.language,\r\n        maximize: state.maximize,\r\n        contentCSS: state.contentCSS,\r\n        fontSize: state.topologySelectedNodeFontSize,\r\n        spinnerToggle: state.spinnerToggle,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setEdit: () => dispatch(editOnToggle()),\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WDM);"]},"metadata":{},"sourceType":"module"}