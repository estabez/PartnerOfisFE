{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from\"react-redux\";import{setMaximize}from\"../redux/actions\";import{Button}from'reactstrap';var MaximizeContent=/*#__PURE__*/function(_React$Component){_inherits(MaximizeContent,_React$Component);function MaximizeContent(){_classCallCheck(this,MaximizeContent);return _possibleConstructorReturn(this,_getPrototypeOf(MaximizeContent).apply(this,arguments));}_createClass(MaximizeContent,[{key:\"handleMaximize\",value:function handleMaximize(){this.props.toggleMaximize();}},{key:\"render\",value:function render(){var _this$props=this.props,language=_this$props.language,maximize=_this$props.maximize,editOn=_this$props.editOn;var toggleCSS=maximize?'icon icon-minimize':'icon icon-maximize';var buttonCSS=maximize?'btn btn-warning ml-3':'btn btn-light ml-3';if(language){return React.createElement(Button,{className:buttonCSS,disabled:editOn,\"data-placement\":'top',\"data-tip\":language.maximize,onClick:this.handleMaximize.bind(this)},React.createElement(\"i\",{className:toggleCSS}));}else{return React.createElement(React.Fragment,null);}}}]);return MaximizeContent;}(React.Component);function mapStateToProps(state){return{maximize:state.maximize,language:state.language,editOn:state.editOn};}function mapStateToDispatch(dispatch){return{toggleMaximize:function toggleMaximize(){return dispatch(setMaximize());}};}export default connect(mapStateToProps,mapStateToDispatch)(MaximizeContent);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/MaximizeContent.jsx"],"names":["React","connect","setMaximize","Button","MaximizeContent","props","toggleMaximize","language","maximize","editOn","toggleCSS","buttonCSS","handleMaximize","bind","Component","mapStateToProps","state","mapStateToDispatch","dispatch"],"mappings":"21BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OAAQC,MAAR,KAAqB,YAArB,C,GAEMC,CAAAA,e,yUAEe,CACb,KAAKC,KAAL,CAAWC,cAAX,GACH,C,uCAEQ,iBACgC,KAAKD,KADrC,CACEE,QADF,aACEA,QADF,CACYC,QADZ,aACYA,QADZ,CACsBC,MADtB,aACsBA,MADtB,CAEL,GAAMC,CAAAA,SAAS,CAAGF,QAAQ,CAAG,oBAAH,CAA0B,oBAApD,CACA,GAAMG,CAAAA,SAAS,CAAGH,QAAQ,CAAG,sBAAH,CAA4B,oBAAtD,CAEA,GAAID,QAAJ,CAAc,CACV,MACI,qBAAC,MAAD,EAAQ,SAAS,CAAEI,SAAnB,CACQ,QAAQ,CAAEF,MADlB,CAEQ,iBAAgB,KAFxB,CAGQ,WAAUF,QAAQ,CAACC,QAH3B,CAIQ,OAAO,CAAE,KAAKI,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAJjB,EAKI,yBAAG,SAAS,CAAEH,SAAd,EALJ,CADJ,CASH,CAVD,IAUO,CACH,MAAQ,yCAAR,CACH,CACJ,C,6BAxByBV,KAAK,CAACc,S,EA2BpC,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHR,QAAQ,CAAEQ,KAAK,CAACR,QADb,CAEHD,QAAQ,CAAES,KAAK,CAACT,QAFb,CAGHE,MAAM,CAAEO,KAAK,CAACP,MAHX,CAAP,CAKH,CAED,QAASQ,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHZ,cAAc,CAAE,gCAAMY,CAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAd,EADb,CAAP,CAGH,CAGD,cAAeD,CAAAA,OAAO,CAACc,eAAD,CAAkBE,kBAAlB,CAAP,CAA6Cb,eAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {setMaximize} from \"../redux/actions\";\r\nimport {Button} from 'reactstrap';\r\n\r\nclass MaximizeContent extends React.Component {\r\n\r\n    handleMaximize() {\r\n        this.props.toggleMaximize();\r\n    }\r\n\r\n    render() {\r\n        const {language, maximize, editOn} = this.props;\r\n        const toggleCSS = maximize ? 'icon icon-minimize' : 'icon icon-maximize';\r\n        const buttonCSS = maximize ? 'btn btn-warning ml-3' : 'btn btn-light ml-3';\r\n\r\n        if (language) {\r\n            return (\r\n                <Button className={buttonCSS}\r\n                        disabled={editOn}\r\n                        data-placement={'top'}\r\n                        data-tip={language.maximize}\r\n                        onClick={this.handleMaximize.bind(this)}>\r\n                    <i className={toggleCSS}/>\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        maximize: state.maximize,\r\n        language: state.language,\r\n        editOn: state.editOn\r\n    }\r\n}\r\n\r\nfunction mapStateToDispatch(dispatch) {\r\n    return {\r\n        toggleMaximize: () => dispatch(setMaximize())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(MaximizeContent);"]},"metadata":{},"sourceType":"module"}