{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";/*\r\n* Rest Api module\r\n* Use for call rest api methods from one hand\r\n* It includes error handler\r\n*\r\n*/import axios from'axios';import AlertModule from'./AlertModule';var RestApiModule=/*#__PURE__*/function(){function RestApiModule(){_classCallCheck(this,RestApiModule);this.alert=new AlertModule();this.serverPath=process.env.REACT_APP_API_GATEWAY;this.endpoints={getConfig:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:\"/GetConfigFileStream\"},login:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/LoginWithCredentials\"},logout:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/Logout\"},checkToken:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/LoginWithToken\"},getRoles:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/GetUserRolesList\"},getRegions:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/GetUserRegions\"},ranFirst:{serviceName:process.env.REACT_APP_RAN_SERVICE,methodName:\"/GetRANTopologyFirstLevelforRegion\"},ranSecond:{serviceName:process.env.REACT_APP_RAN_SERVICE,methodName:\"/GetRANTopologySecondLevelforAggregSite\"},core:{serviceName:process.env.REACT_APP_CORE_SERVICE,methodName:\"/CoreTopologyView\"},wdm:{serviceName:process.env.REACT_APP_WDM_SERVICE,methodName:\"/WDMTopologyView\"},getMatrixDataCount:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:\"/GetConnectivityMatrixCountbyRegion\"},getMatrixData:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:\"/GetConnectivtyMatrixforRegion\"},getPickList:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetPickList'},checkRadioSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckIfRadioSiteExists'},checkNewAggrSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckIfAggregSiteExists'},checkOldAggrSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckIfPreAggregSiteExists'},checkBscName:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckBSCNameExists'},checkRncName:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckRNCNameExists'},getIpListByIpTechno:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetIpEquipListByIPTechno'},getMWListByTechMWSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWEquipListByTechMWSite'},getMWAggreListByTechnoMWAggre:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWEquipAggreListByTechnoMWAggre'},getIpListByIPTechno:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetIpEquipListByIPTechno'},getMWPortListByMWEquip:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWPortListByMWEquip'},getMWPortAggreListByMWEquipmentAggre:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWPortAggreListByMWEquipmentAggre'},getIpPortListUnderIpEquip:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetIpPortListUnderIpEquip'},exportData:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/ExportDataMatrixToExcel'},importData:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/ImportDataMatrixFromExcel'}};}_createClass(RestApiModule,[{key:\"callApi\",value:function callApi(endpoint,dto){var _this=this;return new Promise(function(res,rej){var _this$endpoints$endpo=_this.endpoints[endpoint],serviceName=_this$endpoints$endpo.serviceName,methodName=_this$endpoints$endpo.methodName;axios({method:\"POST\",url:\"\".concat(_this.serverPath).concat(serviceName).concat(methodName),data:dto}).then(function _callee(response){var _response$data,exec_status,error_code,error_message;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://console.log(response);\n_response$data=response.data,exec_status=_response$data.exec_status,error_code=_response$data.error_code,error_message=_response$data.error_message;if(exec_status==='success'){res(response.data);}if(exec_status==='error'){if(+error_code===10){_this.alert.showMessage('error','Error',error_message,true);}else{_this.alert.showMessage('error','Error',error_message,false);}rej(false);}case 3:case\"end\":return _context.stop();}}});}).catch(function(err){_this.alert.showMessage('error','Error',err,false);rej(false);});});}}]);return RestApiModule;}();export default RestApiModule;","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/RestApiModule.js"],"names":["axios","AlertModule","RestApiModule","alert","serverPath","process","env","REACT_APP_API_GATEWAY","endpoints","getConfig","serviceName","REACT_APP_MATRIX_SERVICE","methodName","login","REACT_APP_AUTH_SERVICE","logout","checkToken","getRoles","getRegions","ranFirst","REACT_APP_RAN_SERVICE","ranSecond","core","REACT_APP_CORE_SERVICE","wdm","REACT_APP_WDM_SERVICE","getMatrixDataCount","getMatrixData","getPickList","checkRadioSite","checkNewAggrSite","checkOldAggrSite","checkBscName","checkRncName","getIpListByIpTechno","getMWListByTechMWSite","getMWAggreListByTechnoMWAggre","getIpListByIPTechno","getMWPortListByMWEquip","getMWPortAggreListByMWEquipmentAggre","getIpPortListUnderIpEquip","exportData","importData","endpoint","dto","Promise","res","rej","method","url","data","then","response","exec_status","error_code","error_message","showMessage","catch","err"],"mappings":"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","sourcesContent":["/*\r\n* Rest Api module\r\n* Use for call rest api methods from one hand\r\n* It includes error handler\r\n*\r\n*/\r\n\r\nimport axios from 'axios';\r\nimport AlertModule from './AlertModule'\r\n\r\nclass RestApiModule {\r\n\r\n    constructor() {\r\n        this.alert = new AlertModule();\r\n        this.serverPath = process.env.REACT_APP_API_GATEWAY;\r\n\r\n        this.endpoints = {\r\n            getConfig: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: \"/GetConfigFileStream\"\r\n            },\r\n            login: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/LoginWithCredentials\"\r\n            },\r\n            logout: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/Logout\"\r\n            },\r\n            checkToken: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/LoginWithToken\"\r\n            },\r\n            getRoles:{\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/GetUserRolesList\"\r\n            },\r\n            getRegions: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/GetUserRegions\"\r\n            },\r\n            ranFirst: {\r\n                serviceName: process.env.REACT_APP_RAN_SERVICE,\r\n                methodName: \"/GetRANTopologyFirstLevelforRegion\",\r\n            },\r\n            ranSecond: {\r\n                serviceName: process.env.REACT_APP_RAN_SERVICE,\r\n                methodName: \"/GetRANTopologySecondLevelforAggregSite\"\r\n            },\r\n            core: {\r\n                serviceName: process.env.REACT_APP_CORE_SERVICE,\r\n                methodName: \"/CoreTopologyView\"\r\n            },\r\n            wdm: {\r\n                serviceName: process.env.REACT_APP_WDM_SERVICE,\r\n                methodName: \"/WDMTopologyView\"\r\n            },\r\n            getMatrixDataCount: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: \"/GetConnectivityMatrixCountbyRegion\"\r\n            },\r\n            getMatrixData: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: \"/GetConnectivtyMatrixforRegion\"\r\n            },\r\n            getPickList: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetPickList'\r\n            },\r\n            checkRadioSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckIfRadioSiteExists'\r\n            },\r\n            checkNewAggrSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckIfAggregSiteExists'\r\n            },\r\n            checkOldAggrSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckIfPreAggregSiteExists'\r\n            },\r\n            checkBscName: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckBSCNameExists'\r\n            },\r\n            checkRncName: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckRNCNameExists'\r\n            },\r\n            getIpListByIpTechno: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetIpEquipListByIPTechno'\r\n            },\r\n            getMWListByTechMWSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWEquipListByTechMWSite'\r\n            },\r\n            getMWAggreListByTechnoMWAggre: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWEquipAggreListByTechnoMWAggre'\r\n            },\r\n            getIpListByIPTechno: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetIpEquipListByIPTechno'\r\n            },\r\n            getMWPortListByMWEquip: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWPortListByMWEquip'\r\n            },\r\n            getMWPortAggreListByMWEquipmentAggre: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWPortAggreListByMWEquipmentAggre'\r\n            },\r\n            getIpPortListUnderIpEquip: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetIpPortListUnderIpEquip'\r\n            },\r\n            exportData: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/ExportDataMatrixToExcel'\r\n            },\r\n            importData: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/ImportDataMatrixFromExcel'\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    callApi(endpoint, dto) {\r\n\r\n        return new Promise((res, rej) => {\r\n            const {serviceName, methodName} = this.endpoints[endpoint];\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${this.serverPath}${serviceName}${methodName}`,\r\n                data: dto\r\n            }).then(async (response) => {\r\n\r\n                //console.log(response);\r\n\r\n                const {exec_status, error_code, error_message} = response.data;\r\n\r\n                if (exec_status === 'success') {\r\n                    res(response.data);\r\n                }\r\n\r\n                if (exec_status === 'error') {\r\n\r\n                    if (+error_code === 10) {\r\n                        this.alert.showMessage('error', 'Error', error_message, true);\r\n                    } else {\r\n                        this.alert.showMessage('error', 'Error', error_message, false);\r\n                    }\r\n\r\n                    rej(false)\r\n                }\r\n\r\n            }).catch((err) => {\r\n\r\n                this.alert.showMessage('error', 'Error', err, false);\r\n                rej(false)\r\n            })\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default RestApiModule;"]},"metadata":{},"sourceType":"module"}