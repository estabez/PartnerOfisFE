{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from\"react-redux\";import{Modal,ModalHeader,ModalBody}from'reactstrap';import{modalImportToggle,spinnerToggle}from\"../redux/actions\";import FileUploadProgress from'react-fileupload-progress';import XLSX from\"xlsx\";import{groupingMap}from'../matrixDataMap';import RestApiModule from'../RestApiModule';import{Row,Col,Card,CardBody,CardTitle,CardText,CardHeader,Alert,Button}from'reactstrap';import{saveAs}from'file-saver';// Alert module import\nimport AlertModule from'../AlertModule';var ModalImport=/*#__PURE__*/function(_React$Component){_inherits(ModalImport,_React$Component);var _super=_createSuper(ModalImport);function ModalImport(props){var _this;_classCallCheck(this,ModalImport);_this=_super.call(this,props);_this.state={file:null,isExcelHeadersValid:null,progress:-1,showButton1:true,showButton2:false,showButton3:false};_this.fileJSON={};_this.data=[];_this.cols=[];//const {REACT_APP_API_GATEWAY, REACT_APP_MATRIX_SERVICE} = process.env;\n//`${REACT_APP_API_GATEWAY}${REACT_APP_MATRIX_SERVICE}/ImportDataMatrixFromExcel`;\n_this.restApi=new RestApiModule();_this.alert=new AlertModule();_this.fileInput=React.createRef();_this.uploadFileUrl=_this.restApi.getImportEndpoint('importData');_this.styleBar={width:0};_this.progressAction=null;// handle interval\nreturn _this;}_createClass(ModalImport,[{key:\"handleSelectFile\",value:function handleSelectFile(e){function checkFileType(file){var allowedTypes=process.env.REACT_APP_ACCEPTED_IMPORT_FILE_EXT.split(\",\");var extension=file.name.substring(file.name.lastIndexOf('.'));return allowedTypes.includes(extension);}var files=e.target.files;if(files&&files[0])if(checkFileType(files[0])){this.setState({file:files[0],showButton2:true,isExcelHeadersValid:null});}else{var language=this.props.language;this.alert.showMessage(\"error\",language.importSection.wrongFileExtTitle,language.importSection.wrongFileExt,false);}}},{key:\"handleFile\",value:function handleFile(){var _this2=this;/* Boilerplate to set up FileReader */this.props.setSpinner();try{var reader=new FileReader();var rABS=!!reader.readAsBinaryString;reader.onload=function(e){/* Parse data */var bstr=e.target.result;var wb=XLSX.read(bstr,{type:rABS?'binary':'array',bookVBA:true,sheetRows:0});/* Get first worksheet */var wsname=wb.SheetNames[0];var ws=wb.Sheets[wsname];/* Convert array of arrays */var data=XLSX.utils.sheet_to_json(ws,{header:1,defval:\"\"});/* Store the json data */_this2.fileJSON=JSON.stringify(data,null,2);_this2.handleJSONHeaders();_this2.props.setSpinner();};if(rABS){reader.readAsBinaryString(this.state.file);}else{reader.readAsArrayBuffer(this.state.file);}}catch(e){this.setState({showButton3:false});this.props.setSpinner();}}},{key:\"handleJSONHeaders\",value:function handleJSONHeaders(){var headerMap=JSON.parse(JSON.stringify(groupingMap));var excelHeadersArray=JSON.parse(this.fileJSON)[1];var columnsMap=headerMap.reduce(function(fullArr,item){var cols=item.columns.reduce(function(arr,col){if(col.importColumnId!==undefined)arr.push(col.importColumnId);return arr;},[]);return[].concat(_toConsumableArray(fullArr),_toConsumableArray(cols));},[]);var isSame=JSON.stringify(excelHeadersArray)===JSON.stringify(columnsMap);this.setState({isExcelHeadersValid:isSame,showButton3:isSame,showButton2:!isSame});if(!isSame){this.setState({file:null,showButton2:false});}}},{key:\"downloadLogFile\",value:function downloadLogFile(){var importActionResponse=this.state.importActionResponse;if(importActionResponse){var today=new Date();var todayDate='_'+today.getDate()+today.toLocaleString('default',{month:'long'})+today.getFullYear();var _JSON$parse=JSON.parse(importActionResponse),importResult=_JSON$parse.importResult;var log=importResult[0].log;var blob=new Blob([log],{type:\"text/plain;charset=utf-8\"});saveAs(blob,\"importDetailedLog\".concat(todayDate,\".txt\"));}}},{key:\"toggle\",value:function toggle(){this.setState({file:null,isExcelHeadersValid:null,importActionResponse:null,showButton2:false,showButton3:false,progress:-1});this.props.setModalImport();}},{key:\"customFormRenderer\",value:function customFormRenderer(onSubmit){var _this3=this;var language=this.props.language;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{color:'success',size:\"lg\",block:true,hidden:!this.state.showButton3,onClick:function onClick(e){_this3.alert.getConfirmation(\"warning\",language.importSection.warningTitleForLastStep,language.importSection.warningMessageForLastStep).then(function(response){if(response===true){_this3.setState({showButton3:false});onSubmit(e);}});}},language.upload,/*#__PURE__*/React.createElement(\"i\",{className:\"icon icon-upload ml-2\"}))));}},{key:\"formGetter\",value:function formGetter(){return JSON.stringify({token:this.props.token,importedExcelAsJSON:this.fileJSON});}},{key:\"customProgressRenderer\",value:function customProgressRenderer(progressFile,hasError,cancelHandler){var language=this.props.language;function countOfRowsText(count){return+count>1?\"\".concat(count,\" \").concat(language.importSection.rows):\"\".concat(count,\" \").concat(language.importSection.rows.slice(0,-1));}var progress=this.state.progress;if(hasError||progress>-1){var progressBar=Object.assign({},this.styleBar);progressBar.width=\"\".concat(progress,\"%\");var result=null;var importActionResponse=this.state.importActionResponse;if(importActionResponse&&progress===100){var jsonResponse=JSON.parse(importActionResponse);var importResult=jsonResponse.importResult,exec_status=jsonResponse.exec_status,error_code=jsonResponse.error_code,error_message=jsonResponse.error_message;if(importResult)result=importResult[0];if(exec_status===\"error\"){this.setState({progress:0});var message=error_message?error_message:\"Null exception\";if(+error_code===10){this.alert.showMessage('error','Error',message,true);}else{this.alert.showMessage('error','Error',message,false);}}}return/*#__PURE__*/React.createElement(React.Fragment,null,!hasError&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"progressWrapper text-center\"},/*#__PURE__*/React.createElement(\"span\",null,\"Import progress: \",\"\".concat(progress,\"%\")),/*#__PURE__*/React.createElement(\"div\",{className:\"progressBar\",style:progressBar})))),hasError&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Alert,{color:\"danger\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon icon-triangle-warning mr-2\"}),language.importSection.progressError))),progress===100&&result&&!hasError&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{body:false},/*#__PURE__*/React.createElement(CardHeader,null,language.importSection.summaryLabel),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{color:\"primary\",inverse:true},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,{tag:\"h5\"},language.importSection.totalRowCount),/*#__PURE__*/React.createElement(CardText,null,language.importSection.totalRowText),/*#__PURE__*/React.createElement(Alert,{tag:\"h4\",color:\"info\"},countOfRowsText(result.totalcount))))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{color:\"success\",inverse:true},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,{tag:\"h5\"},language.importSection.successRowCount),/*#__PURE__*/React.createElement(CardText,null,language.importSection.successRowText),/*#__PURE__*/React.createElement(Alert,{tag:\"h4\",color:\"info\"},countOfRowsText(result.successCount))))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Card,{color:\"danger\",inverse:true},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,{tag:\"h5\"},language.importSection.failedRowCount),/*#__PURE__*/React.createElement(CardText,null,language.importSection.failedRowText),/*#__PURE__*/React.createElement(Alert,{tag:\"h4\",color:\"info\"},countOfRowsText(result.errorcount)))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"mt-3\",block:true,size:\"lg\",onClick:this.downloadLogFile.bind(this)},language.importSection.downloadLogFile,/*#__PURE__*/React.createElement(\"i\",{className:\"icon icon-download-save ml-2\"})))))))));}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}}},{key:\"render\",value:function render(){var _this4=this;var _this$props=this.props,language=_this$props.language,loadAfterImport=_this$props.loadAfterImport;if(language){return/*#__PURE__*/React.createElement(Modal,{isOpen:this.props.open,size:'lg',centered:true},/*#__PURE__*/React.createElement(ModalHeader,{toggle:this.toggle.bind(this)},language.importDataMatrixFile),/*#__PURE__*/React.createElement(ModalBody,{className:'import-file'},/*#__PURE__*/React.createElement(\"input\",{ref:function ref(fileInput){return _this4.fileInput=fileInput;},type:\"file\",accept:process.env.REACT_APP_ACCEPTED_IMPORT_FILE_TYPE,onChange:this.handleSelectFile.bind(this),hidden:true}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:'12'},!this.state.file&&/*#__PURE__*/React.createElement(\"div\",{className:'choose-file-wrapper'},/*#__PURE__*/React.createElement(Button,{className:\"chose-file\",onClick:function onClick(){return _this4.fileInput.click();}},language.chooseFile)),this.state.file&&/*#__PURE__*/React.createElement(\"div\",{className:'choose-file-wrapper'},/*#__PURE__*/React.createElement(\"h4\",null,language.importSection.selectedFileLabel,this.state.file.name))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Col,null,this.state.showButton2&&/*#__PURE__*/React.createElement(Button,{color:'primary',className:'mt-3 mb-3',size:\"lg\",block:true,onClick:this.handleFile.bind(this)},language.validate,/*#__PURE__*/React.createElement(\"i\",{className:\"icon icon-file ml-2\"})),this.state.isExcelHeadersValid===true&&/*#__PURE__*/React.createElement(Alert,{color:\"success\",className:'mt-2'},/*#__PURE__*/React.createElement(\"i\",{className:\"icon icon-check mr-2\"}),language.importSection.selectedFileValid),this.state.isExcelHeadersValid===false&&/*#__PURE__*/React.createElement(Alert,{color:\"danger\",className:'mt-2'},/*#__PURE__*/React.createElement(\"i\",{className:\"icon icon-cross mr-2\"}),language.importSection.selectedFileNotValid))),/*#__PURE__*/React.createElement(FileUploadProgress,{url:this.uploadFileUrl,method:\"POST\",beforeSend:function beforeSend(request){_this4.props.setSpinner();_this4.setState({progress:Math.floor(Math.random()*16)+10});request.setRequestHeader('Content-Type','application/json;charset=UTF-8');return request;},onProgress:function onProgress(e,request,progress){console.log(progress);if(_this4.state.progress<95){_this4.progressAction=setInterval(function(){var increase=Math.floor(Math.random()*5)+5;_this4.setState({progress:increase+ +_this4.state.progress});},2000);}},onLoad:function onLoad(e,request){clearInterval(_this4.progressAction);setTimeout(function(){// Wait a little time to get correct data structure from response\n_this4.setState({progress:100,importActionResponse:request.response},function(){// After set state execute load data action\nvar _JSON$parse2=JSON.parse(_this4.state.importActionResponse),exec_status=_JSON$parse2.exec_status;if(exec_status===\"success\"){// Import finish successfully, then reload the data.\nif(_this4.state.progress===100){loadAfterImport();}}_this4.props.setSpinner();});},200);},onError:function onError(e,request){_this4.setState({progress:0},function(){clearInterval(_this4.progressAction);_this4.props.setSpinner();});},onAbort:function onAbort(e,request){_this4.setState({progress:0},function(){clearInterval(_this4.progressAction);_this4.props.setSpinner();});},formGetter:this.formGetter.bind(this),formRenderer:this.customFormRenderer.bind(this),progressRenderer:this.customProgressRenderer.bind(this)})));}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}}}]);return ModalImport;}(React.Component);function mapStateToProps(state){return{open:state.modalImportToggle,import:state.import,language:state.language,token:state.token};}function mapDispatchToProps(dispatch){return{setModalImport:function setModalImport(){return dispatch(modalImportToggle());},setSpinner:function setSpinner(){return dispatch(spinnerToggle());}};}export default connect(mapStateToProps,mapDispatchToProps)(ModalImport);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/ModalImport.jsx"],"names":["React","connect","Modal","ModalHeader","ModalBody","modalImportToggle","spinnerToggle","FileUploadProgress","XLSX","groupingMap","RestApiModule","Row","Col","Card","CardBody","CardTitle","CardText","CardHeader","Alert","Button","saveAs","AlertModule","ModalImport","props","state","file","isExcelHeadersValid","progress","showButton1","showButton2","showButton3","fileJSON","data","cols","restApi","alert","fileInput","createRef","uploadFileUrl","getImportEndpoint","styleBar","width","progressAction","e","checkFileType","allowedTypes","process","env","REACT_APP_ACCEPTED_IMPORT_FILE_EXT","split","extension","name","substring","lastIndexOf","includes","files","target","setState","language","showMessage","importSection","wrongFileExtTitle","wrongFileExt","setSpinner","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","type","bookVBA","sheetRows","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","defval","JSON","stringify","handleJSONHeaders","readAsArrayBuffer","headerMap","parse","excelHeadersArray","columnsMap","reduce","fullArr","item","columns","arr","col","importColumnId","undefined","push","isSame","importActionResponse","today","Date","todayDate","getDate","toLocaleString","month","getFullYear","importResult","log","blob","Blob","setModalImport","onSubmit","getConfirmation","warningTitleForLastStep","warningMessageForLastStep","then","response","upload","token","importedExcelAsJSON","progressFile","hasError","cancelHandler","countOfRowsText","count","rows","slice","progressBar","Object","assign","jsonResponse","exec_status","error_code","error_message","message","progressError","summaryLabel","totalRowCount","totalRowText","totalcount","successRowCount","successRowText","successCount","failedRowCount","failedRowText","errorcount","downloadLogFile","bind","loadAfterImport","open","toggle","importDataMatrixFile","REACT_APP_ACCEPTED_IMPORT_FILE_TYPE","handleSelectFile","click","chooseFile","selectedFileLabel","handleFile","validate","selectedFileValid","selectedFileNotValid","request","Math","floor","random","setRequestHeader","console","setInterval","increase","clearInterval","setTimeout","formGetter","customFormRenderer","customProgressRenderer","Component","mapStateToProps","import","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {modalImportToggle, spinnerToggle} from \"../redux/actions\";\r\nimport FileUploadProgress from 'react-fileupload-progress';\r\nimport XLSX from \"xlsx\";\r\nimport {groupingMap} from '../matrixDataMap';\r\nimport RestApiModule from '../RestApiModule';\r\nimport {Row, Col, Card, CardBody, CardTitle, CardText, CardHeader, Alert, Button} from 'reactstrap';\r\nimport {saveAs} from 'file-saver';\r\n\r\n// Alert module import\r\nimport AlertModule from '../AlertModule'\r\n\r\nclass ModalImport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            isExcelHeadersValid: null,\r\n            progress: -1,\r\n            showButton1: true,\r\n            showButton2: false,\r\n            showButton3: false,\r\n        }\r\n\r\n        this.fileJSON = {};\r\n        this.data = [];\r\n        this.cols = [];\r\n        //const {REACT_APP_API_GATEWAY, REACT_APP_MATRIX_SERVICE} = process.env;\r\n        //`${REACT_APP_API_GATEWAY}${REACT_APP_MATRIX_SERVICE}/ImportDataMatrixFromExcel`;\r\n\r\n        this.restApi = new RestApiModule();\r\n        this.alert = new AlertModule();\r\n\r\n        this.fileInput = React.createRef();\r\n        this.uploadFileUrl = this.restApi.getImportEndpoint('importData');\r\n\r\n        this.styleBar = {\r\n            width: 0,\r\n        }\r\n\r\n        this.progressAction = null; // handle interval\r\n\r\n    }\r\n\r\n    handleSelectFile(e) {\r\n        function checkFileType(file) {\r\n            const allowedTypes = process.env.REACT_APP_ACCEPTED_IMPORT_FILE_EXT.split(\",\");\r\n            const extension = file.name.substring(file.name.lastIndexOf('.'));\r\n            return allowedTypes.includes(extension);\r\n        }\r\n\r\n        const files = e.target.files;\r\n\r\n        if (files && files[0])\r\n            if (checkFileType(files[0])) {\r\n                this.setState({\r\n                    file: files[0],\r\n                    showButton2: true,\r\n                    isExcelHeadersValid: null\r\n                });\r\n            } else {\r\n                const {language} = this.props;\r\n                this.alert.showMessage(\"error\",\r\n                    language.importSection.wrongFileExtTitle,\r\n                    language.importSection.wrongFileExt,\r\n                    false)\r\n            }\r\n    };\r\n\r\n    handleFile() {\r\n        /* Boilerplate to set up FileReader */\r\n        this.props.setSpinner();\r\n        try {\r\n\r\n            const reader = new FileReader();\r\n            const rABS = !!reader.readAsBinaryString;\r\n            reader.onload = (e) => {\r\n                /* Parse data */\r\n                const bstr = e.target.result;\r\n                const wb = XLSX.read(bstr, {type: rABS ? 'binary' : 'array', bookVBA: true, sheetRows: 0});\r\n                /* Get first worksheet */\r\n                const wsname = wb.SheetNames[0];\r\n                const ws = wb.Sheets[wsname];\r\n\r\n                /* Convert array of arrays */\r\n                const data = XLSX.utils.sheet_to_json(ws, {\r\n                    header: 1,\r\n                    defval: \"\"\r\n                });\r\n\r\n                /* Store the json data */\r\n                this.fileJSON = JSON.stringify(data, null, 2);\r\n\r\n                this.handleJSONHeaders();\r\n\r\n                this.props.setSpinner();\r\n            };\r\n\r\n            if (rABS) {\r\n                reader.readAsBinaryString(this.state.file);\r\n            } else {\r\n                reader.readAsArrayBuffer(this.state.file);\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            this.setState({showButton3: false})\r\n            this.props.setSpinner();\r\n        }\r\n\r\n    }\r\n\r\n    handleJSONHeaders() {\r\n\r\n        const headerMap = JSON.parse(JSON.stringify(groupingMap));\r\n        const excelHeadersArray = (JSON.parse(this.fileJSON))[1];\r\n\r\n        const columnsMap = headerMap.reduce((fullArr, item) => {\r\n            const cols = item.columns.reduce((arr, col) => {\r\n                if (col.importColumnId !== undefined) arr.push(col.importColumnId)\r\n                return arr;\r\n            }, []);\r\n            return [...fullArr, ...cols]\r\n        }, [])\r\n\r\n        const isSame = JSON.stringify(excelHeadersArray) === JSON.stringify(columnsMap);\r\n        this.setState({isExcelHeadersValid: isSame, showButton3: isSame, showButton2: !isSame});\r\n\r\n        if (!isSame) {\r\n            this.setState({file: null, showButton2: false})\r\n        }\r\n    }\r\n\r\n    downloadLogFile() {\r\n        const {importActionResponse} = this.state;\r\n        if (importActionResponse) {\r\n            const today = new Date();\r\n            const todayDate = '_' + today.getDate() + (today.toLocaleString('default', {month: 'long'})) + today.getFullYear();\r\n\r\n            const {importResult} = JSON.parse(importActionResponse);\r\n            const {log} = importResult[0];\r\n\r\n            const blob = new Blob([log], {type: \"text/plain;charset=utf-8\"});\r\n            saveAs(blob, `importDetailedLog${todayDate}.txt`);\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            file: null,\r\n            isExcelHeadersValid: null,\r\n            importActionResponse: null,\r\n            showButton2: false,\r\n            showButton3: false,\r\n            progress: -1\r\n        })\r\n        this.props.setModalImport();\r\n    }\r\n\r\n    customFormRenderer(onSubmit) {\r\n        const {language} = this.props;\r\n\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <Button color={'success'} size={\"lg\"} block\r\n                            hidden={!this.state.showButton3}\r\n                            onClick={(e) => {\r\n                                this.alert.getConfirmation(\r\n                                    \"warning\",\r\n                                    language.importSection.warningTitleForLastStep,\r\n                                    language.importSection.warningMessageForLastStep\r\n                                ).then(response => {\r\n\r\n                                    if (response === true) {\r\n                                        this.setState({showButton3: false});\r\n                                        onSubmit(e)\r\n                                    }\r\n                                })\r\n                            }}>\r\n                        {language.upload}\r\n                        <i className={`icon icon-upload ml-2`}/>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    formGetter() {\r\n        return JSON.stringify({\r\n            token: this.props.token,\r\n            importedExcelAsJSON: this.fileJSON\r\n        });\r\n    }\r\n\r\n    customProgressRenderer(progressFile, hasError, cancelHandler) {\r\n        const {language} = this.props;\r\n\r\n        function countOfRowsText(count) {\r\n            return +count > 1\r\n                ? `${count} ${language.importSection.rows}`\r\n                : `${count} ${language.importSection.rows.slice(0, -1)}`\r\n        }\r\n\r\n        const {progress} = this.state;\r\n\r\n        if (hasError || progress > -1) {\r\n\r\n            let progressBar = Object.assign({}, this.styleBar);\r\n            progressBar.width = `${progress}%`;\r\n\r\n            let result = null;\r\n            const {importActionResponse} = this.state;\r\n            if (importActionResponse && progress === 100) {\r\n\r\n                const jsonResponse = JSON.parse(importActionResponse);\r\n                const {importResult, exec_status, error_code, error_message} = jsonResponse;\r\n\r\n                if (importResult) result = importResult[0];\r\n\r\n                if (exec_status === \"error\") {\r\n\r\n                    this.setState({progress: 0})\r\n\r\n                    const message = error_message ? error_message : \"Null exception\";\r\n\r\n                    if (+error_code === 10) {\r\n                        this.alert.showMessage('error', 'Error', message, true);\r\n                    } else {\r\n                        this.alert.showMessage('error', 'Error', message, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    {!hasError &&\r\n                    <Row>\r\n                        <Col>\r\n                            <div className={\"progressWrapper text-center\"}>\r\n                                <span>Import progress: {`${progress}%`}</span>\r\n                                <div className={\"progressBar\"} style={progressBar}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    }\r\n\r\n                    {hasError &&\r\n                    <Row>\r\n                        <Col>\r\n                            <Alert color={\"danger\"}>\r\n                                <i className=\"icon icon-triangle-warning mr-2\"/>\r\n                                {language.importSection.progressError}\r\n                            </Alert>\r\n                        </Col>\r\n                    </Row>\r\n                    }\r\n\r\n                    {(progress === 100 && result && !hasError) &&\r\n                    <Row>\r\n                        <Col>\r\n                            <Card body={false}>\r\n                                <CardHeader>\r\n                                    {language.importSection.summaryLabel}\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card color={\"primary\"} inverse>\r\n                                                <CardBody>\r\n                                                    <CardTitle tag={\"h5\"}>\r\n                                                        {language.importSection.totalRowCount}\r\n                                                    </CardTitle>\r\n                                                    <CardText>{language.importSection.totalRowText}</CardText>\r\n                                                    <Alert tag={\"h4\"} color={\"info\"}>\r\n                                                        {countOfRowsText(result.totalcount)}\r\n                                                    </Alert>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card color={\"success\"} inverse>\r\n                                                <CardBody>\r\n                                                    <CardTitle tag={\"h5\"}>\r\n                                                        {language.importSection.successRowCount}\r\n                                                    </CardTitle>\r\n                                                    <CardText>{language.importSection.successRowText}</CardText>\r\n                                                    <Alert tag={\"h4\"} color={\"info\"}>\r\n                                                        {countOfRowsText(result.successCount)}\r\n                                                    </Alert>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card color={\"danger\"} inverse>\r\n                                                <CardBody>\r\n                                                    <CardTitle tag={\"h5\"}>\r\n                                                        {language.importSection.failedRowCount}\r\n                                                    </CardTitle>\r\n                                                    <CardText>{language.importSection.failedRowText}</CardText>\r\n                                                    <Alert tag={\"h4\"} color={\"info\"}>\r\n                                                        {countOfRowsText(result.errorcount)}\r\n                                                    </Alert>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <hr/>\r\n                                            <Button color={\"primary\"} className={\"mt-3\"} block size={\"lg\"}\r\n                                                    onClick={this.downloadLogFile.bind(this)}>\r\n                                                {language.importSection.downloadLogFile}\r\n                                                <i className={`icon icon-download-save ml-2`}/>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    }\r\n                </>\r\n            );\r\n\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {language, loadAfterImport} = this.props;\r\n\r\n        if (language) {\r\n            return (\r\n                <Modal isOpen={this.props.open} size={'lg'} centered={true}>\r\n                    <ModalHeader toggle={this.toggle.bind(this)}>{language.importDataMatrixFile}</ModalHeader>\r\n                    <ModalBody className={'import-file'}>\r\n\r\n                        <input ref={fileInput => this.fileInput = fileInput} type=\"file\"\r\n                               accept={process.env.REACT_APP_ACCEPTED_IMPORT_FILE_TYPE}\r\n                               onChange={this.handleSelectFile.bind(this)} hidden={true}/>\r\n\r\n                        <Row>\r\n                            <Col md={'12'}>\r\n                                {!this.state.file &&\r\n                                <div className={'choose-file-wrapper'}>\r\n                                    <Button className={\"chose-file\"} onClick={() => this.fileInput.click()}>\r\n                                        {language.chooseFile}\r\n                                    </Button>\r\n                                </div>\r\n                                }\r\n                                {this.state.file &&\r\n                                <div className={'choose-file-wrapper'}>\r\n                                    <h4>\r\n                                        {language.importSection.selectedFileLabel}\r\n                                        {this.state.file.name}\r\n                                    </h4>\r\n                                </div>\r\n                                }\r\n                            </Col>\r\n                            <hr/>\r\n                            <Col>\r\n                                {this.state.showButton2 &&\r\n                                <Button color={'primary'} className={'mt-3 mb-3'} size={\"lg\"} block\r\n                                        onClick={this.handleFile.bind(this)}>\r\n                                    {language.validate}\r\n                                    <i className={`icon icon-file ml-2`}/>\r\n                                </Button>\r\n                                }\r\n                                {this.state.isExcelHeadersValid === true &&\r\n                                <Alert color=\"success\" className={'mt-2'}>\r\n                                    <i className={`icon icon-check mr-2`}/>\r\n                                    {language.importSection.selectedFileValid}\r\n                                </Alert>\r\n                                }\r\n                                {this.state.isExcelHeadersValid === false &&\r\n                                <Alert color=\"danger\" className={'mt-2'}>\r\n                                    <i className={`icon icon-cross mr-2`}/>\r\n                                    {language.importSection.selectedFileNotValid}\r\n                                </Alert>\r\n                                }\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <FileUploadProgress\r\n                            url={this.uploadFileUrl}\r\n                            method={\"POST\"}\r\n                            beforeSend={(request) => {\r\n                                this.props.setSpinner();\r\n                                this.setState({progress: Math.floor(Math.random() * 16) + 10});\r\n                                request.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\r\n                                return request\r\n                            }}\r\n                            onProgress={(e, request, progress) => {\r\n                                console.log(progress);\r\n                                if (this.state.progress < 95) {\r\n                                    this.progressAction = setInterval(() => {\r\n\r\n                                        let increase = Math.floor(Math.random() * 5) + 5;\r\n                                        this.setState({\r\n                                            progress: increase + +this.state.progress\r\n                                        });\r\n                                    }, 2000)\r\n                                }\r\n                            }}\r\n                            onLoad={(e, request) => {\r\n                                clearInterval(this.progressAction);\r\n                                setTimeout(() => {\r\n                                    // Wait a little time to get correct data structure from response\r\n                                    this.setState(\r\n                                        {\r\n                                            progress: 100,\r\n                                            importActionResponse: request.response\r\n                                        }, () => {\r\n                                            // After set state execute load data action\r\n                                            const {exec_status} = JSON.parse(this.state.importActionResponse);\r\n\r\n                                            if (exec_status === \"success\") {\r\n                                                // Import finish successfully, then reload the data.\r\n                                                if (this.state.progress === 100) {\r\n                                                    loadAfterImport();\r\n                                                }\r\n                                            }\r\n                                            this.props.setSpinner();\r\n                                        });\r\n                                }, 200);\r\n                            }}\r\n                            onError={(e, request) => {\r\n                                this.setState({progress: 0}, () => {\r\n                                    clearInterval(this.progressAction);\r\n                                    this.props.setSpinner();\r\n                                })\r\n                            }}\r\n                            onAbort={(e, request) => {\r\n                                this.setState({progress: 0}, () => {\r\n                                    clearInterval(this.progressAction);\r\n                                    this.props.setSpinner();\r\n                                })\r\n                            }}\r\n                            formGetter={this.formGetter.bind(this)}\r\n                            formRenderer={this.customFormRenderer.bind(this)}\r\n                            progressRenderer={this.customProgressRenderer.bind(this)}\r\n\r\n                        />\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        open: state.modalImportToggle,\r\n        import: state.import,\r\n        language: state.language,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setModalImport: () => dispatch(modalImportToggle()),\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalImport);"]},"metadata":{},"sourceType":"module"}