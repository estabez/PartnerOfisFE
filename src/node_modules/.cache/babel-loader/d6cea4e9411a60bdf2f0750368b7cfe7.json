{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\src\\\\components\\\\Toolbar.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport MaximizeContent from \"./MaximizeContent\";\nimport { Row, Col, Card, CardBody, Button, ButtonGroup } from 'reactstrap';\nimport { modalImportToggle, setShowRevision } from \"../redux/actions\";\nimport SelectRegion from './SelectRegion';\nimport SelectRadioSite from './SelectRadioSite';\nimport ReactTooltip from 'react-tooltip';\nimport Switch from \"react-switch\"; // REST\n\nimport RestApiModule from '../RestApiModule'; // Alert\n\nimport AlertModule from '../AlertModule';\n\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.restApi = new RestApiModule();\n    this.alert = new AlertModule();\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const {\n      language,\n      wrapper,\n      tooltipPlacement,\n      showRevision,\n      editOn,\n      isDataExist\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      className: \"text-right tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: 'mr-2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(MaximizeContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    language: state.language,\n    editOn: state.editOn,\n    maximize: state.maximize,\n    tooltipPlacement: state.tooltipPlacement,\n    showRevision: state.showRevision\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setModalImport: () => dispatch(modalImportToggle()),\n    setShowRevision: () => dispatch(setShowRevision())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/components/Toolbar.jsx"],"names":["React","connect","MaximizeContent","Row","Col","Card","CardBody","Button","ButtonGroup","modalImportToggle","setShowRevision","SelectRegion","SelectRadioSite","ReactTooltip","Switch","RestApiModule","AlertModule","Toolbar","Component","constructor","props","_isMounted","restApi","alert","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","rebuild","render","language","wrapper","tooltipPlacement","showRevision","editOn","isDataExist","mapStateToProps","state","token","maximize","mapDispatchToProps","dispatch","setModalImport"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport MaximizeContent from \"./MaximizeContent\";\r\nimport {Row, Col, Card, CardBody, Button, ButtonGroup} from 'reactstrap';\r\nimport {modalImportToggle, setShowRevision} from \"../redux/actions\";\r\nimport SelectRegion from './SelectRegion';\r\nimport SelectRadioSite from './SelectRadioSite';\r\nimport ReactTooltip from 'react-tooltip'\r\nimport Switch from \"react-switch\";\r\n\r\n// REST\r\nimport RestApiModule from '../RestApiModule'\r\n// Alert\r\nimport AlertModule from '../AlertModule'\r\n\r\nclass Toolbar extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.restApi = new RestApiModule();\r\n        this.alert = new AlertModule();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {language, wrapper, tooltipPlacement, showRevision, editOn, isDataExist} = this.props;\r\n\r\n\r\n            return (\r\n                <Card className={wrapper}>\r\n                    <CardBody>\r\n\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <button></button>\r\n                            </Col>\r\n\r\n                            <Col xs={2}>\r\n\r\n                            </Col>\r\n                            <Col xs={8} className=\"text-right tools\">\r\n                                <span className={'mr-2'}>\r\n\r\n                                </span>\r\n\r\n                                <MaximizeContent/>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n            )\r\n\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        token: state.token,\r\n        language: state.language,\r\n        editOn: state.editOn,\r\n        maximize: state.maximize,\r\n        tooltipPlacement: state.tooltipPlacement,\r\n        showRevision: state.showRevision\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setModalImport: () => dispatch(modalImportToggle()),\r\n        setShowRevision: () => dispatch(setShowRevision())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);"]},"metadata":{},"sourceType":"module"}