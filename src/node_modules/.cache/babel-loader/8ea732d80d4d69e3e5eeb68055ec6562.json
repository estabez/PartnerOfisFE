{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\src\\\\components\\\\TopologyDiagram.jsx\";\nimport React from 'react';\nimport Graph from \"react-graph-vis\";\nimport \"../../node_modules/vis-network/dist/vis-network.css\";\n\nclass TopologyDiagram extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = {\n      autoResize: true,\n      physics: true,\n      height: this.props.height ? this.props.height : '100%',\n      width: '100%',\n      interaction: {\n        dragNodes: true,\n        dragView: true,\n        hideEdgesOnDrag: false,\n        hideEdgesOnZoom: false,\n        hideNodesOnDrag: false,\n        hover: true,\n        hoverConnectedEdges: true,\n        keyboard: {\n          enabled: true,\n          speed: {\n            x: 10,\n            y: 10,\n            zoom: 0.02\n          },\n          bindToWindow: true\n        },\n        multiselect: false,\n        navigationButtons: true,\n        selectable: true,\n        selectConnectedEdges: true,\n        tooltipDelay: 300,\n        zoomView: true\n      },\n      layout: {\n        hierarchical: {\n          enabled: false,\n          levelSeparation: 150,\n          nodeSpacing: 100,\n          treeSpacing: 100\n        }\n      },\n      edges: {\n        arrows: {\n          to: {\n            enabled: false\n          }\n        },\n        color: {\n          color: '#1E90FF',\n          highlight: '#848484',\n          hover: '#848484',\n          inherit: 'from',\n          opacity: 1\n        },\n        smooth: true\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          graph = _this$props.graph,\n          events = _this$props.events;\n\n    if (graph !== undefined) {\n      return React.createElement(Graph, {\n        graph: graph,\n        options: this.options,\n        events: events !== undefined ? events : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nexport default TopologyDiagram;","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/TopologyDiagram.jsx"],"names":["React","Graph","TopologyDiagram","Component","constructor","props","options","autoResize","physics","height","width","interaction","dragNodes","dragView","hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag","hover","hoverConnectedEdges","keyboard","enabled","speed","x","y","zoom","bindToWindow","multiselect","navigationButtons","selectable","selectConnectedEdges","tooltipDelay","zoomView","layout","hierarchical","levelSeparation","nodeSpacing","treeSpacing","edges","arrows","to","color","highlight","inherit","opacity","smooth","render","graph","events","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,qDAAP;;AAGA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,OAAL,GAAe;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWI,MAA/B,GAAwC,MAHrC;AAIXC,MAAAA,KAAK,EAAE,MAJI;AAKXC,MAAAA,WAAW,EAAE;AACTC,QAAAA,SAAS,EAAE,IADF;AAETC,QAAAA,QAAQ,EAAE,IAFD;AAGTC,QAAAA,eAAe,EAAE,KAHR;AAITC,QAAAA,eAAe,EAAE,KAJR;AAKTC,QAAAA,eAAe,EAAE,KALR;AAMTC,QAAAA,KAAK,EAAE,IANE;AAOTC,QAAAA,mBAAmB,EAAE,IAPZ;AAQTC,QAAAA,QAAQ,EAAE;AACNC,UAAAA,OAAO,EAAE,IADH;AAENC,UAAAA,KAAK,EAAE;AAACC,YAAAA,CAAC,EAAE,EAAJ;AAAQC,YAAAA,CAAC,EAAE,EAAX;AAAeC,YAAAA,IAAI,EAAE;AAArB,WAFD;AAGNC,UAAAA,YAAY,EAAE;AAHR,SARD;AAaTC,QAAAA,WAAW,EAAE,KAbJ;AAcTC,QAAAA,iBAAiB,EAAE,IAdV;AAeTC,QAAAA,UAAU,EAAE,IAfH;AAgBTC,QAAAA,oBAAoB,EAAE,IAhBb;AAiBTC,QAAAA,YAAY,EAAE,GAjBL;AAkBTC,QAAAA,QAAQ,EAAE;AAlBD,OALF;AAyBXC,MAAAA,MAAM,EAAE;AACJC,QAAAA,YAAY,EAAC;AACTb,UAAAA,OAAO,EAAE,KADA;AAETc,UAAAA,eAAe,EAAE,GAFR;AAGTC,UAAAA,WAAW,EAAE,GAHJ;AAITC,UAAAA,WAAW,EAAE;AAJJ;AADT,OAzBG;AAiCXC,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAC;AACHC,UAAAA,EAAE,EAAC;AACCnB,YAAAA,OAAO,EAAE;AADV;AADA,SADJ;AAMHoB,QAAAA,KAAK,EAAE;AACHA,UAAAA,KAAK,EAAE,SADJ;AAEHC,UAAAA,SAAS,EAAE,SAFR;AAGHxB,UAAAA,KAAK,EAAE,SAHJ;AAIHyB,UAAAA,OAAO,EAAE,MAJN;AAKHC,UAAAA,OAAO,EAAE;AALN,SANJ;AAaHC,QAAAA,MAAM,EAAE;AAbL;AAjCI,KAAf;AAiDH;;AAGDC,EAAAA,MAAM,GAAE;AAAA,wBACoB,KAAKxC,KADzB;AAAA,UACGyC,KADH,eACGA,KADH;AAAA,UACUC,MADV,eACUA,MADV;;AAGJ,QAAID,KAAK,KAAKE,SAAd,EAAyB;AACrB,aACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEF,KADX;AAEI,QAAA,OAAO,EAAE,KAAKxC,OAFlB;AAGI,QAAA,MAAM,EAAEyC,MAAM,KAAKC,SAAX,GAAuBD,MAAvB,GAAgC,IAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH,KARD,MAQO;AACH,aAAQ,yCAAR;AACH;AACJ;;AAvEyC;;AA0E9C,eAAe7C,eAAf","sourcesContent":["import React from 'react';\r\nimport Graph from \"react-graph-vis\";\r\nimport \"../../node_modules/vis-network/dist/vis-network.css\";\r\n\r\n\r\nclass TopologyDiagram extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.options = {\r\n            autoResize: true,\r\n            physics: true,\r\n            height: this.props.height ? this.props.height : '100%',\r\n            width: '100%',\r\n            interaction: {\r\n                dragNodes: true,\r\n                dragView: true,\r\n                hideEdgesOnDrag: false,\r\n                hideEdgesOnZoom: false,\r\n                hideNodesOnDrag: false,\r\n                hover: true,\r\n                hoverConnectedEdges: true,\r\n                keyboard: {\r\n                    enabled: true,\r\n                    speed: {x: 10, y: 10, zoom: 0.02},\r\n                    bindToWindow: true\r\n                },\r\n                multiselect: false,\r\n                navigationButtons: true,\r\n                selectable: true,\r\n                selectConnectedEdges: true,\r\n                tooltipDelay: 300,\r\n                zoomView: true,\r\n            },\r\n            layout: {\r\n                hierarchical:{\r\n                    enabled: false,\r\n                    levelSeparation: 150,\r\n                    nodeSpacing: 100,\r\n                    treeSpacing: 100,\r\n                },\r\n            },\r\n            edges: {\r\n                arrows:{\r\n                    to:{\r\n                        enabled: false\r\n                    }\r\n                },\r\n                color: {\r\n                    color: '#1E90FF',\r\n                    highlight: '#848484',\r\n                    hover: '#848484',\r\n                    inherit: 'from',\r\n                    opacity: 1\r\n                },\r\n                smooth: true,\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    render(){\r\n        const {graph, events} = this.props;\r\n\r\n        if (graph !== undefined) {\r\n            return (\r\n                <Graph\r\n                    graph={graph}\r\n                    options={this.options}\r\n                    events={events !== undefined ? events : null}\r\n                />\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default TopologyDiagram;"]},"metadata":{},"sourceType":"module"}