{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\soperasyon27\\\\Desktop\\\\FE\\\\src18mart\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import Graph from\"react-graph-vis\";import\"../../node_modules/vis-network/dist/vis-network.css\";var TopologyDiagram=/*#__PURE__*/function(_React$Component){_inherits(TopologyDiagram,_React$Component);var _super=_createSuper(TopologyDiagram);function TopologyDiagram(props){var _this;_classCallCheck(this,TopologyDiagram);_this=_super.call(this,props);_this.options={autoResize:true,physics:true,height:_this.props.height?_this.props.height:'100%',width:'100%',interaction:{dragNodes:true,dragView:true,hideEdgesOnDrag:false,hideEdgesOnZoom:false,hideNodesOnDrag:false,hover:true,hoverConnectedEdges:true,keyboard:{enabled:true,speed:{x:10,y:10,zoom:0.02},bindToWindow:true},multiselect:false,navigationButtons:true,selectable:true,selectConnectedEdges:true,tooltipDelay:300,zoomView:true},layout:{hierarchical:{enabled:false,levelSeparation:150,nodeSpacing:100,treeSpacing:100}},edges:{arrows:{to:{enabled:false}},color:{color:'#1E90FF',highlight:'#848484',hover:'#848484',inherit:'from',opacity:1},smooth:true}};return _this;}_createClass(TopologyDiagram,[{key:\"render\",value:function render(){var _this$props=this.props,graph=_this$props.graph,events=_this$props.events;if(graph!==undefined){return/*#__PURE__*/React.createElement(Graph,{graph:graph,options:this.options,events:events!==undefined?events:null});}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}}}]);return TopologyDiagram;}(React.Component);export default TopologyDiagram;","map":{"version":3,"sources":["C:/Users/soperasyon27/Desktop/FE/src18mart/src/src/components/TopologyDiagram.jsx"],"names":["React","Graph","TopologyDiagram","props","options","autoResize","physics","height","width","interaction","dragNodes","dragView","hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag","hover","hoverConnectedEdges","keyboard","enabled","speed","x","y","zoom","bindToWindow","multiselect","navigationButtons","selectable","selectConnectedEdges","tooltipDelay","zoomView","layout","hierarchical","levelSeparation","nodeSpacing","treeSpacing","edges","arrows","to","color","highlight","inherit","opacity","smooth","graph","events","undefined","Component"],"mappings":"grBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAO,qDAAP,C,GAGMC,CAAAA,e,8HAEF,yBAAYC,KAAZ,CAAmB,iDACf,uBAAMA,KAAN,EAEA,MAAKC,OAAL,CAAe,CACXC,UAAU,CAAE,IADD,CAEXC,OAAO,CAAE,IAFE,CAGXC,MAAM,CAAE,MAAKJ,KAAL,CAAWI,MAAX,CAAoB,MAAKJ,KAAL,CAAWI,MAA/B,CAAwC,MAHrC,CAIXC,KAAK,CAAE,MAJI,CAKXC,WAAW,CAAE,CACTC,SAAS,CAAE,IADF,CAETC,QAAQ,CAAE,IAFD,CAGTC,eAAe,CAAE,KAHR,CAITC,eAAe,CAAE,KAJR,CAKTC,eAAe,CAAE,KALR,CAMTC,KAAK,CAAE,IANE,CAOTC,mBAAmB,CAAE,IAPZ,CAQTC,QAAQ,CAAE,CACNC,OAAO,CAAE,IADH,CAENC,KAAK,CAAE,CAACC,CAAC,CAAE,EAAJ,CAAQC,CAAC,CAAE,EAAX,CAAeC,IAAI,CAAE,IAArB,CAFD,CAGNC,YAAY,CAAE,IAHR,CARD,CAaTC,WAAW,CAAE,KAbJ,CAcTC,iBAAiB,CAAE,IAdV,CAeTC,UAAU,CAAE,IAfH,CAgBTC,oBAAoB,CAAE,IAhBb,CAiBTC,YAAY,CAAE,GAjBL,CAkBTC,QAAQ,CAAE,IAlBD,CALF,CAyBXC,MAAM,CAAE,CACJC,YAAY,CAAC,CACTb,OAAO,CAAE,KADA,CAETc,eAAe,CAAE,GAFR,CAGTC,WAAW,CAAE,GAHJ,CAITC,WAAW,CAAE,GAJJ,CADT,CAzBG,CAiCXC,KAAK,CAAE,CACHC,MAAM,CAAC,CACHC,EAAE,CAAC,CACCnB,OAAO,CAAE,KADV,CADA,CADJ,CAMHoB,KAAK,CAAE,CACHA,KAAK,CAAE,SADJ,CAEHC,SAAS,CAAE,SAFR,CAGHxB,KAAK,CAAE,SAHJ,CAIHyB,OAAO,CAAE,MAJN,CAKHC,OAAO,CAAE,CALN,CANJ,CAaHC,MAAM,CAAE,IAbL,CAjCI,CAAf,CAHe,aAoDlB,C,mEAGO,iBACoB,KAAKvC,KADzB,CACGwC,KADH,aACGA,KADH,CACUC,MADV,aACUA,MADV,CAGJ,GAAID,KAAK,GAAKE,SAAd,CAAyB,CACrB,mBACI,oBAAC,KAAD,EACI,KAAK,CAAEF,KADX,CAEI,OAAO,CAAE,KAAKvC,OAFlB,CAGI,MAAM,CAAEwC,MAAM,GAAKC,SAAX,CAAuBD,MAAvB,CAAgC,IAH5C,EADJ,CAOH,CARD,IAQO,CACH,mBAAQ,wCAAR,CACH,CACJ,C,6BAvEyB5C,KAAK,CAAC8C,S,EA0EpC,cAAe5C,CAAAA,eAAf","sourcesContent":["import React from 'react';\r\nimport Graph from \"react-graph-vis\";\r\nimport \"../../node_modules/vis-network/dist/vis-network.css\";\r\n\r\n\r\nclass TopologyDiagram extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.options = {\r\n            autoResize: true,\r\n            physics: true,\r\n            height: this.props.height ? this.props.height : '100%',\r\n            width: '100%',\r\n            interaction: {\r\n                dragNodes: true,\r\n                dragView: true,\r\n                hideEdgesOnDrag: false,\r\n                hideEdgesOnZoom: false,\r\n                hideNodesOnDrag: false,\r\n                hover: true,\r\n                hoverConnectedEdges: true,\r\n                keyboard: {\r\n                    enabled: true,\r\n                    speed: {x: 10, y: 10, zoom: 0.02},\r\n                    bindToWindow: true\r\n                },\r\n                multiselect: false,\r\n                navigationButtons: true,\r\n                selectable: true,\r\n                selectConnectedEdges: true,\r\n                tooltipDelay: 300,\r\n                zoomView: true,\r\n            },\r\n            layout: {\r\n                hierarchical:{\r\n                    enabled: false,\r\n                    levelSeparation: 150,\r\n                    nodeSpacing: 100,\r\n                    treeSpacing: 100,\r\n                },\r\n            },\r\n            edges: {\r\n                arrows:{\r\n                    to:{\r\n                        enabled: false\r\n                    }\r\n                },\r\n                color: {\r\n                    color: '#1E90FF',\r\n                    highlight: '#848484',\r\n                    hover: '#848484',\r\n                    inherit: 'from',\r\n                    opacity: 1\r\n                },\r\n                smooth: true,\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    render(){\r\n        const {graph, events} = this.props;\r\n\r\n        if (graph !== undefined) {\r\n            return (\r\n                <Graph\r\n                    graph={graph}\r\n                    options={this.options}\r\n                    events={events !== undefined ? events : null}\r\n                />\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default TopologyDiagram;"]},"metadata":{},"sourceType":"module"}