{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from\"react-redux\";import{setMaximize}from\"../redux/actions\";import{Button}from'reactstrap';import ReactTooltip from'react-tooltip';var MaximizeContent=/*#__PURE__*/function(_React$Component){_inherits(MaximizeContent,_React$Component);var _super=_createSuper(MaximizeContent);function MaximizeContent(){_classCallCheck(this,MaximizeContent);return _super.apply(this,arguments);}_createClass(MaximizeContent,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){ReactTooltip.rebuild();}},{key:\"handleMaximize\",value:function handleMaximize(){this.props.toggleMaximize();}},{key:\"render\",value:function render(){var _this$props=this.props,language=_this$props.language,maximize=_this$props.maximize,editOn=_this$props.editOn,tooltipPlacement=_this$props.tooltipPlacement;var toggleCSS=maximize?'icon icon-minimize':'icon icon-maximize';var buttonCSS=maximize?'btn btn-warning ml-3':'btn btn-light ml-3';var title=maximize?language.standard:language.maximize;if(language){return/*#__PURE__*/React.createElement(Button,{className:buttonCSS,disabled:editOn,\"data-place\":tooltipPlacement,\"data-tip\":title,onClick:this.handleMaximize.bind(this)},/*#__PURE__*/React.createElement(\"i\",{className:toggleCSS}));}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}}}]);return MaximizeContent;}(React.Component);function mapStateToProps(state){return{maximize:state.maximize,language:state.language,editOn:state.editOn,tooltipPlacement:state.tooltipPlacement};}function mapStateToDispatch(dispatch){return{toggleMaximize:function toggleMaximize(){return dispatch(setMaximize());}};}export default connect(mapStateToProps,mapStateToDispatch)(MaximizeContent);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/MaximizeContent.jsx"],"names":["React","connect","setMaximize","Button","ReactTooltip","MaximizeContent","prevProps","prevState","snapshot","rebuild","props","toggleMaximize","language","maximize","editOn","tooltipPlacement","toggleCSS","buttonCSS","title","standard","handleMaximize","bind","Component","mapStateToProps","state","mapStateToDispatch","dispatch"],"mappings":"4yBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OAAQC,MAAR,KAAqB,YAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,C,GAGMC,CAAAA,e,8TAEiBC,S,CAAWC,S,CAAWC,Q,CAAU,CAC/CJ,YAAY,CAACK,OAAb,GACH,C,uDAEgB,CACb,KAAKC,KAAL,CAAWC,cAAX,GACH,C,uCAEQ,iBACkD,KAAKD,KADvD,CACEE,QADF,aACEA,QADF,CACYC,QADZ,aACYA,QADZ,CACsBC,MADtB,aACsBA,MADtB,CAC8BC,gBAD9B,aAC8BA,gBAD9B,CAEL,GAAMC,CAAAA,SAAS,CAAGH,QAAQ,CAAG,oBAAH,CAA0B,oBAApD,CACA,GAAMI,CAAAA,SAAS,CAAGJ,QAAQ,CAAG,sBAAH,CAA4B,oBAAtD,CACA,GAAMK,CAAAA,KAAK,CAAGL,QAAQ,CAAGD,QAAQ,CAACO,QAAZ,CAAuBP,QAAQ,CAACC,QAAtD,CAEA,GAAID,QAAJ,CAAc,CACV,mBACI,oBAAC,MAAD,EAAQ,SAAS,CAAEK,SAAnB,CACQ,QAAQ,CAAEH,MADlB,CAEQ,aAAYC,gBAFpB,CAGQ,WAAUG,KAHlB,CAIQ,OAAO,CAAE,KAAKE,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAJjB,eAKI,yBAAG,SAAS,CAAEL,SAAd,EALJ,CADJ,CASH,CAVD,IAUO,CACH,mBAAQ,wCAAR,CACH,CACJ,C,6BA7ByBhB,KAAK,CAACsB,S,EAgCpC,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHX,QAAQ,CAAEW,KAAK,CAACX,QADb,CAEHD,QAAQ,CAAEY,KAAK,CAACZ,QAFb,CAGHE,MAAM,CAAEU,KAAK,CAACV,MAHX,CAIHC,gBAAgB,CAAES,KAAK,CAACT,gBAJrB,CAAP,CAMH,CAED,QAASU,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHf,cAAc,CAAE,gCAAMe,CAAAA,QAAQ,CAACxB,WAAW,EAAZ,CAAd,EADb,CAAP,CAGH,CAGD,cAAeD,CAAAA,OAAO,CAACsB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CpB,eAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {setMaximize} from \"../redux/actions\";\r\nimport {Button} from 'reactstrap';\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\n\r\nclass MaximizeContent extends React.Component {\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        ReactTooltip.rebuild();\r\n    }\r\n\r\n    handleMaximize() {\r\n        this.props.toggleMaximize();\r\n    }\r\n\r\n    render() {\r\n        const {language, maximize, editOn, tooltipPlacement} = this.props;\r\n        const toggleCSS = maximize ? 'icon icon-minimize' : 'icon icon-maximize';\r\n        const buttonCSS = maximize ? 'btn btn-warning ml-3' : 'btn btn-light ml-3';\r\n        const title = maximize ? language.standard : language.maximize;\r\n\r\n        if (language) {\r\n            return (\r\n                <Button className={buttonCSS}\r\n                        disabled={editOn}\r\n                        data-place={tooltipPlacement}\r\n                        data-tip={title}\r\n                        onClick={this.handleMaximize.bind(this)}>\r\n                    <i className={toggleCSS}/>\r\n                </Button>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        maximize: state.maximize,\r\n        language: state.language,\r\n        editOn: state.editOn,\r\n        tooltipPlacement: state.tooltipPlacement\r\n    }\r\n}\r\n\r\nfunction mapStateToDispatch(dispatch) {\r\n    return {\r\n        toggleMaximize: () => dispatch(setMaximize())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapStateToDispatch)(MaximizeContent);"]},"metadata":{},"sourceType":"module"}