{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";/*\r\n* Rest Api module\r\n* Use for call rest api methods from one hand\r\n* It includes error handler\r\n*\r\n*/import axios from'axios';import AlertModule from'./AlertModule';var RestApiModule=/*#__PURE__*/function(){function RestApiModule(){_classCallCheck(this,RestApiModule);this.alert=new AlertModule();var _process$env=process.env,environment=_process$env.REACT_APP_ENV,preprod=_process$env.REACT_APP_API_GATEWAY_PREPROD,prod=_process$env.REACT_APP_API_GATEWAY_PROD,dev=_process$env.REACT_APP_API_GATEWAY;this.serverPath=environment===\"preprod\"?preprod:environment===\"prod\"?prod:dev;this.endpoints={getConfig:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:\"/GetConfigFileStream\"},login:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/LoginWithCredentials\"},exceldata:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/GetExcelData\"},logout:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/Logout\"},checkToken:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/LoginWithToken\"},getRoles:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/GetUserRolesList\"},getRegions:{serviceName:process.env.REACT_APP_AUTH_SERVICE,methodName:\"/GetUserRegions\"},ranFirst:{serviceName:process.env.REACT_APP_RAN_SERVICE,methodName:\"/GetRANTopologyFirstLevelforRegion\"},ranSecond:{serviceName:process.env.REACT_APP_RAN_SERVICE,methodName:\"/GetRANTopologySecondLevelforAggregSite\"},core:{serviceName:process.env.REACT_APP_CORE_SERVICE,methodName:\"/CoreTopologyView\"},wdm:{serviceName:process.env.REACT_APP_WDM_SERVICE,methodName:\"/WDMTopologyView\"},getMatrixDataCount:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:\"/GetConnectivityMatrixCountbyRegion\"},getMatrixData:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:\"/GetConnectivtyMatrixforRegion\"},saveRow:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:\"/SaveRow\"},getPickList:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetPickList'},checkRadioSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckIfRadioSiteExists'},isRadioSiteExists:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/IsRadioSiteExist'},checkNewAggrSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckIfAggregSiteExists'},checkOldAggrSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckIfPreAggregSiteExists'},checkBscName:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckBSCNameExists'},checkRncName:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/CheckRNCNameExists'},getMWListByTechMWSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWEquipListByTechMWSite'},getMWAggreListByTechnoMWAggre:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWEquipAggreListByTechnoMWAggre'},getIpListByIPTechno:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetIpEquipListByIPTechno'},getMWPortListByMWEquip:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWPortListByMWEquip'},getMWPortAggreListByMWEquipmentAggre:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetMWPortAggreListByMWEquipmentAggre'},getIpPortListUnderIpEquip:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetIpPortListUnderIpEquip'},exportData:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/ExportDataMatrixToExcel'},importData:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/ImportDataMatrixFromExcel'},getImportStatus:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetImportStatus'},getLocksCount:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/getLocksCount'},getRadioListByRegion:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetRadioSiteByRegion'},getRegionByRadioSite:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/GetRegionName'},lock:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/TryLock'},unlock:{serviceName:process.env.REACT_APP_MATRIX_SERVICE,methodName:'/Unlock'}};}_createClass(RestApiModule,[{key:\"callApi\",value:function callApi(endpoint,dto){var _this=this;return new Promise(function(res,rej){var _this$endpoints$endpo=_this.endpoints[endpoint],serviceName=_this$endpoints$endpo.serviceName,methodName=_this$endpoints$endpo.methodName;axios({method:\"POST\",url:\"\".concat(_this.serverPath).concat(serviceName).concat(methodName),data:dto}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var _response$data,exec_status,error_code,error_message,message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://console.log(response);\n_response$data=response.data,exec_status=_response$data.exec_status,error_code=_response$data.error_code,error_message=_response$data.error_message;if(exec_status==='success'){res(response.data);}if(exec_status==='error'){message=error_message?error_message:\"Null exception\";if(+error_code===10){_this.alert.showMessage('error','Error',message,true);}else{_this.alert.showMessage('error','Error',message,false);}rej(false);}case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(err){_this.alert.showMessage('error','Error',err,false);rej(false);});});}},{key:\"getImportEndpoint\",value:function getImportEndpoint(endpoint){var _this$endpoints$endpo2=this.endpoints[endpoint],serviceName=_this$endpoints$endpo2.serviceName,methodName=_this$endpoints$endpo2.methodName;return\"\".concat(this.serverPath).concat(serviceName).concat(methodName);}}]);return RestApiModule;}();export default RestApiModule;","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/RestApiModule.js"],"names":["axios","AlertModule","RestApiModule","alert","process","env","environment","REACT_APP_ENV","preprod","REACT_APP_API_GATEWAY_PREPROD","prod","REACT_APP_API_GATEWAY_PROD","dev","REACT_APP_API_GATEWAY","serverPath","endpoints","getConfig","serviceName","REACT_APP_MATRIX_SERVICE","methodName","login","REACT_APP_AUTH_SERVICE","exceldata","logout","checkToken","getRoles","getRegions","ranFirst","REACT_APP_RAN_SERVICE","ranSecond","core","REACT_APP_CORE_SERVICE","wdm","REACT_APP_WDM_SERVICE","getMatrixDataCount","getMatrixData","saveRow","getPickList","checkRadioSite","isRadioSiteExists","checkNewAggrSite","checkOldAggrSite","checkBscName","checkRncName","getMWListByTechMWSite","getMWAggreListByTechnoMWAggre","getIpListByIPTechno","getMWPortListByMWEquip","getMWPortAggreListByMWEquipmentAggre","getIpPortListUnderIpEquip","exportData","importData","getImportStatus","getLocksCount","getRadioListByRegion","getRegionByRadioSite","lock","unlock","endpoint","dto","Promise","res","rej","method","url","data","then","response","exec_status","error_code","error_message","message","showMessage","catch","err"],"mappings":"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","sourcesContent":["/*\r\n* Rest Api module\r\n* Use for call rest api methods from one hand\r\n* It includes error handler\r\n*\r\n*/\r\n\r\nimport axios from 'axios';\r\nimport AlertModule from './AlertModule'\r\n\r\nclass RestApiModule {\r\n\r\n    constructor() {\r\n        this.alert = new AlertModule();\r\n\r\n        const {\r\n            REACT_APP_ENV: environment,\r\n            REACT_APP_API_GATEWAY_PREPROD: preprod,\r\n            REACT_APP_API_GATEWAY_PROD: prod,\r\n            REACT_APP_API_GATEWAY: dev\r\n        } = process.env;\r\n\r\n        this.serverPath = (environment === \"preprod\")\r\n            ? preprod\r\n            : (environment === \"prod\")\r\n                ? prod\r\n                : dev;\r\n\r\n        this.endpoints = {\r\n            getConfig: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: \"/GetConfigFileStream\"\r\n            },\r\n            login: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/LoginWithCredentials\"\r\n            },\r\n            exceldata: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/GetExcelData\"\r\n            },\r\n            logout: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/Logout\"\r\n            },\r\n            checkToken: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/LoginWithToken\"\r\n            },\r\n            getRoles:{\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/GetUserRolesList\"\r\n            },\r\n            getRegions: {\r\n                serviceName: process.env.REACT_APP_AUTH_SERVICE,\r\n                methodName: \"/GetUserRegions\"\r\n            },\r\n            ranFirst: {\r\n                serviceName: process.env.REACT_APP_RAN_SERVICE,\r\n                methodName: \"/GetRANTopologyFirstLevelforRegion\",\r\n            },\r\n            ranSecond: {\r\n                serviceName: process.env.REACT_APP_RAN_SERVICE,\r\n                methodName: \"/GetRANTopologySecondLevelforAggregSite\"\r\n            },\r\n            core: {\r\n                serviceName: process.env.REACT_APP_CORE_SERVICE,\r\n                methodName: \"/CoreTopologyView\"\r\n            },\r\n            wdm: {\r\n                serviceName: process.env.REACT_APP_WDM_SERVICE,\r\n                methodName: \"/WDMTopologyView\"\r\n            },\r\n            getMatrixDataCount: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: \"/GetConnectivityMatrixCountbyRegion\"\r\n            },\r\n            getMatrixData: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: \"/GetConnectivtyMatrixforRegion\"\r\n            },\r\n            saveRow: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: \"/SaveRow\"\r\n            },\r\n            getPickList: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetPickList'\r\n            },\r\n            checkRadioSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckIfRadioSiteExists'\r\n            },\r\n            isRadioSiteExists: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/IsRadioSiteExist'\r\n            },\r\n            checkNewAggrSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckIfAggregSiteExists'\r\n            },\r\n            checkOldAggrSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckIfPreAggregSiteExists'\r\n            },\r\n            checkBscName: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckBSCNameExists'\r\n            },\r\n            checkRncName: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/CheckRNCNameExists'\r\n            },\r\n            getMWListByTechMWSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWEquipListByTechMWSite'\r\n            },\r\n            getMWAggreListByTechnoMWAggre: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWEquipAggreListByTechnoMWAggre'\r\n            },\r\n            getIpListByIPTechno: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetIpEquipListByIPTechno'\r\n            },\r\n            getMWPortListByMWEquip: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWPortListByMWEquip'\r\n            },\r\n            getMWPortAggreListByMWEquipmentAggre: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetMWPortAggreListByMWEquipmentAggre'\r\n            },\r\n            getIpPortListUnderIpEquip: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetIpPortListUnderIpEquip'\r\n            },\r\n            exportData: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/ExportDataMatrixToExcel'\r\n            },\r\n            importData: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/ImportDataMatrixFromExcel'\r\n            },\r\n            getImportStatus: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetImportStatus'\r\n            },\r\n            getLocksCount: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/getLocksCount'\r\n            },\r\n            getRadioListByRegion: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetRadioSiteByRegion'\r\n            },\r\n            getRegionByRadioSite: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/GetRegionName'\r\n            },\r\n            lock: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/TryLock'\r\n            },\r\n            unlock: {\r\n                serviceName: process.env.REACT_APP_MATRIX_SERVICE,\r\n                methodName: '/Unlock'\r\n            }\r\n        }\r\n    }\r\n\r\n    callApi(endpoint, dto) {\r\n\r\n        return new Promise((res, rej) => {\r\n            const {serviceName, methodName} = this.endpoints[endpoint];\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${this.serverPath}${serviceName}${methodName}`,\r\n                data: dto\r\n            }).then(async (response) => {\r\n\r\n                //console.log(response);\r\n\r\n                const {exec_status, error_code, error_message} = response.data;\r\n\r\n                if (exec_status === 'success') {\r\n                    res(response.data);\r\n                }\r\n\r\n                if (exec_status === 'error') {\r\n\r\n                    const message = error_message ? error_message : \"Null exception\"\r\n\r\n                    if (+error_code === 10) {\r\n                        this.alert.showMessage('error', 'Error', message, true);\r\n                    } else {\r\n                        this.alert.showMessage('error', 'Error', message, false);\r\n                    }\r\n\r\n                    rej(false)\r\n                }\r\n\r\n            }).catch((err) => {\r\n\r\n                this.alert.showMessage('error', 'Error', err, false);\r\n                rej(false)\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    getImportEndpoint(endpoint) {\r\n\r\n        const {serviceName, methodName} = this.endpoints[endpoint];\r\n\r\n        return `${this.serverPath}${serviceName}${methodName}`;\r\n    }\r\n}\r\n\r\nexport default RestApiModule;"]},"metadata":{},"sourceType":"module"}