{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\src\\\\components\\\\SelectRegion.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Input } from 'reactstrap';\n\nclass SelectRegion extends React.Component {\n  render() {\n    const _this$props = this.props,\n          language = _this$props.language,\n          regions = _this$props.regions;\n\n    if (language && regions) {\n      return React.createElement(Input, {\n        type: 'select',\n        className: 'custom-select',\n        onChange: ev => this.props.handleRegionChange(ev.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, language.loadByRegion), regions.map(value => {\n        return React.createElement(\"option\", {\n          key: value,\n          value: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, value);\n      }));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    language: state.language,\n    token: state.token,\n    regions: state.regions\n  };\n}\n\nexport default connect(mapStateToProps)(SelectRegion);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/SelectRegion.jsx"],"names":["React","connect","Input","SelectRegion","Component","render","props","language","regions","ev","handleRegionChange","target","value","loadByRegion","map","mapStateToProps","state","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,YAApB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEvCC,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKC,KAD5B;AAAA,UACEC,QADF,eACEA,QADF;AAAA,UACYC,OADZ,eACYA,OADZ;;AAGL,QAAID,QAAQ,IAAIC,OAAhB,EAAyB;AACrB,aACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,QAAb;AAAuB,QAAA,SAAS,EAAE,eAAlC;AACO,QAAA,QAAQ,EAAEC,EAAE,IAAI,KAAKH,KAAL,CAAWI,kBAAX,CAA8BD,EAAE,CAACE,MAAH,CAAUC,KAAxC,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBL,QAAQ,CAACM,YAA5B,CAFJ,EAGKL,OAAO,CAACM,GAAR,CAAaF,KAAD,IAAW;AACpB,eAAQ;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCA,KAAnC,CAAR;AACH,OAFA,CAHL,CADJ;AAUH,KAXD,MAWO;AACH,aACI,yCADJ;AAGH;AACJ;;AArBsC;;AAwB3C,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHT,IAAAA,QAAQ,EAAES,KAAK,CAACT,QADb;AAEHU,IAAAA,KAAK,EAAED,KAAK,CAACC,KAFV;AAGHT,IAAAA,OAAO,EAAEQ,KAAK,CAACR;AAHZ,GAAP;AAKH;;AAED,eAAeP,OAAO,CAACc,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Input} from 'reactstrap';\r\n\r\nclass SelectRegion extends React.Component {\r\n\r\n    render() {\r\n        const {language, regions} = this.props;\r\n\r\n        if (language && regions) {\r\n            return (\r\n                <Input type={'select'} className={'custom-select'}\r\n                       onChange={ev => this.props.handleRegionChange(ev.target.value)}>\r\n                    <option value=\"0\">{language.loadByRegion}</option>\r\n                    {regions.map((value) => {\r\n                        return (<option key={value} value={value}>{value}</option>)\r\n                    })\r\n                    }\r\n                </Input>\r\n            )\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        language: state.language,\r\n        token: state.token,\r\n        regions: state.regions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectRegion);"]},"metadata":{},"sourceType":"module"}