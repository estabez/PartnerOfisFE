{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from\"react-redux\";import{Input}from'reactstrap';import{setSelectedRegion as _setSelectedRegion}from\"../redux/actions\";var SelectRegion=/*#__PURE__*/function(_React$Component){_inherits(SelectRegion,_React$Component);function SelectRegion(){_classCallCheck(this,SelectRegion);return _possibleConstructorReturn(this,_getPrototypeOf(SelectRegion).apply(this,arguments));}_createClass(SelectRegion,[{key:\"handleSelectedRegion\",value:function handleSelectedRegion(ev){var val;return _regeneratorRuntime.async(function handleSelectedRegion$(_context){while(1){switch(_context.prev=_context.next){case 0:val=ev.target.value;_context.next=3;return _regeneratorRuntime.awrap(this.props.setSelectedRegion(val));case 3:this.props.handleRegionChange(val);case 4:case\"end\":return _context.stop();}}},null,this);}},{key:\"render\",value:function render(){var _this$props=this.props,language=_this$props.language,regions=_this$props.regions;if(language&&regions){return React.createElement(Input,{type:'select',className:'custom-select',onChange:this.handleSelectedRegion.bind(this)},React.createElement(\"option\",{value:\"0\"},language.loadByRegion),regions.map(function(value){return React.createElement(\"option\",{key:value,value:value},value);}));}else{return React.createElement(React.Fragment,null);}}}]);return SelectRegion;}(React.Component);function mapStateToProps(state){return{language:state.language,token:state.token,regions:state.regions};}function mapDispatchToProps(dispatch){return{setSelectedRegion:function setSelectedRegion(region){dispatch(_setSelectedRegion(region));}};}export default connect(mapStateToProps,mapDispatchToProps)(SelectRegion);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/SelectRegion.jsx"],"names":["React","connect","Input","setSelectedRegion","SelectRegion","ev","val","target","value","props","handleRegionChange","language","regions","handleSelectedRegion","bind","loadByRegion","map","Component","mapStateToProps","state","token","mapDispatchToProps","dispatch","region"],"mappings":"2/BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,KAAoB,YAApB,CACA,OAAQC,iBAAiB,GAAjBA,CAAAA,kBAAR,KAAgC,kBAAhC,C,GAEMC,CAAAA,Y,qUAEyBC,E,wIACjBC,G,CAAMD,EAAE,CAACE,MAAH,CAAUC,K,kDAChB,KAAKC,KAAL,CAAWN,iBAAX,CAA6BG,GAA7B,C,SACN,KAAKG,KAAL,CAAWC,kBAAX,CAA8BJ,GAA9B,E,+FAGK,iBACuB,KAAKG,KAD5B,CACEE,QADF,aACEA,QADF,CACYC,OADZ,aACYA,OADZ,CAGL,GAAID,QAAQ,EAAIC,OAAhB,CAAyB,CACrB,MACI,qBAAC,KAAD,EAAO,IAAI,CAAE,QAAb,CAAuB,SAAS,CAAE,eAAlC,CACI,QAAQ,CAAE,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CADd,EAGI,8BAAQ,KAAK,CAAC,GAAd,EAAmBH,QAAQ,CAACI,YAA5B,CAHJ,CAIKH,OAAO,CAACI,GAAR,CAAY,SAACR,KAAD,CAAW,CACpB,MAAQ,+BAAQ,GAAG,CAAEA,KAAb,CAAoB,KAAK,CAAEA,KAA3B,EAAmCA,KAAnC,CAAR,CACH,CAFA,CAJL,CADJ,CAWH,CAZD,IAYO,CACH,MACI,yCADJ,CAGH,CACJ,C,0BA5BsBR,KAAK,CAACiB,S,EA+BjC,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC5B,MAAO,CACHR,QAAQ,CAAEQ,KAAK,CAACR,QADb,CAEHS,KAAK,CAAED,KAAK,CAACC,KAFV,CAGHR,OAAO,CAAEO,KAAK,CAACP,OAHZ,CAAP,CAKH,CACD,QAASS,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAClC,MAAO,CACHnB,iBAAiB,CAAE,2BAACoB,MAAD,CAAY,CAACD,QAAQ,CAACnB,kBAAiB,CAACoB,MAAD,CAAlB,CAAR,CAAoC,CADjE,CAAP,CAGH,CAED,cAAetB,CAAAA,OAAO,CAACiB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CjB,YAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Input} from 'reactstrap';\r\nimport {setSelectedRegion} from \"../redux/actions\";\r\n\r\nclass SelectRegion extends React.Component {\r\n\r\n    async handleSelectedRegion(ev) {\r\n        const val = ev.target.value;\r\n        await this.props.setSelectedRegion(val);\r\n        this.props.handleRegionChange(val)\r\n    }\r\n\r\n    render() {\r\n        const {language, regions} = this.props;\r\n\r\n        if (language && regions) {\r\n            return (\r\n                <Input type={'select'} className={'custom-select'}\r\n                    onChange={this.handleSelectedRegion.bind(this)}\r\n                >\r\n                    <option value=\"0\">{language.loadByRegion}</option>\r\n                    {regions.map((value) => {\r\n                        return (<option key={value} value={value}>{value}</option>)\r\n                    })\r\n                    }\r\n                </Input>\r\n            )\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        language: state.language,\r\n        token: state.token,\r\n        regions: state.regions\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setSelectedRegion: (region) => {dispatch(setSelectedRegion(region))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectRegion);"]},"metadata":{},"sourceType":"module"}