{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\SSCM\\\\ss\\\\src\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from\"react-redux\";import Toolbar from'../components/TopologyToolbar';import Header from\"../components/Header\";import Sidebar from\"../components/Sidebar\";import TopologyDiagram from'../components/TopologyDiagram';import IconModule from'../IconModule';import RestApiModule from'../RestApiModule';import EmptyDataset from\"../components/EmptyDataset\";var WDM=/*#__PURE__*/function(_React$Component){_inherits(WDM,_React$Component);var _super=_createSuper(WDM);function WDM(props){var _this;_classCallCheck(this,WDM);_this=_super.call(this,props);_this._isMounted=false;_this.state={graph:null,labels:null,dataExist:true};_this.unformatedData=null;_this.restApi=new RestApiModule();_this.today=new Date();_this.todayDate='_'+_this.today.getDate()+_this.today.toLocaleString('default',{month:'long'})+_this.today.getFullYear();_this.fileName='WDMTopology'+_this.todayDate+'.png';return _this;}_createClass(WDM,[{key:\"componentDidMount\",value:function componentDidMount(){this._isMounted=true;this.getWdmTopologyData();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;}},{key:\"getWdmTopologyData\",value:function getWdmTopologyData(){var _this2=this;this.restApi.callApi('wdm',{token:this.props.token}).then(function(response){var d=response.WDMTopologyViewData?response.WDMTopologyViewData:[];if(_this2._isMounted&&d.length>0){_this2.prepareData(d);}else{_this2.setState({dataExist:false});}}).catch(function(error){console.log(error);_this2.setState({dataExist:false});});}},{key:\"prepareData\",value:function prepareData(json){var nodes=[],edges=[],labels=[];var Icons=new IconModule();var Site=Icons.getIconForNode('AGGREGATE_SITE');var graph=null;function pushItem(label){if(label!==null){labels.push(label);nodes.push({id:label,label:label,shape:'image',font:{color:'black',size:13},image:Site,size:25});}}if(json){json.map(function(item){var indexA=nodes.findIndex(function(data){return data.label===item.A_SIDE_SITE;});var indexZ=nodes.findIndex(function(data){return data.label===item.Z_SIDE_SITE;});pushItem(indexA<0?item.A_SIDE_SITE:indexZ<0?item.Z_SIDE_SITE:null);var title=\"<strong>Name: </strong>\".concat(item.NAME,\"<br /><strong>Status: </strong>\").concat(item.STATUS,\"<br />\");title+=\"<strong>A Side Equip: </strong>\".concat(item.A_SIDE_SITE,\"<br />\");title+=\"<strong>Z Side Equip: </strong>\".concat(item.Z_SIDE_SITE);edges.push({from:item.A_SIDE_SITE,to:item.Z_SIDE_SITE,title:title});});graph={nodes:nodes,edges:edges};this.unformatedData=graph;this.setState({graph:graph});this.setState({labels:labels.sort()});}}},{key:\"handleSelectNode\",value:function(){var _handleSelectNode=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(selectedNodeId){var _this3=this;var newGraph;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newGraph=JSON.parse(JSON.stringify(this.unformatedData));if(newGraph){newGraph.nodes.map(function(node){if(node.label===selectedNodeId){node.font={color:'red',size:_this3.props.fontSize};node.size=40;}});this.setState({graph:newGraph});}case 2:case\"end\":return _context.stop();}}},_callee,this);}));function handleSelectNode(_x){return _handleSelectNode.apply(this,arguments);}return handleSelectNode;}()},{key:\"render\",value:function render(){var _this$props=this.props,language=_this$props.language,maximize=_this$props.maximize,contentCSS=_this$props.contentCSS;var _this$state=this.state,graph=_this$state.graph,dataExist=_this$state.dataExist,labels=_this$state.labels;if(language){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"div\",{className:\"row h-100\"},/*#__PURE__*/React.createElement(Sidebar,{maximize:maximize}),/*#__PURE__*/React.createElement(\"div\",{className:contentCSS},dataExist&&graph&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Toolbar,{wrapper:'card toolbar mt-2',labels:labels,handleSelectNode:this.handleSelectNode.bind(this),diagramAreaId:'WdmTopology',snapshotFileName:this.fileName}),/*#__PURE__*/React.createElement(\"div\",{id:'WdmTopology',className:'card mt-1 fixedCard'},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"h4\",{className:'topologyViewHeader'},language.wdmTopology),/*#__PURE__*/React.createElement(TopologyDiagram,{height:'95%',graph:graph})))),!dataExist&&/*#__PURE__*/React.createElement(EmptyDataset,{page:'wdm',showButton:true}))));}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}}}]);return WDM;}(React.Component);function mapStateToProps(state){return{token:state.token,language:state.language,maximize:state.maximize,contentCSS:state.contentCSS,fontSize:state.topologySelectedNodeFontSize};}export default connect(mapStateToProps)(WDM);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/SSCM/ss/src/src/views/Wdm.jsx"],"names":["React","connect","Toolbar","Header","Sidebar","TopologyDiagram","IconModule","RestApiModule","EmptyDataset","WDM","props","_isMounted","state","graph","labels","dataExist","unformatedData","restApi","today","Date","todayDate","getDate","toLocaleString","month","getFullYear","fileName","getWdmTopologyData","callApi","token","then","response","d","WDMTopologyViewData","length","prepareData","setState","catch","error","console","log","json","nodes","edges","Icons","Site","getIconForNode","pushItem","label","push","id","shape","font","color","size","image","map","item","indexA","findIndex","data","A_SIDE_SITE","indexZ","Z_SIDE_SITE","title","NAME","STATUS","from","to","sort","selectedNodeId","newGraph","JSON","parse","stringify","node","fontSize","language","maximize","contentCSS","handleSelectNode","bind","wdmTopology","Component","mapStateToProps","topologySelectedNodeFontSize"],"mappings":"i9BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,C,GAEMC,CAAAA,G,sGAGF,aAAYC,KAAZ,CAAmB,qCACf,uBAAMA,KAAN,EADe,MAFnBC,UAEmB,CAFN,KAEM,CAGf,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAE,IADE,CAETC,MAAM,CAAE,IAFC,CAGTC,SAAS,CAAE,IAHF,CAAb,CAMA,MAAKC,cAAL,CAAsB,IAAtB,CAEA,MAAKC,OAAL,CAAe,GAAIV,CAAAA,aAAJ,EAAf,CAEA,MAAKW,KAAL,CAAa,GAAIC,CAAAA,IAAJ,EAAb,CACA,MAAKC,SAAL,CAAiB,IAAM,MAAKF,KAAL,CAAWG,OAAX,EAAN,CAA+B,MAAKH,KAAL,CAAWI,cAAX,CAA0B,SAA1B,CAAqC,CAAEC,KAAK,CAAE,MAAT,CAArC,CAA/B,CAA0F,MAAKL,KAAL,CAAWM,WAAX,EAA3G,CACA,MAAKC,QAAL,CAAgB,cAAgB,MAAKL,SAArB,CAAiC,MAAjD,CAfe,aAgBlB,C,6EAEmB,CAChB,KAAKT,UAAL,CAAkB,IAAlB,CACA,KAAKe,kBAAL,GACH,C,mEAEsB,CACnB,KAAKf,UAAL,CAAkB,KAAlB,CACH,C,+DAEoB,iBAEjB,KAAKM,OAAL,CAAaU,OAAb,CAAqB,KAArB,CAA4B,CACxBC,KAAK,CAAE,KAAKlB,KAAL,CAAWkB,KADM,CAA5B,EAGGC,IAHH,CAGQ,SAACC,QAAD,CAAc,CAElB,GAAMC,CAAAA,CAAC,CAAGD,QAAQ,CAACE,mBAAT,CAA+BF,QAAQ,CAACE,mBAAxC,CAA8D,EAAxE,CAEA,GAAI,MAAI,CAACrB,UAAL,EAAmBoB,CAAC,CAACE,MAAF,CAAW,CAAlC,CAAqC,CAEjC,MAAI,CAACC,WAAL,CAAiBH,CAAjB,EAEH,CAJD,IAIO,CAEH,MAAI,CAACI,QAAL,CAAc,CAACpB,SAAS,CAAE,KAAZ,CAAd,EACH,CACJ,CAfD,EAeGqB,KAfH,CAeS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,MAAI,CAACF,QAAL,CAAc,CAACpB,SAAS,CAAE,KAAZ,CAAd,EAEH,CAnBD,EAoBH,C,gDAEWyB,I,CAAM,CAEd,GAAMC,CAAAA,KAAK,CAAG,EAAd,CAAkBC,KAAK,CAAG,EAA1B,CAA8B5B,MAAM,CAAG,EAAvC,CACA,GAAM6B,CAAAA,KAAK,CAAG,GAAIrC,CAAAA,UAAJ,EAAd,CACA,GAAMsC,CAAAA,IAAI,CAAGD,KAAK,CAACE,cAAN,CAAqB,gBAArB,CAAb,CAEA,GAAIhC,CAAAA,KAAK,CAAG,IAAZ,CAEA,QAASiC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAErB,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAChBjC,MAAM,CAACkC,IAAP,CAAYD,KAAZ,EAEAN,KAAK,CAACO,IAAN,CAAW,CACPC,EAAE,CAAEF,KADG,CAEPA,KAAK,CAALA,KAFO,CAGPG,KAAK,CAAE,OAHA,CAIPC,IAAI,CAAE,CAACC,KAAK,CAAE,OAAR,CAAiBC,IAAI,CAAE,EAAvB,CAJC,CAKPC,KAAK,CAAEV,IALA,CAMPS,IAAI,CAAE,EANC,CAAX,EAQH,CACJ,CAED,GAAIb,IAAJ,CAAU,CAENA,IAAI,CAACe,GAAL,CAAS,SAACC,IAAD,CAAU,CACf,GAAMC,CAAAA,MAAM,CAAGhB,KAAK,CAACiB,SAAN,CAAgB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACZ,KAAL,GAAeS,IAAI,CAACI,WAAxB,EAApB,CAAf,CACA,GAAMC,CAAAA,MAAM,CAAGpB,KAAK,CAACiB,SAAN,CAAgB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACZ,KAAL,GAAeS,IAAI,CAACM,WAAxB,EAApB,CAAf,CAEAhB,QAAQ,CAACW,MAAM,CAAG,CAAT,CAAaD,IAAI,CAACI,WAAlB,CAAgCC,MAAM,CAAG,CAAT,CAAaL,IAAI,CAACM,WAAlB,CAAgC,IAAjE,CAAR,CAEA,GAAIC,CAAAA,KAAK,kCAA6BP,IAAI,CAACQ,IAAlC,2CAAwER,IAAI,CAACS,MAA7E,UAAT,CACAF,KAAK,2CAAsCP,IAAI,CAACI,WAA3C,UAAL,CACAG,KAAK,2CAAsCP,IAAI,CAACM,WAA3C,CAAL,CAEApB,KAAK,CAACM,IAAN,CAAW,CACPkB,IAAI,CAAEV,IAAI,CAACI,WADJ,CAEPO,EAAE,CAAEX,IAAI,CAACM,WAFF,CAGPC,KAAK,CAAEA,KAHA,CAAX,EAMH,CAhBD,EAkBAlD,KAAK,CAAG,CACJ4B,KAAK,CAALA,KADI,CAEJC,KAAK,CAALA,KAFI,CAAR,CAKA,KAAK1B,cAAL,CAAsBH,KAAtB,CACA,KAAKsB,QAAL,CAAc,CAACtB,KAAK,CAALA,KAAD,CAAd,EACA,KAAKsB,QAAL,CAAc,CAACrB,MAAM,CAAEA,MAAM,CAACsD,IAAP,EAAT,CAAd,EACH,CACJ,C,0IAEsBC,c,+IAEfC,Q,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKzD,cAApB,CAAX,C,CACf,GAAIsD,QAAJ,CAAc,CACVA,QAAQ,CAAC7B,KAAT,CAAec,GAAf,CAAmB,SAACmB,IAAD,CAAU,CACzB,GAAIA,IAAI,CAAC3B,KAAL,GAAesB,cAAnB,CAAmC,CAC/BK,IAAI,CAACvB,IAAL,CAAY,CAACC,KAAK,CAAE,KAAR,CAAeC,IAAI,CAAE,MAAI,CAAC3C,KAAL,CAAWiE,QAAhC,CAAZ,CACAD,IAAI,CAACrB,IAAL,CAAY,EAAZ,CACH,CACJ,CALD,EAMA,KAAKlB,QAAL,CAAc,CAACtB,KAAK,CAAEyD,QAAR,CAAd,EACH,C,8MAGI,iBACoC,KAAK5D,KADzC,CACEkE,QADF,aACEA,QADF,CACYC,QADZ,aACYA,QADZ,CACsBC,UADtB,aACsBA,UADtB,iBAE8B,KAAKlE,KAFnC,CAEEC,KAFF,aAEEA,KAFF,CAESE,SAFT,aAESA,SAFT,CAEoBD,MAFpB,aAEoBA,MAFpB,CAIL,GAAI8D,QAAJ,CAAc,CAEV,mBACI,qDACI,oBAAC,MAAD,MADJ,cAEI,2BAAK,SAAS,CAAC,WAAf,eACI,oBAAC,OAAD,EAAS,QAAQ,CAAEC,QAAnB,EADJ,cAEI,2BAAK,SAAS,CAAEC,UAAhB,EACM/D,SAAS,EAAIF,KAAd,eACD,qDACI,oBAAC,OAAD,EAAS,OAAO,CAAE,mBAAlB,CACS,MAAM,CAAEC,MADjB,CAES,gBAAgB,CAAE,KAAKiE,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAF3B,CAGS,aAAa,CAAE,aAHxB,CAIS,gBAAgB,CAAE,KAAKvD,QAJhC,EADJ,cAOI,2BAAK,EAAE,CAAE,aAAT,CAAwB,SAAS,CAAE,qBAAnC,eACI,2BAAK,SAAS,CAAC,WAAf,eACI,0BAAI,SAAS,CAAE,oBAAf,EAAsCmD,QAAQ,CAACK,WAA/C,CADJ,cAEI,oBAAC,eAAD,EACI,MAAM,CAAE,KADZ,CAEI,KAAK,CAAEpE,KAFX,EAFJ,CADJ,CAPJ,CAFJ,CAqBK,CAACE,SAAD,eACD,oBAAC,YAAD,EAAc,IAAI,CAAE,KAApB,CAA2B,UAAU,CAAE,IAAvC,EAtBJ,CAFJ,CAFJ,CADJ,CAkCH,CApCD,IAoCO,CACH,mBAAQ,wCAAR,CACH,CACJ,C,iBAtKaf,KAAK,CAACkF,S,EAyKxB,QAASC,CAAAA,eAAT,CAAyBvE,KAAzB,CAAgC,CAC5B,MAAO,CACHgB,KAAK,CAAEhB,KAAK,CAACgB,KADV,CAEHgD,QAAQ,CAAEhE,KAAK,CAACgE,QAFb,CAGHC,QAAQ,CAAEjE,KAAK,CAACiE,QAHb,CAIHC,UAAU,CAAElE,KAAK,CAACkE,UAJf,CAKHH,QAAQ,CAAE/D,KAAK,CAACwE,4BALb,CAAP,CAOH,CAED,cAAenF,CAAAA,OAAO,CAACkF,eAAD,CAAP,CAAyB1E,GAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Toolbar from '../components/TopologyToolbar'\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport TopologyDiagram from '../components/TopologyDiagram'\r\n\r\nimport IconModule from '../IconModule';\r\nimport RestApiModule from '../RestApiModule'\r\n\r\nimport EmptyDataset from \"../components/EmptyDataset\";\r\n\r\nclass WDM extends React.Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            graph: null,\r\n            labels: null,\r\n            dataExist: true\r\n        }\r\n\r\n        this.unformatedData = null\r\n\r\n        this.restApi = new RestApiModule();\r\n\r\n        this.today = new Date();\r\n        this.todayDate = '_' + this.today.getDate() +  (this.today.toLocaleString('default', { month: 'long' })) + this.today.getFullYear();\r\n        this.fileName = 'WDMTopology' + this.todayDate + '.png';\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.getWdmTopologyData();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    getWdmTopologyData() {\r\n\r\n        this.restApi.callApi('wdm', {\r\n            token: this.props.token\r\n\r\n        }).then((response) => {\r\n\r\n            const d = response.WDMTopologyViewData ? response.WDMTopologyViewData : [];\r\n\r\n            if (this._isMounted && d.length > 0) {\r\n\r\n                this.prepareData(d);\r\n\r\n            } else {\r\n\r\n                this.setState({dataExist: false})\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error)\r\n            this.setState({dataExist: false})\r\n\r\n        });\r\n    }\r\n\r\n    prepareData(json) {\r\n\r\n        const nodes = [], edges = [], labels = [];\r\n        const Icons = new IconModule();\r\n        const Site = Icons.getIconForNode('AGGREGATE_SITE');\r\n\r\n        let graph = null;\r\n\r\n        function pushItem(label) {\r\n\r\n            if (label !== null) {\r\n                labels.push(label);\r\n\r\n                nodes.push({\r\n                    id: label,\r\n                    label,\r\n                    shape: 'image',\r\n                    font: {color: 'black', size: 13},\r\n                    image: Site,\r\n                    size: 25,\r\n                })\r\n            }\r\n        }\r\n\r\n        if (json) {\r\n\r\n            json.map((item) => {\r\n                const indexA = nodes.findIndex(data => data.label === item.A_SIDE_SITE);\r\n                const indexZ = nodes.findIndex(data => data.label === item.Z_SIDE_SITE);\r\n\r\n                pushItem(indexA < 0 ? item.A_SIDE_SITE : indexZ < 0 ? item.Z_SIDE_SITE : null);\r\n\r\n                let title = `<strong>Name: </strong>${item.NAME}<br /><strong>Status: </strong>${item.STATUS}<br />`;\r\n                title += `<strong>A Side Equip: </strong>${item.A_SIDE_SITE}<br />`;\r\n                title += `<strong>Z Side Equip: </strong>${item.Z_SIDE_SITE}`;\r\n\r\n                edges.push({\r\n                    from: item.A_SIDE_SITE,\r\n                    to: item.Z_SIDE_SITE,\r\n                    title: title\r\n                });\r\n\r\n            });\r\n\r\n            graph = {\r\n                nodes,\r\n                edges\r\n            };\r\n\r\n            this.unformatedData = graph;\r\n            this.setState({graph});\r\n            this.setState({labels: labels.sort()});\r\n        }\r\n    }\r\n\r\n    async handleSelectNode(selectedNodeId) {\r\n\r\n        let newGraph = JSON.parse(JSON.stringify(this.unformatedData));\r\n        if (newGraph) {\r\n            newGraph.nodes.map((node) => {\r\n                if (node.label === selectedNodeId) {\r\n                    node.font = {color: 'red', size: this.props.fontSize};\r\n                    node.size = 40;\r\n                }\r\n            });\r\n            this.setState({graph: newGraph});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {language, maximize, contentCSS} = this.props;\r\n        const {graph, dataExist, labels} = this.state;\r\n\r\n        if (language) {\r\n\r\n            return (\r\n                <>\r\n                    <Header/>\r\n                    <div className=\"row h-100\">\r\n                        <Sidebar maximize={maximize}/>\r\n                        <div className={contentCSS}>\r\n                            {(dataExist && graph) &&\r\n                            <>\r\n                                <Toolbar wrapper={'card toolbar mt-2'}\r\n                                         labels={labels}\r\n                                         handleSelectNode={this.handleSelectNode.bind(this)}\r\n                                         diagramAreaId={'WdmTopology'}\r\n                                         snapshotFileName={this.fileName}\r\n                                />\r\n                                <div id={'WdmTopology'} className={'card mt-1 fixedCard'}>\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className={'topologyViewHeader'}>{language.wdmTopology}</h4>\r\n                                        <TopologyDiagram\r\n                                            height={'95%'}\r\n                                            graph={graph}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                            }\r\n\r\n                            {!dataExist &&\r\n                            <EmptyDataset page={'wdm'} showButton={true}/>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                </>\r\n            )\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        token: state.token,\r\n        language: state.language,\r\n        maximize: state.maximize,\r\n        contentCSS: state.contentCSS,\r\n        fontSize: state.topologySelectedNodeFontSize\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WDM);"]},"metadata":{},"sourceType":"module"}