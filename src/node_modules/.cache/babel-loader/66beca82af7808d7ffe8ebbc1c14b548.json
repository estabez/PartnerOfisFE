{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from\"react-redux\";import{Modal,ModalHeader,ModalBody}from'reactstrap';import{modalImportToggle,spinnerToggle}from\"../redux/actions\";import FileUploadProgress from'react-fileupload-progress';import XLSX from\"xlsx\";import{make_cols}from\"./MakeColumns\";import{SheetJSFT}from'./types';import{groupingMap}from'../matrixDataMap';import RestApiModule from'../RestApiModule';import{Row,Col,Card,CardBody,CardTitle,CardText,CardHeader,CardFooter,Alert,Button}from'reactstrap';import{saveAs}from'file-saver';var ModalImportTemplate=/*#__PURE__*/function(_React$Component){_inherits(ModalImportTemplate,_React$Component);function ModalImportTemplate(props){var _this;_classCallCheck(this,ModalImportTemplate);_this=_possibleConstructorReturn(this,_getPrototypeOf(ModalImportTemplate).call(this,props));_this.state={file:null,data:[],cols:[],fileJSON:{},isExcelHeadersValid:null,uploadProgress:0,showButton1:true,showButton2:false,showButton3:false};var _process$env=process.env,REACT_APP_API_GATEWAY=_process$env.REACT_APP_API_GATEWAY,REACT_APP_MATRIX_SERVICE=_process$env.REACT_APP_MATRIX_SERVICE;_this.uploadFileUrl=\"\".concat(REACT_APP_API_GATEWAY).concat(REACT_APP_MATRIX_SERVICE,\"/ImportDataMatrixFromExcel\");_this.restApi=new RestApiModule();_this.fileInput=React.createRef();_this.styleBar={width:0};return _this;}_createClass(ModalImportTemplate,[{key:\"handleSelectFile\",value:function handleSelectFile(e){var files=e.target.files;if(files&&files[0])this.setState({file:files[0],showButton2:true});}},{key:\"handleFile\",value:function handleFile(){var _this2=this;/* Boilerplate to set up FileReader */this.props.setSpinner();try{var reader=new FileReader();var rABS=!!reader.readAsBinaryString;reader.onload=function(e){/* Parse data */var bstr=e.target.result;var wb=XLSX.read(bstr,{type:rABS?'binary':'array',bookVBA:true,sheetRows:0});/* Get first worksheet */var wsname=wb.SheetNames[0];var ws=wb.Sheets[wsname];/* Convert array of arrays */var data=XLSX.utils.sheet_to_json(ws,{header:1,defval:\"\"});/* Update state */_this2.setState({data:data,cols:make_cols(ws['!ref'])},function(){_this2.state.fileJSON=JSON.stringify(_this2.state.data,null,2);_this2.handleJSONHeaders();});_this2.props.setSpinner();};if(rABS){reader.readAsBinaryString(this.state.file);}else{reader.readAsArrayBuffer(this.state.file);}}catch(e){this.setState({showButton3:false});this.props.setSpinner();}}},{key:\"handleJSONHeaders\",value:function handleJSONHeaders(){var headerMap=JSON.parse(JSON.stringify(groupingMap));var excelHeadersArray=JSON.parse(this.state.fileJSON)[1];var columnsMap=headerMap.reduce(function(fullArr,item){var cols=item.columns.reduce(function(arr,col){if(col.id!==undefined)arr.push(col.id);return arr;},[]);return[].concat(_toConsumableArray(fullArr),_toConsumableArray(cols));},[]);var isSame=JSON.stringify(excelHeadersArray)===JSON.stringify(columnsMap);this.setState({isExcelHeadersValid:isSame,showButton3:isSame,showButton2:!isSame});}},{key:\"handleTxtReport\",value:function handleTxtReport(){var blob=new Blob([\"Hello, world!\"],{type:\"text/plain;charset=utf-8\"});saveAs(blob,\"Import Report.txt\");}},{key:\"toggle\",value:function toggle(){this.setState({file:null,isExcelHeadersValid:null,showButton2:false,showButton3:false});this.props.setModalImport();}},{key:\"customFormRenderer\",value:function customFormRenderer(onSubmit){var _this3=this;var language=this.props.language;return React.createElement(Row,null,React.createElement(Col,null,React.createElement(Button,{color:'success',size:\"lg\",block:true,hidden:!this.state.showButton3,onClick:function onClick(e){_this3.setState({showButton3:false});onSubmit(e);}},language.upload,React.createElement(\"i\",{className:\"icon icon-upload ml-2\"}))));}},{key:\"formGetter\",value:function formGetter(){return JSON.stringify({token:this.props.token,importedExcelAsJSON:this.state.fileJSON});}},{key:\"customProgressRenderer\",value:function customProgressRenderer(progress,hasError,cancelHandler){if(hasError||progress>-1){var language=this.props.language;var progressBar=Object.assign({},this.styleBar);progressBar.width=\"\".concat(progress,\"%\");return React.createElement(React.Fragment,null,React.createElement(Row,null,React.createElement(Col,null,React.createElement(\"div\",{className:\"progressWrapper text-center\"},React.createElement(\"span\",null,\"Import progress: \",\"\".concat(progress,\"%\")),React.createElement(\"div\",{className:\"progressBar\",style:progressBar})))),progress===100&&React.createElement(React.Fragment,null,React.createElement(Row,null,React.createElement(Col,null,React.createElement(Card,{body:false},React.createElement(CardHeader,null,language.importSection.summaryLabel),React.createElement(CardBody,null,React.createElement(Row,null,React.createElement(Col,null,React.createElement(Card,{color:\"primary\",inverse:true},React.createElement(CardBody,null,React.createElement(CardTitle,{tag:\"h5\"},language.importSection.totalRowCount),React.createElement(CardText,null,language.importSection.totalRowText),React.createElement(Alert,{tag:\"h4\",color:\"info\"},\"365 \",language.importSection.rows)))),React.createElement(Col,null,React.createElement(Card,{color:\"success\",inverse:true},React.createElement(CardBody,null,React.createElement(CardTitle,{tag:\"h5\"},language.importSection.successRowCount),React.createElement(CardText,null,language.importSection.successRowText),React.createElement(Alert,{tag:\"h4\",color:\"info\"},\"325 rows\")))),React.createElement(Col,null,React.createElement(Card,{color:\"danger\",inverse:true},React.createElement(CardBody,null,React.createElement(CardTitle,{tag:\"h5\"},language.importSection.failedRowCount),React.createElement(CardText,null,language.importSection.failedRowText),React.createElement(Alert,{tag:\"h4\",color:\"info\"},\"40 rows\"))))),React.createElement(Row,null,React.createElement(Col,null,React.createElement(\"hr\",null),React.createElement(Button,{color:\"primary\",className:\"mt-3\",block:true,size:\"lg\",outline:true},language.importSection.downloadLogFile,React.createElement(\"i\",{className:\"icon icon-download-save ml-2\"}))))))))));}else{return React.createElement(React.Fragment,null);}}/*\r\n    {\"successfulRowCount\":35,\"totalRowProcessed\":50,\"errorRowCount\":15,\"exec_status\":\"success\"}\r\n    */},{key:\"render\",value:function render(){var _this4=this;var language=this.props.language;if(language){return React.createElement(Modal,{isOpen:this.props.open,size:'lg',centered:true},React.createElement(ModalHeader,{toggle:this.toggle.bind(this)},language.importDataMatrixFile),React.createElement(ModalBody,{className:'import-file'},React.createElement(\"input\",{ref:function ref(fileInput){return _this4.fileInput=fileInput;},type:\"file\",accept:SheetJSFT,onChange:this.handleSelectFile.bind(this),hidden:true}),React.createElement(Row,null,React.createElement(Col,{md:'12'},!this.state.file&&React.createElement(\"div\",{className:'choose-file-wrapper'},React.createElement(Button,{className:\"chose-file\",onClick:function onClick(){return _this4.fileInput.click();}},language.chooseFile)),this.state.file&&React.createElement(\"div\",{className:'choose-file-wrapper'},React.createElement(\"h4\",null,language.importSection.selectedFileLabel,this.state.file.name))),React.createElement(\"hr\",null),this.state.file&&React.createElement(Col,null,this.state.showButton2&&React.createElement(Button,{color:'primary',className:'mt-3 mb-3',size:\"lg\",block:true,onClick:this.handleFile.bind(this)},language.validate,React.createElement(\"i\",{className:\"icon icon-file ml-2\"})),this.state.isExcelHeadersValid===true&&React.createElement(Alert,{color:\"success\",className:'mt-2'},React.createElement(\"i\",{className:\"icon icon-check mr-2\"}),language.importSection.selectedFileValid),this.state.isExcelHeadersValid===false&&React.createElement(Alert,{color:\"danger\",className:'mt-2'},React.createElement(\"i\",{className:\"icon icon-cross mr-2\"}),language.importSection.selectedFileNotValid))),React.createElement(FileUploadProgress,{url:this.uploadFileUrl,method:\"POST\",beforeSend:function beforeSend(request){request.setRequestHeader('Content-Type','application/json;charset=UTF-8');return request;},onProgress:function onProgress(e,request,progress){console.log('progress',e,request,progress);_this4.props.setSpinner();},onLoad:function onLoad(e,request){console.log('load',e,request);_this4.props.setSpinner();},onError:function onError(e,request){console.log('error',e,request);_this4.props.setSpinner();},onAbort:function onAbort(e,request){console.log('abort',e,request);_this4.props.setSpinner();},formGetter:this.formGetter.bind(this),formRenderer:this.customFormRenderer.bind(this),progressRenderer:this.customProgressRenderer.bind(this)})));}else{return React.createElement(React.Fragment,null);}}}]);return ModalImportTemplate;}(React.Component);function mapStateToProps(state){return{open:state.modalImportToggle,import:state.import,language:state.language,token:state.token};}function mapDispatchToProps(dispatch){return{setModalImport:function setModalImport(){return dispatch(modalImportToggle());},setSpinner:function setSpinner(){return dispatch(spinnerToggle());}};}export default connect(mapStateToProps,mapDispatchToProps)(ModalImportTemplate);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/ModalImport.jsx"],"names":["React","connect","Modal","ModalHeader","ModalBody","modalImportToggle","spinnerToggle","FileUploadProgress","XLSX","make_cols","SheetJSFT","groupingMap","RestApiModule","Row","Col","Card","CardBody","CardTitle","CardText","CardHeader","CardFooter","Alert","Button","saveAs","ModalImportTemplate","props","state","file","data","cols","fileJSON","isExcelHeadersValid","uploadProgress","showButton1","showButton2","showButton3","process","env","REACT_APP_API_GATEWAY","REACT_APP_MATRIX_SERVICE","uploadFileUrl","restApi","fileInput","createRef","styleBar","width","e","files","target","setState","setSpinner","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","type","bookVBA","sheetRows","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","defval","JSON","stringify","handleJSONHeaders","readAsArrayBuffer","headerMap","parse","excelHeadersArray","columnsMap","reduce","fullArr","item","columns","arr","col","id","undefined","push","isSame","blob","Blob","setModalImport","onSubmit","language","upload","token","importedExcelAsJSON","progress","hasError","cancelHandler","progressBar","Object","assign","importSection","summaryLabel","totalRowCount","totalRowText","rows","successRowCount","successRowText","failedRowCount","failedRowText","downloadLogFile","open","toggle","bind","importDataMatrixFile","handleSelectFile","click","chooseFile","selectedFileLabel","name","handleFile","validate","selectedFileValid","selectedFileNotValid","request","setRequestHeader","console","log","formGetter","customFormRenderer","customProgressRenderer","Component","mapStateToProps","import","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {modalImportToggle, spinnerToggle} from \"../redux/actions\";\r\nimport FileUploadProgress from 'react-fileupload-progress';\r\nimport XLSX from \"xlsx\";\r\nimport {make_cols} from \"./MakeColumns\";\r\nimport {SheetJSFT} from './types';\r\nimport {groupingMap} from '../matrixDataMap';\r\nimport RestApiModule from '../RestApiModule';\r\nimport {Row, Col, Card, CardBody, CardTitle, CardText, CardHeader, CardFooter, Alert, Button} from 'reactstrap';\r\n\r\nimport {saveAs} from 'file-saver';\r\n\r\nclass ModalImportTemplate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            data: [],\r\n            cols: [],\r\n            fileJSON: {},\r\n            isExcelHeadersValid: null,\r\n            uploadProgress: 0,\r\n            showButton1: true,\r\n            showButton2: false,\r\n            showButton3: false,\r\n        }\r\n        const {REACT_APP_API_GATEWAY, REACT_APP_MATRIX_SERVICE} = process.env;\r\n\r\n        this.uploadFileUrl = `${REACT_APP_API_GATEWAY}${REACT_APP_MATRIX_SERVICE}/ImportDataMatrixFromExcel`;\r\n        this.restApi = new RestApiModule();\r\n\r\n        this.fileInput = React.createRef();\r\n\r\n        this.styleBar = {\r\n            width: 0,\r\n        }\r\n    }\r\n\r\n\r\n    handleSelectFile(e) {\r\n        const files = e.target.files;\r\n\r\n        if (files && files[0])\r\n            this.setState({\r\n                file: files[0],\r\n                showButton2: true\r\n            });\r\n    };\r\n\r\n    handleFile() {\r\n        /* Boilerplate to set up FileReader */\r\n        this.props.setSpinner();\r\n        try {\r\n\r\n            const reader = new FileReader();\r\n            const rABS = !!reader.readAsBinaryString;\r\n            reader.onload = (e) => {\r\n                /* Parse data */\r\n                const bstr = e.target.result;\r\n                const wb = XLSX.read(bstr, {type: rABS ? 'binary' : 'array', bookVBA: true, sheetRows: 0});\r\n                /* Get first worksheet */\r\n                const wsname = wb.SheetNames[0];\r\n                const ws = wb.Sheets[wsname];\r\n\r\n                /* Convert array of arrays */\r\n                const data = XLSX.utils.sheet_to_json(ws, {\r\n                    header: 1,\r\n                    defval: \"\"\r\n                });\r\n\r\n                /* Update state */\r\n                this.setState({data: data, cols: make_cols(ws['!ref'])}, () => {\r\n                    this.state.fileJSON = JSON.stringify(this.state.data, null, 2);\r\n                    this.handleJSONHeaders();\r\n\r\n                });\r\n                this.props.setSpinner();\r\n            };\r\n\r\n            if (rABS) {\r\n                reader.readAsBinaryString(this.state.file);\r\n            } else {\r\n                reader.readAsArrayBuffer(this.state.file);\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            this.setState({showButton3: false})\r\n            this.props.setSpinner();\r\n        }\r\n\r\n    }\r\n\r\n    handleJSONHeaders () {\r\n\r\n        const headerMap = JSON.parse(JSON.stringify(groupingMap));\r\n        const excelHeadersArray = (JSON.parse(this.state.fileJSON))[1];\r\n\r\n        const columnsMap = headerMap.reduce((fullArr, item) => {\r\n            const cols = item.columns.reduce((arr, col) => {\r\n                if (col.id !== undefined) arr.push(col.id)\r\n                return arr;\r\n            }, []);\r\n            return [...fullArr, ...cols]\r\n        }, [])\r\n\r\n        const isSame = JSON.stringify(excelHeadersArray) === JSON.stringify(columnsMap);\r\n        this.setState({isExcelHeadersValid: isSame, showButton3: isSame, showButton2: !isSame});\r\n    }\r\n\r\n\r\n    handleTxtReport() {\r\n        var blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\r\n        saveAs(blob, \"Import Report.txt\");\r\n    }\r\n\r\n\r\n    toggle() {\r\n        this.setState({\r\n            file: null,\r\n            isExcelHeadersValid: null,\r\n            showButton2: false,\r\n            showButton3: false,\r\n        })\r\n        this.props.setModalImport();\r\n    }\r\n\r\n    customFormRenderer(onSubmit) {\r\n        const {language} = this.props;\r\n\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <Button color={'success'} size={\"lg\"} block\r\n                            hidden={!this.state.showButton3}\r\n                            onClick={(e) => {\r\n                                this.setState({showButton3: false});\r\n                                onSubmit(e)\r\n                            }}>\r\n                        {language.upload}\r\n                        <i className={`icon icon-upload ml-2`}/>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    formGetter() {\r\n        return JSON.stringify({\r\n            token: this.props.token,\r\n            importedExcelAsJSON: this.state.fileJSON\r\n        });\r\n    }\r\n\r\n    customProgressRenderer(progress, hasError, cancelHandler) {\r\n        if (hasError || progress > -1) {\r\n\r\n            const {language} = this.props;\r\n\r\n            let progressBar = Object.assign({}, this.styleBar);\r\n            progressBar.width = `${progress}%`;\r\n\r\n            return (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className={\"progressWrapper text-center\"}>\r\n                                <span>Import progress: {`${progress}%`}</span>\r\n                                <div className={\"progressBar\"} style={progressBar} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {progress === 100 &&\r\n                     <>\r\n                         <Row>\r\n                             <Col>\r\n                                 <Card body={false}>\r\n                                     <CardHeader>\r\n                                         {language.importSection.summaryLabel}\r\n                                     </CardHeader>\r\n                                     <CardBody>\r\n                                         <Row>\r\n                                             <Col>\r\n                                                 <Card color={\"primary\"} inverse>\r\n                                                     <CardBody>\r\n                                                         <CardTitle tag={\"h5\"}>{language.importSection.totalRowCount}</CardTitle>\r\n                                                         <CardText>{language.importSection.totalRowText}</CardText>\r\n                                                         <Alert tag={\"h4\"} color={\"info\"}>365 {language.importSection.rows}</Alert>\r\n                                                     </CardBody>\r\n                                                 </Card>\r\n                                             </Col>\r\n                                             <Col>\r\n                                                 <Card color={\"success\"} inverse>\r\n                                                     <CardBody>\r\n                                                         <CardTitle tag={\"h5\"}>{language.importSection.successRowCount}</CardTitle>\r\n                                                         <CardText>{language.importSection.successRowText}</CardText>\r\n                                                         <Alert tag={\"h4\"} color={\"info\"}>325 rows</Alert>\r\n                                                     </CardBody>\r\n                                                 </Card>\r\n                                             </Col>\r\n                                             <Col>\r\n                                                 <Card color={\"danger\"} inverse>\r\n                                                     <CardBody>\r\n                                                         <CardTitle tag={\"h5\"}>{language.importSection.failedRowCount}</CardTitle>\r\n                                                         <CardText>{language.importSection.failedRowText}</CardText>\r\n                                                         <Alert tag={\"h4\"} color={\"info\"}>40 rows</Alert>\r\n                                                     </CardBody>\r\n                                                 </Card>\r\n                                             </Col>\r\n                                         </Row>\r\n                                         <Row>\r\n                                             <Col>\r\n                                                 <hr/>\r\n                                                 <Button color={\"primary\"} className={\"mt-3\"} block size={\"lg\"} outline>\r\n                                                     {language.importSection.downloadLogFile}\r\n                                                     <i className={`icon icon-download-save ml-2`}/>\r\n                                                 </Button>\r\n                                             </Col>\r\n                                         </Row>\r\n                                     </CardBody>\r\n                                 </Card>\r\n                             </Col>\r\n                         </Row>\r\n\r\n                     </>\r\n                    }\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n    /*\r\n    {\"successfulRowCount\":35,\"totalRowProcessed\":50,\"errorRowCount\":15,\"exec_status\":\"success\"}\r\n    */\r\n    render() {\r\n        const {language} = this.props;\r\n        if (language) {\r\n            return (\r\n                <Modal isOpen={this.props.open} size={'lg'} centered={true}>\r\n                    <ModalHeader toggle={this.toggle.bind(this)}>{language.importDataMatrixFile}</ModalHeader>\r\n                    <ModalBody className={'import-file'}>\r\n\r\n                        <input ref={fileInput => this.fileInput = fileInput} type=\"file\"\r\n                               accept={SheetJSFT} onChange={this.handleSelectFile.bind(this)} hidden={true}  />\r\n\r\n                        <Row>\r\n                            <Col md={'12'}>\r\n                                {!this.state.file &&\r\n                                <div className={'choose-file-wrapper'}>\r\n                                    <Button className={\"chose-file\"} onClick={() => this.fileInput.click()}>\r\n                                        {language.chooseFile}\r\n                                    </Button>\r\n                                </div>\r\n                                }\r\n                                {this.state.file &&\r\n                                <div className={'choose-file-wrapper'}>\r\n                                    <h4>\r\n                                        {language.importSection.selectedFileLabel}\r\n                                        {this.state.file.name}\r\n                                    </h4>\r\n                                </div>\r\n                                }\r\n                            </Col>\r\n                            <hr/>\r\n\r\n                            {this.state.file &&\r\n                            <Col>\r\n                                {this.state.showButton2 &&\r\n                                <Button color={'primary'} className={'mt-3 mb-3'} size={\"lg\"} block\r\n                                        onClick={this.handleFile.bind(this)}>\r\n                                    {language.validate}\r\n                                    <i className={`icon icon-file ml-2`}/>\r\n                                </Button>\r\n                                }\r\n                                {this.state.isExcelHeadersValid === true &&\r\n                                <Alert color=\"success\" className={'mt-2'}>\r\n                                    <i className={`icon icon-check mr-2`}/>\r\n                                    {language.importSection.selectedFileValid}\r\n                                </Alert>\r\n                                }\r\n                                {this.state.isExcelHeadersValid === false &&\r\n                                <Alert color=\"danger\" className={'mt-2'}>\r\n                                    <i className={`icon icon-cross mr-2`}/>\r\n                                    {language.importSection.selectedFileNotValid}\r\n                                </Alert>\r\n                                }\r\n                            </Col>\r\n                            }\r\n                        </Row>\r\n\r\n                        <FileUploadProgress\r\n                            url={this.uploadFileUrl}\r\n                            method={\"POST\"}\r\n                            beforeSend={(request) => {\r\n                                request.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\r\n                                return request\r\n                            }}\r\n                            onProgress={(e, request, progress) => {\r\n                                console.log('progress', e, request, progress);\r\n                                this.props.setSpinner();\r\n                            }}\r\n                            onLoad={(e, request) => {\r\n                                console.log('load', e, request);\r\n                                this.props.setSpinner();\r\n                            }}\r\n                            onError={(e, request) => {\r\n                                console.log('error', e, request);\r\n                                this.props.setSpinner();\r\n                            }}\r\n                            onAbort={(e, request) => {\r\n                                console.log('abort', e, request);\r\n                                this.props.setSpinner();\r\n                            }}\r\n                            formGetter={this.formGetter.bind(this)}\r\n                            formRenderer={this.customFormRenderer.bind(this)}\r\n                            progressRenderer={this.customProgressRenderer.bind(this)}\r\n\r\n                        />\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        open: state.modalImportToggle,\r\n        import: state.import,\r\n        language: state.language,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setModalImport: () => dispatch(modalImportToggle()),\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalImportTemplate);"]},"metadata":{},"sourceType":"module"}