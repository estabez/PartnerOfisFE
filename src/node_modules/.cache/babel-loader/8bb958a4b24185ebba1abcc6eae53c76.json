{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezerdon\\\\Desktop\\\\INWI\\\\svn reps\\\\E2E_Topology\\\\E2ETopologyFrontend\\\\src\\\\src\\\\components\\\\ModalExport.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { modalExportToggle, spinnerToggle } from \"../redux/actions\";\nimport RestApiModule from '../RestApiModule';\nimport { CSVLink } from 'react-csv';\n\nclass ModalExport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileJSON: []\n    };\n    this.today = new Date();\n    this.todayDate = this.today.getFullYear() + '-' + (this.today.getMonth() + 1) + '-' + this.today.getDate();\n    this.fileName = 'DataMatrix_' + this.todayDate + '.csv';\n    this.restApi = new RestApiModule();\n  }\n\n  toggle() {\n    this.props.setModalExport();\n  }\n\n  setStateAsync(state) {\n    return new Promise(resolve => {\n      this.setState(state, resolve);\n    });\n  }\n\n  componentDidMount() {\n    this.getExportDataJSON();\n  }\n\n  getExportDataJSON() {\n    console.log(this.props.regions);\n\n    if (this.props.regions[0]) {\n      this.restApi.callApi('exportData', {\n        token: this.props.token,\n        region: this.props.regions[0]\n      }).then(response => {\n        this.setStateAsync({\n          fileJSON: response.ExportedExcelAsJSON\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const language = this.props.language;\n\n    if (language) {\n      return React.createElement(Modal, {\n        isOpen: this.props.open,\n        size: 'l',\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, language.exportDataMatrixFile), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'col-4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: 'col-8',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.fileName), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        data: this.state.fileJSON,\n        filename: this.fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Export\"))))));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    open: state.modalExportToggle,\n    export: state.export,\n    language: state.language,\n    token: state.token,\n    regions: state.regions\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setModalExport: () => dispatch(modalExportToggle()),\n    setSpinner: () => dispatch(spinnerToggle())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalExport);","map":{"version":3,"sources":["C:/Users/ezerdon/Desktop/INWI/svn reps/E2E_Topology/E2ETopologyFrontend/src/src/components/ModalExport.jsx"],"names":["React","connect","Modal","ModalHeader","ModalBody","modalExportToggle","spinnerToggle","RestApiModule","CSVLink","ModalExport","Component","constructor","props","state","fileJSON","today","Date","todayDate","getFullYear","getMonth","getDate","fileName","restApi","toggle","setModalExport","setStateAsync","Promise","resolve","setState","componentDidMount","getExportDataJSON","console","log","regions","callApi","token","region","then","response","ExportedExcelAsJSON","catch","error","render","language","open","bind","exportDataMatrixFile","mapStateToProps","export","mapDispatchToProps","dispatch","setSpinner"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,SAA5B,QAA4C,YAA5C;AACA,SAAQC,iBAAR,EAA2BC,aAA3B,QAA+C,kBAA/C;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKC,KAAL,GAAa,IAAIC,IAAJ,EAAb;AACA,SAAKC,SAAL,GAAiB,KAAKF,KAAL,CAAWG,WAAX,KAA2B,GAA3B,IAAkC,KAAKH,KAAL,CAAWI,QAAX,KAAsB,CAAxD,IAA6D,GAA7D,GAAmE,KAAKJ,KAAL,CAAWK,OAAX,EAApF;AACA,SAAKC,QAAL,GAAgB,gBAAgB,KAAKJ,SAArB,GAAiC,MAAjD;AACA,SAAKK,OAAL,GAAe,IAAIf,aAAJ,EAAf;AACH;;AAGDgB,EAAAA,MAAM,GAAG;AACL,SAAKX,KAAL,CAAWY,cAAX;AACH;;AACDC,EAAAA,aAAa,CAACZ,KAAD,EAAQ;AACjB,WAAO,IAAIa,OAAJ,CAAaC,OAAD,IAAa;AAC5B,WAAKC,QAAL,CAAcf,KAAd,EAAqBc,OAArB;AACH,KAFM,CAAP;AAGH;;AAGDE,EAAAA,iBAAiB,GAAI;AACrB,SAAKC,iBAAL;AACC;;AAGDA,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWqB,OAAvB;;AACA,QAAG,KAAKrB,KAAL,CAAWqB,OAAX,CAAmB,CAAnB,CAAH,EAA0B;AACtB,WAAKX,OAAL,CAAaY,OAAb,CAAqB,YAArB,EAAmC;AAC/BC,QAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWuB,KADa;AAE/BC,QAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWqB,OAAX,CAAmB,CAAnB;AAFuB,OAAnC,EAGGI,IAHH,CAGQC,QAAQ,IAAI;AAChB,aAAKb,aAAL,CAAmB;AAACX,UAAAA,QAAQ,EAAEwB,QAAQ,CAACC;AAApB,SAAnB;AACH,OALD,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,OAPD;AAQH;AACJ;;AAIDC,EAAAA,MAAM,GAAG;AAAA,UACEC,QADF,GACc,KAAK/B,KADnB,CACE+B,QADF;;AAEL,QAAIA,QAAJ,EAAc;AACV,aACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAK/B,KAAL,CAAWgC,IAA1B;AAAgC,QAAA,IAAI,EAAE,GAAtC;AAA2C,QAAA,QAAQ,EAAE,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKrB,MAAL,CAAYsB,IAAZ,CAAiB,IAAjB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8CF,QAAQ,CAACG,oBAAvD,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKzB,QAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,QAA1B;AAAoC,QAAA,QAAQ,EAAE,KAAKO,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAFJ,CAFJ,CADJ,CAFJ,CADJ;AAgBH,KAjBD,MAiBO;AACH,aAAQ,yCAAR;AACH;AACJ;;AAlEqC;;AAqE1C,SAAS0B,eAAT,CAAyBlC,KAAzB,EAAgC;AAC5B,SAAO;AACH+B,IAAAA,IAAI,EAAE/B,KAAK,CAACR,iBADT;AAEH2C,IAAAA,MAAM,EAAEnC,KAAK,CAACmC,MAFX;AAGHL,IAAAA,QAAQ,EAAE9B,KAAK,CAAC8B,QAHb;AAIHR,IAAAA,KAAK,EAAEtB,KAAK,CAACsB,KAJV;AAKHF,IAAAA,OAAO,EAAEpB,KAAK,CAACoB;AALZ,GAAP;AAOH;;AAED,SAASgB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH1B,IAAAA,cAAc,EAAE,MAAM0B,QAAQ,CAAC7C,iBAAiB,EAAlB,CAD3B;AAEH8C,IAAAA,UAAU,EAAE,MAAMD,QAAQ,CAAC5C,aAAa,EAAd;AAFvB,GAAP;AAIH;;AAED,eAAeL,OAAO,CAAC8C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxC,WAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {modalExportToggle, spinnerToggle} from \"../redux/actions\";\r\nimport RestApiModule from '../RestApiModule';\r\nimport { CSVLink } from 'react-csv'\r\n\r\nclass ModalExport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileJSON: [],\r\n        }\r\n        this.today = new Date();\r\n        this.todayDate = this.today.getFullYear() + '-' + (this.today.getMonth()+1) + '-' + this.today.getDate();\r\n        this.fileName = 'DataMatrix_' + this.todayDate + '.csv';\r\n        this.restApi = new RestApiModule();\r\n    }\r\n\r\n\r\n    toggle() {\r\n        this.props.setModalExport();\r\n    }\r\n    setStateAsync(state) {\r\n        return new Promise((resolve) => {\r\n            this.setState(state, resolve)\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n    this.getExportDataJSON();\r\n    }\r\n\r\n\r\n    getExportDataJSON () {\r\n        console.log(this.props.regions)\r\n        if(this.props.regions[0]) {\r\n            this.restApi.callApi('exportData', {\r\n                token: this.props.token,\r\n                region: this.props.regions[0]\r\n            }).then(response => {\r\n                this.setStateAsync({fileJSON: response.ExportedExcelAsJSON});\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {language} = this.props;\r\n        if (language) {\r\n            return (\r\n                <Modal isOpen={this.props.open} size={'l'} centered={true}>\r\n                    <ModalHeader toggle={this.toggle.bind(this)}>{language.exportDataMatrixFile}</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className={'row'}>\r\n                            <div className={'col-4'}></div>\r\n                            <div className={'col-8'}>\r\n                                <label >{this.fileName}</label>\r\n                                <button>\r\n                                    <CSVLink data={this.state.fileJSON} filename={this.fileName} >Export</CSVLink>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            )\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        open: state.modalExportToggle,\r\n        export: state.export,\r\n        language: state.language,\r\n        token: state.token,\r\n        regions: state.regions\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setModalExport: () => dispatch(modalExportToggle()),\r\n        setSpinner: () => dispatch(spinnerToggle()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalExport);"]},"metadata":{},"sourceType":"module"}